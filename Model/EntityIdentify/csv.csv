,intent,intent_group,intent_group_index,intent_index,sentence,sentence_index,similarity
28,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,Choosing the right partitioning scheme,29.0,0.0
29,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"ModelFinder implements a greedy strategy (Lanfear et al., 2012) that starts with the full partition model and subsequentially merges two genes until the model fit does not increase any further:",30.0,0.0
30,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m MFP+MERGE
# for version 1.x change -p to -spp
",31.0,0.0
31,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"Note that this command considers the FreeRate heterogeneity model (see model selection tutorial). If you want to resemble PartitionFinder by just considering the invariable site and Gamma rate heterogeneity (thus saving computation times), then run:",32.0,0.0
32,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m TESTMERGE
# for version 1.x change -p to -spp
",33.0,0.0
33,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"After ModelFinder found the best partition, IQ-TREE will immediately start the tree reconstruction under the best-fit partition model. Sometimes you only want to find the best-fit partition model without doing tree reconstruction, then run:",34.0,0.0
34,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m MF+MERGE
# for version 1.x change -p to -spp
",35.0,0.0
35,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,To resemble PartitionFinder and save time:,36.0,0.0
36,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m TESTMERGEONLY
# for version 1.x change -p to -spp
",37.0,0.0
37,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"To reduce the computational burden IQ-TREE implements the relaxed hierarchical clustering algorithm (Lanfear et al., 2014), which is invoked via -rcluster option:",38.0,0.5
38,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m MF+MERGE -rcluster 10
# for version 1.x change -p to -spp
",39.0,0.0
39,Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,to only examine the top 10% partition merging schemes (similar to the --rcluster-percent 10 option in PartitionFinder).,40.0,0.0
40,Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,Ultrafast bootstrapping with partition model,41.0,0.0
41,Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"IQ-TREE can perform the ultrafast bootstrap with partition models by e.g.,",42.0,0.0
42,Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"iqtree -s example.phy -p example.nex -B 1000
# for version 1.x change -p to -spp and -B to -bb
",43.0,0.0
43,Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"Here, IQ-TREE will resample the sites within partitions (i.e., the bootstrap replicates are generated per partition separately and then concatenated together). The same holds true if you do the standard nonparametric bootstrap.",44.0,0.5
44,Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"IQ-TREE supports the partition-resampling strategy as suggested by (Nei et al., 2001):",45.0,0.5
45,Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"iqtree -s example.phy -p example.nex -B 1000 --sampling GENE
# for version 1.x change -p to -spp and -B to -bb and --sampling to -bsam
",46.0,0.0
46,Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"to resample partitions instead of sites. Moreover, IQ-TREE allows an even more complicated strategy: resampling partitions and then sites within resampled partitions (Gadagkar et al., 2005; Seo et al., 2005). This may help to reduce false positives (i.e. wrong branch receiving 100% support):",47.0,0.0
47,Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"iqtree -s example.phy -p example.nex -B 1000 --sampling GENESITE
# for version 1.x change -p to -spp and -B to -bb and --sampling to -bsam
",48.0,0.0
48,Constrained tree search,Advanced tutorial,1.0,5.0,Constrained tree search,49.0,0.0
49,Constrained tree search,Advanced tutorial,1.0,5.0,"IQ-TREE supports constrained tree search via -g option, so that the resulting tree must obey a constraint tree topology. The constraint tree can be multifurcating and need not to contain all species. To illustrate, letâ€™s return to the first running example, where we want to force Human grouping with Seal whereas Cow with Whale. If you use the following constraint tree (NEWICK format):",50.0,0.5
50,Constrained tree search,Advanced tutorial,1.0,5.0,"((Human,Seal),(Cow,Whale));
",51.0,0.0
51,Constrained tree search,Advanced tutorial,1.0,5.0,Save this to a file example.constr0 and run:,52.0,0.0
52,Constrained tree search,Advanced tutorial,1.0,5.0,"iqtree -s example.phy -m TIM2+I+G -g example.constr0 --prefix example.constr0
# for version 1.x change --prefix to -pre
",53.0,0.0
53,Constrained tree search,Advanced tutorial,1.0,5.0,(We use a prefix in order not to overwrite output files of the previous run). The resulting part of the tree extracted from example.constr0.iqtree looks exactly like a normal unconstrained tree search:,54.0,0.0
54,Constrained tree search,Advanced tutorial,1.0,5.0,"        +--------------Human
     +--|
     |  |  +------Seal
     |  +--|
     |     |  +-----Cow
     |     +--|
     |        +-------Whale
+----|
|    |         +---Mouse
|    +---------|
|              +------Rat
",55.0,0.0
55,Constrained tree search,Advanced tutorial,1.0,5.0,"This is the correct behavior: although Human and Seal are not monophyletic, this tree indeed satisfies the constraint, because the induced subtree separates (Human,Seal) from (Cow,Whale). This comes from the fact that the tree is unrooted. If you want them to be sister groups, then you need to include outgroup taxa into the constraint tree. For example:",56.0,0.0
56,Constrained tree search,Advanced tutorial,1.0,5.0,"((Human,Seal),(Cow,Whale),Mouse);
",57.0,0.0
57,Constrained tree search,Advanced tutorial,1.0,5.0,Save this to example.constr1 and run:,58.0,0.0
58,Constrained tree search,Advanced tutorial,1.0,5.0,"iqtree -s example.phy -m TIM2+I+G -g example.constr1 --prefix example.constr1
# for version 1.x change --prefix to -pre
",59.0,0.0
59,Constrained tree search,Advanced tutorial,1.0,5.0,The resulting part of the tree is then:,60.0,0.0
60,Constrained tree search,Advanced tutorial,1.0,5.0,"           +---------------Human
        +--|
        |  +------Seal
     +--|
     |  |  +-----Cow
     |  +--|
     |     +-------Whale
+----|
|    |         +---Mouse
|    +---------|
|              +------Rat
",61.0,0.0
61,Constrained tree search,Advanced tutorial,1.0,5.0,which shows the desired effect.,62.0,0.0
62,Constrained tree search,Advanced tutorial,1.0,5.0,"NOTE: While this option helps to enforce the tree based on prior knowledge, it is advised to always perform tree topology tests to make sure that the resulting constrained tree is NOT significantly worse than an unconstrained tree! See tree topology tests and testing constrained tree below for a guide how to check this.",63.0,0.0
63,Tree topology tests,Advanced tutorial,1.0,6.0,Tree topology tests,64.0,0.0
64,Tree topology tests,Advanced tutorial,1.0,6.0,IQ-TREE can compute log-likelihoods of a set of trees passed via the -z option:,65.0,0.0
65,Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -m GTR+G
",66.0,0.0
66,Tree topology tests,Advanced tutorial,1.0,6.0,"assuming that example.treels is an existing file containing a set of trees in NEWICK format. IQ-TREE first reconstructs an ML tree. Then, it will compute the log-likelihood of the trees in example.treels based on the estimated parameters done for the ML tree. example.phy.iqtree will have a section called USER TREES that lists the tree IDs and the corresponding log-likelihoods. The trees with optimized branch lengths can be found in example.phy.treels.trees If you only want to evaluate the trees without reconstructing the ML tree, you can run:",67.0,0.0
67,Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -n 0
",68.0,0.0
68,Tree topology tests,Advanced tutorial,1.0,6.0,"Here, the number of search iterations is set to 0 (-n 0), such that model parameters are quickly estimated from an initial parsimony tree, which is normally accurate enough for our purpose. If you, however, prefer to estimate model parameters based on a tree (e.g. reconstructed previously), use -te <treefile> option.",69.0,0.5
69,Tree topology tests,Advanced tutorial,1.0,6.0,"IQ-TREE also supports several tree topology tests using the RELL approximation (Kishino et al., 1990). This includes bootstrap proportion (BP), Kishino-Hasegawa test (Kishino and Hasegawa, 1989), Shimodaira-Hasegawa test (Shimodaira and Hasegawa, 1999), expected likelihood weights (Strimmer and Rambaut, 2002):",70.0,0.0
70,Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -n 0 -zb 1000
",71.0,0.0
71,Tree topology tests,Advanced tutorial,1.0,6.0,"Here, -zb specifies the number of RELL replicates, where 1000 is the recommended minimum number. The USER TREES section of example.phy.iqtree will list the results of BP, KH, SH, and ELW methods.",72.0,0.0
72,Tree topology tests,Advanced tutorial,1.0,6.0,"If you also want to perform the weighted KH and weighted SH tests, simply add -zw option:",73.0,0.0
73,Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -n 0 -zb 1000 -zw
",74.0,0.0
74,Tree topology tests,Advanced tutorial,1.0,6.0,"Starting with version 1.4.0 IQ-TREE supports approximately unbiased (AU) test (Shimodaira, 2002) via -au option:",75.0,0.0
75,Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -n 0 -zb 1000 -zw -au
",76.0,0.0
76,Tree topology tests,Advanced tutorial,1.0,6.0,This will perform all above tests plus the AU test.,77.0,0.0
77,Tree topology tests,Advanced tutorial,1.0,6.0,"Finally, note that IQ-TREE will automatically detect duplicated tree topologies and omit them during the evaluation.",78.0,0.0
78,Tree topology tests,Advanced tutorial,1.0,6.0,"HINTS:The KH, SH and AU tests return p-values, thus a tree is rejected if its p-value < 0.05 (marked with a - sign).bp-RELL and c-ELW return posterior weights which are not p-value. The weights sum up to 1 across the trees tested.The KH test (Kishino and Hasegawa, 1989) was designed to test 2 trees and thus has no correction for multiple testing. The SH test (Shimodaira and Hasegawa, 1999) fixes this problem.However, the SH test becomes too conservative (i.e., rejecting fewer trees than expected) when testing many trees. The AU test (Shimodaira, 2002) fixes this problem and is thus recommended as replacement for both KH and SH tests.",79.0,0.0
127,Input data,Beginnerâ€™s tutorial,2.0,12.0,Input data,128.0,0.0
128,Input data,Beginnerâ€™s tutorial,2.0,12.0,"IQ-TREE takes as input a multiple sequence alignment and will reconstruct an evolutionary tree that is best explained by the input data. If you have raw (unaligned) sequences, you need to first run an alignment program like MAFFT or ClustalW to align the sequences, before feeding them into IQ-TREE.",129.0,0.0
129,Input data,Beginnerâ€™s tutorial,2.0,12.0,The input alignment can be in various common formats. For example the PHYLIP format which may look like:,130.0,0.0
130,Input data,Beginnerâ€™s tutorial,2.0,12.0,"7 28
Frog       AAATTTGGTCCTGTGATTCAGCAGTGAT
Turtle     CTTCCACACCCCAGGACTCAGCAGTGAT
Bird       CTACCACACCCCAGGACTCAGCAGTAAT
Human      CTACCACACCCCAGGAAACAGCAGTGAT
Cow        CTACCACACCCCAGGAAACAGCAGTGAC
Whale      CTACCACGCCCCAGGACACAGCAGTGAT
Mouse      CTACCACACCCCAGGACTCAGCAGTGAT
",131.0,0.0
131,Input data,Beginnerâ€™s tutorial,2.0,12.0,"This tiny alignment contains 7 DNA sequences from several animals with the sequence length of 28 nucleotides. IQ-TREE also supports other file formats such as FASTA, NEXUS, CLUSTALW. The FASTA file for the above example may look like this:",132.0,0.0
132,Input data,Beginnerâ€™s tutorial,2.0,12.0,">Frog       
AAATTTGGTCCTGTGATTCAGCAGTGAT
>Turtle     
CTTCCACACCCCAGGACTCAGCAGTGAT
>Bird       
CTACCACACCCCAGGACTCAGCAGTAAT
>Human      
CTACCACACCCCAGGAAACAGCAGTGAT
>Cow        
CTACCACACCCCAGGAAACAGCAGTGAC
>Whale      
CTACCACGCCCCAGGACACAGCAGTGAT
>Mouse      
CTACCACACCCCAGGACTCAGCAGTGAT
",133.0,0.0
133,Input data,Beginnerâ€™s tutorial,2.0,12.0,"TIP: From version 2 you can input a directory of alignment files. IQ-TREE 2 will load and concatenate all alignments within the directory, eliminating the need for users to manually perform this step.",134.0,0.0
151,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,Choosing the right substitution model,152.0,0.0
152,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,NOTE: If you use model selection please cite the following paper:,153.0,0.0
153,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"S. Kalyaanamoorthy, B.Q. Minh, T.K.F. Wong, A. von Haeseler, and L.S. Jermiin (2017) ModelFinder: fast model selection for accurate phylogenetic estimates. Nat. Methods, 14:587â€“589. DOI: 10.1038/nmeth.4285",154.0,0.0
154,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"IQ-TREE supports a wide range of substitution models for DNA, protein, codon, binary and morphological alignments. If you do not know which model is appropriate for your data, you can use ModelFinder to determine the best-fit model:",155.0,0.0
155,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"iqtree -s example.phy -m MFP
# change -m MFP to -m TEST to resemble jModelTest/ProtTest
",156.0,0.0
156,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"-m is the option to specify the model name to use during the analysis. The special MFP key word stands for ModelFinder Plus, which tells IQ-TREE to perform ModelFinder and the remaining analysis using the selected model. ModelFinder computes the log-likelihoods of an initial parsimony tree for many different models and the Akaike information criterion (AIC), corrected Akaike information criterion (AICc), and the Bayesian information criterion (BIC). Then ModelFinder chooses the model that minimizes the BIC score (you can also change to AIC or AICc by adding the option -AIC or -AICc, respectively).",157.0,0.0
157,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"TIP: Starting with version 1.5.4, -m MFP is the default behavior. Thus, this run is equivalent to iqtree -s example.phy.",158.0,0.0
158,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"Here, IQ-TREE will write an additional file:",159.0,0.0
159,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,example.phy.model: log-likelihoods for all models tested. It serves as a checkpoint file to recover an interrupted model selection.,160.0,0.0
160,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"If you now look at example.phy.iqtree you will see that IQ-TREE selected TIM2+I+G4 as the best-fit model for this example data. Thus, for additional analyses you do not have to perform the model test again and can use the selected model:",161.0,0.0
161,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"iqtree -s example.phy -m TIM2+I+G
",162.0,0.0
162,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"Sometimes you only want to find the best-fit model without doing tree reconstruction, then run:",163.0,0.0
163,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"iqtree -s example.phy -m MF
# change -m MF to -m TESTONLY to resemble jModelTest/ProtTest
",164.0,0.0
164,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"By default, the maximum number of categories is limitted to 10 due to computational reasons. If your sequence alignment is long enough, then you can increase this upper limit with the cmax option:",165.0,0.0
165,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"iqtree -s example.phy -m MF -cmax 15
",166.0,0.0
166,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,will test +R2 to +R15 instead of at most +R10.,167.0,0.0
167,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"To reduce computational burden, one can use the option -mset to restrict the testing procedure to a subset of base models instead of testing the entire set of all available models. For example, -mset WAG,LG will test only models like WAG+... or LG+.... Another useful option in this respect is -msub for AA data sets. With -msub nuclear only general AA models are included, whereas with -msub viral only AA models for viruses are included.",168.0,5.0
168,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"If you have enough computational resource, you can perform a thorough and more accurate analysis that invokes a full tree search for each model considered via the -mtree option:",169.0,0.0
169,Choosing the right substitution model,Beginnerâ€™s tutorial,2.0,14.0,"iqtree -s example.phy -m MF -mtree
",170.0,0.0
176,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"Binary, morphological and SNP data",177.0,0.0
177,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"Binary alignments contain sequences with characters 0 and 1, which can be in any common formats supported by IQ-TREE, for example, in PHYLIP format:",178.0,0.0
178,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"4 6
S1   010101
S2   110011
S3   0--100
S4   10--10
",179.0,0.0
179,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,Morphological alignments have an extended characeter alphabet of 0-9 and A-Z (for states 10-31). For example (PHYLIP format):,180.0,0.0
180,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"4 10
S1   0123401234
S2   03---20432
S3   3202-04--0
S4   4230120340
",181.0,0.0
181,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,IQ-TREE will automatically determine the sequence type and the alphabet size. To run IQ-TREE on such alignments:,182.0,0.0
182,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"iqtree -s morphology.phy
",183.0,0.0
183,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,or,184.0,0.0
184,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"iqtree -s morphology.phy -st MORPH
",185.0,0.0
185,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"IQ-TREE implements to two morphological ML models: MK and ORDERED. Morphological data typically do not have constant (uninformative) sites. In such cases, you should apply ascertainment bias correction model by e.g.:",186.0,0.0
186,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"iqtree -s morphology.phy -st MORPH -m MK+ASC
",187.0,0.0
187,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,You can again select the best-fit binary/morphological model:,188.0,0.0
188,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"iqtree -s morphology.phy -st MORPH
",189.0,0.0
189,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"For SNP data (DNA) that typically do not contain constant sites, you can explicitly tell the model to include ascertainment bias correction:",190.0,0.0
190,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"iqtree -s SNP_data.phy -m GTR+ASC
",191.0,0.0
191,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,You can explicitly tell model testing to only include +ASC model with:,192.0,0.0
192,"Binary, morphological and SNP data",Beginnerâ€™s tutorial,2.0,16.0,"iqtree -s SNP_data.phy -m MFP+ASC
",193.0,0.0
193,Assessing branch supports with ultrafast bootstrap approximation,Beginnerâ€™s tutorial,2.0,17.0,Assessing branch supports with ultrafast bootstrap approximation,194.0,0.0
194,Assessing branch supports with ultrafast bootstrap approximation,Beginnerâ€™s tutorial,2.0,17.0,"To overcome the computational burden required by the nonparametric bootstrap, IQ-TREE introduces an ultrafast bootstrap approximation (UFBoot) (Minh et al., 2013; Hoang et al., 2018) that is orders of magnitude faster than the standard procedure and provides relatively unbiased branch support values. Citation for UFBoot:",195.0,0.0
195,Assessing branch supports with ultrafast bootstrap approximation,Beginnerâ€™s tutorial,2.0,17.0,"D.T. Hoang, O. Chernomor, A. von Haeseler, B.Q. Minh, and L.S. Vinh (2018) UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol., 35:518â€“522. https://doi.org/10.1093/molbev/msx281",196.0,0.0
196,Assessing branch supports with ultrafast bootstrap approximation,Beginnerâ€™s tutorial,2.0,17.0,To run UFBoot:,197.0,0.0
197,Assessing branch supports with ultrafast bootstrap approximation,Beginnerâ€™s tutorial,2.0,17.0,"iqtree -s example.phy -m TIM2+I+G -B 1000
# for version 1.x change -B to -bb
",198.0,0.0
198,Assessing branch supports with ultrafast bootstrap approximation,Beginnerâ€™s tutorial,2.0,17.0,"-B specifies the number of bootstrap replicates where 1000 is the minimum number recommended. The section MAXIMUM LIKELIHOOD TREE in example.phy.iqtree shows a textual representation of the maximum likelihood tree with branch support values in percentage. The NEWICK format of the tree is printed to the file example.phy.treefile. In addition, IQ-TREE writes the following files:",199.0,0.0
199,Assessing branch supports with ultrafast bootstrap approximation,Beginnerâ€™s tutorial,2.0,17.0,"example.phy.contree: the consensus tree with assigned branch supports where branch lengths are optimized on the original alignment.example.phy.splits.nex: support values in percentage for all splits (bipartitions), computed as the occurence frequencies in the bootstrap trees. This file can be viewed with the program SplitsTree to explore the conflicting signals in the data. So it is more informative than consensus tree, e.g. you can see how highly supported the second best conflicting split is, which had no chance to enter the consensus tree.example.phy.splits (if using -wsplits option): This file contains the same information as example.phy.splits.nex but in star-dot format.",200.0,0.0
200,Assessing branch supports with ultrafast bootstrap approximation,Beginnerâ€™s tutorial,2.0,17.0,NOTE: UFBoot support values have a different interpretation to the standard bootstrap. Refer to FAQ: UFBoot support values interpretation for more information.,201.0,0.0
201,Reducing impact of severe model violations with UFBoot,Beginnerâ€™s tutorial,2.0,18.0,Reducing impact of severe model violations with UFBoot,202.0,0.0
202,Reducing impact of severe model violations with UFBoot,Beginnerâ€™s tutorial,2.0,18.0,Starting with IQ-TREE version 1.6 we provide a new option -bnni to reduce the risk of overestimating branch supports with UFBoot due to severe model violations. With this option UFBoot will further optimize each bootstrap tree using a hill-climbing nearest neighbor interchange (NNI) search based directly on the corresponding bootstrap alignment.,203.0,0.0
203,Reducing impact of severe model violations with UFBoot,Beginnerâ€™s tutorial,2.0,18.0,"Thus, if severe model violations are present in the data set at hand, users are advised to append -bnni to the regular UFBoot command:",204.0,0.0
204,Reducing impact of severe model violations with UFBoot,Beginnerâ€™s tutorial,2.0,18.0,"iqtree -s example.phy -m TIM2+I+G -B 1000 -bnni
# for version 1.x change -B to -bb
",205.0,0.0
205,Assessing branch supports with standard nonparametric bootstrap,Beginnerâ€™s tutorial,2.0,19.0,Assessing branch supports with standard nonparametric bootstrap,206.0,0.0
206,Assessing branch supports with standard nonparametric bootstrap,Beginnerâ€™s tutorial,2.0,19.0,The standard nonparametric bootstrap is invoked by the -b option:,207.0,0.0
207,Assessing branch supports with standard nonparametric bootstrap,Beginnerâ€™s tutorial,2.0,19.0,"iqtree -s example.phy -m TIM2+I+G -b 100
",208.0,0.0
208,Assessing branch supports with standard nonparametric bootstrap,Beginnerâ€™s tutorial,2.0,19.0,-b specifies the number of bootstrap replicates where 100 is the minimum recommended number. The output files are similar to those produced by the UFBoot procedure.,209.0,0.0
209,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,Assessing branch supports with single branch tests,210.0,0.0
210,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,"IQ-TREE provides an implementation of the SH-like approximate likelihood ratio test (Guindon et al., 2010). To perform this test, run:",211.0,0.0
211,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,"iqtree -s example.phy -m TIM2+I+G -alrt 1000
",212.0,0.0
212,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,-alrt specifies the number of bootstrap replicates for SH-aLRT where 1000 is the minimum number recommended.,213.0,0.0
213,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,"IQ-TREE also supports other tests such as the aBayes test (Anisimova et al., 2011) and the local bootstrap test (Adachi and Hasegawa, 1996b). See single branch tests for more details.",214.0,0.0
214,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,You can also perform both SH-aLRT and the ultrafast bootstrap within one single run:,215.0,0.0
215,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,"iqtree -s example.phy -m TIM2+I+G -alrt 1000 -B 1000
# for version 1.x change -B to -bb
",216.0,0.0
216,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,"The branches of the resulting .treefile will be assigned with both SH-aLRT and UFBoot support values, which are readable by any tree viewer program like FigTree, Dendroscope or ETE. You can also look at the textual tree figure in .iqtree file:",217.0,0.0
217,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,"NOTE: Tree is UNROOTED although outgroup taxon 'LngfishAu' is drawn at root
Numbers in parentheses are SH-aLRT support (%) / ultrafast bootstrap support (%)

+-------------LngfishAu
|
|       +--------------LngfishSA
+-------| (100/100)
|       +------------LngfishAf
|
|      +--------------------Frog
+------| (99.8/100)
       |                     +-----------------Turtle
       |                  +--| (85/72)
       |                  |  |    +------------------------Crocodile
       |                  |  +----| (96.5/97)
       |                  |       +------------------Bird
       |               +--| (39/51)
       |               |  +---------------------------Sphenodon
       |         +-----| (98.2/99)
       |         |     +-------------------------------Lizard
       +---------| (100/100)
                 |                   +--------------Human
                 |                +--| (92.3/93)
                 |                |  |  +------Seal
                 |                |  +--| (68.3/75)
                 |                |     |  +-----Cow
                 |                |     +--| (99.7/100)
                 |                |        +-------Whale
                 |           +----| (99.1/100)
                 |           |    |         +---Mouse
                 |           |    +---------| (100/100)
                 |           |              +------Rat
                 +-----------| (100/100)
                             |  +--------------Platypus
                             +--| (93/98)
                                +-----------Opossum
",218.0,0.0
218,Assessing branch supports with single branch tests,Beginnerâ€™s tutorial,2.0,20.0,"From this figure, the branching patterns within reptiles are poorly supported (e.g. Sphenodon with SH-aLRT: 39%, UFBoot: 51% and Turtle with SH-aLRT: 85%, UFBoot: 72%) as well as the phylogenetic position of Seal within mammals (SH-aLRT: 68.3%, UFBoot: 75%). Other branches appear to be well supported.",219.0,0.0
