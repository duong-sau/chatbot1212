sentence_index,sentence,label_index,label,cluster_index,cluster
1.0,Partitioned analysis for multi-gene alignments,1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
2.0,If you used partition model in a publication please cite,1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
3.0,"O. Chernomor, A. von Haeseler, and B.Q. Minh (2016) Terrace aware data structure for phylogenomic inference from supermatrices. Syst. Biol., 65997-1008. https//doi.org/10.1093/sysbio/syw037",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
4.0,"In the partition model, you can specify a substitution model for each gene/character set.   will then estimate the model parameters separately for every partition. Moreover,   provides edge-linked or edge-unlinked branch lengths between partitions",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
5.0,"-q partition_file all partitions share the same set of branch lengths (like -q option of RAxML).-p partition_file (-spp in version 1.x) like above but allowing each partition to have its own evolution rate.-Q partition_file (-sp in version 1.x) each partition has its own set of branch lengths (like combination of -q and -M options in RAxML) to account for, e.g. heterotachy (Lopez et al., 2002).",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
6.0,NOTE -p is recommended for typical analysis. -q is unrealistic and -Q is very parameter-rich. One can also perform all three analyses and compare e.g. the BIC scores to determine the best-fit partition model.,1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
7.0,  supports RAxML-style and NEXUS partition input file. The RAxML-style partition file may look like,1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
8.0,"DNA, part1 = 1-100DNA, part2 = 101-384",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
9.0,"If your partition file is called example.partitions, the partition analysis can be run with",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
10.0,iqtree -s example.phy -p example.partitions -m GTR I G for version 1.x change -p to -spp,1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
11.0,"Note that using RAxML-style partition file, all partitions will use the same rate heterogeneity model given in -m option ( I G in this example). If you want to specify, say,  G for the first partition and  I G for the second partition, then you need to create the more flexible NEXUS partition file. This file contains a SETS block with CharSet and CharPartition commands to specify individual genes and the partition, respectively. For example",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
12.0,"nexusbegin sets;    charset part1 = 1-100;    charset part2 = 101-384;    charpartition mine = HKY Gpart1, GTR I Gpart2;end;",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
13.0,"If your NEXUS file is called example.nex, then you can use the option -p to input the file as following",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
14.0,iqtree -s example.phy -p example.nex for version 1.x change -p to -spp,1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
15.0,"Here,   partitions the alignment example.phy into 2 sub-alignments named part1 and part2 containing sites (columns) 1-100 and 101-384, respectively. Moreover,   applies the subtitution models HKY G and GTR I G to part1 and part2, respectively. Substitution model parameters and trees with branch lengths can be found in the result file example.nex.iqtree.",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
16.0,"Moreover, the CharSet command allows to specify non-consecutive sites with e.g.",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
17.0,charset part1 = 1-100 200-384;,1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
18.0,"That means, part1 contains sites 1-100 and 200-384 of the alignment. Another example is",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
19.0,charset part1 = 1-100\3;,1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
20.0,"for extracting sites 1,4,7,…,100 from the alignment. This is useful for getting codon positions from the protein-coding alignment.",1.0,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial
21.0,Partitioned analysis with mixed data,2.0,Partitioned analysis with mixed data,1.0,Advanced tutorial
22.0,"  also allows combining sub-alignments from different alignment files, which is helpful if you want to combine mixed data (e.g. DNA and protein) in a single analysis. Here is an example for mixing DNA, protein and codon models",2.0,Partitioned analysis with mixed data,1.0,Advanced tutorial
23.0,"nexusbegin sets;    charset part1 = dna.phy 1-100 201-300;    charset part2 = dna.phy 101-200;    charset part3 = prot.phy 1-400;    charset part4 = prot.phy 401-600;    charset part5 = codon.phyCODON, *;    charpartition mine = HKYpart1, GTR Gpart2, LG Gpart3, WAG I Gpart4, GYpart5;end;",2.0,Partitioned analysis with mixed data,1.0,Advanced tutorial
24.0,"Here, part1 and part2 contain sub-alignments from alignment file dna.phy, whereas part3 and part4 are loaded from alignment file prot.phy and part5 from codon.phy. The  is needed to separate the alignment file name and site specification. Note that, for convenience * in part5 specification means that part5 corresponds to the entire alignment codon.phy.",2.0,Partitioned analysis with mixed data,1.0,Advanced tutorial
25.0,"TIP For part5 the CODON keyword is specified so that   will apply a codon model. Moreover, this implicitly assumes the standard genetic code. If you want to use another genetic code, append CODON with the code ID described here",2.0,Partitioned analysis with mixed data,1.0,Advanced tutorial
26.0,"Because the alignment file names are now specified in this NEXUS file, you can omit the -s option",2.0,Partitioned analysis with mixed data,1.0,Advanced tutorial
27.0,iqtree -p example.nex for version 1.x change -p to -spp,2.0,Partitioned analysis with mixed data,1.0,Advanced tutorial
28.0,"Note that aln.phy and prot.phy does not need to contain the same set of sequences. For instance, if some sequence occurs in aln.phy but not in prot.phy,   will treat the corresponding parts of sequence in prot.phy as missing data. For your convenience   writes the concatenated alignment into the file example.nex.conaln.",2.0,Partitioned analysis with mixed data,1.0,Advanced tutorial
29.0,Choosing the right partitioning scheme,3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
30.0,"ModelFinder implements a greedy strategy (Lanfear et al., 2012) that starts with the full partition model and subsequentially merges two genes until the model fit does not increase any further",3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
31.0,iqtree -s example.phy -p example.nex -m MFP MERGE for version 1.x change -p to -spp,3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
32.0,"Note that this command considers the FreeRate heterogeneity model (see model selection tutorial). If you want to resemble PartitionFinder by just considering the invariable site and Gamma rate heterogeneity (thus saving computation times), then run",3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
33.0,iqtree -s example.phy -p example.nex -m TESTMERGE for version 1.x change -p to -spp,3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
34.0,"After ModelFinder found the best partition,   will immediately start the tree reconstruction under the best-fit partition model. Sometimes you only want to find the best-fit partition model without doing tree reconstruction, then run",3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
35.0,iqtree -s example.phy -p example.nex -m MF MERGE for version 1.x change -p to -spp,3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
36.0,To resemble PartitionFinder and save time,3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
37.0,iqtree -s example.phy -p example.nex -m TESTMERGEONLY for version 1.x change -p to -spp,3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
38.0,"To reduce the computational burden   implements the relaxed hierarchical clustering algorithm (Lanfear et al., 2014), which is invoked via -rcluster option",3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
39.0,iqtree -s example.phy -p example.nex -m MF MERGE -rcluster 10 for version 1.x change -p to -spp,3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
40.0,to only examine the top 10% partition merging schemes (similar to the --rcluster-percent 10 option in PartitionFinder).,3.0,Choosing the right partitioning scheme,1.0,Advanced tutorial
41.0,Ultrafast bootstrapping with partition model,4.0,Ultrafast bootstrapping with partition model,1.0,Advanced tutorial
42.0,"  can perform the ultrafast bootstrap with partition models by e.g.,",4.0,Ultrafast bootstrapping with partition model,1.0,Advanced tutorial
43.0,iqtree -s example.phy -p example.nex -B 1000 for version 1.x change -p to -spp and -B to -bb,4.0,Ultrafast bootstrapping with partition model,1.0,Advanced tutorial
44.0,"Here,   will resample the sites within partitions (i.e., the bootstrap replicates are generated per partition separately and then concatenated together). The same holds true if you do the standard nonparametric bootstrap.",4.0,Ultrafast bootstrapping with partition model,1.0,Advanced tutorial
45.0,"  supports the partition-resampling strategy as suggested by (Nei et al., 2001)",4.0,Ultrafast bootstrapping with partition model,1.0,Advanced tutorial
46.0,iqtree -s example.phy -p example.nex -B 1000 --sampling GENE for version 1.x change -p to -spp and -B to -bb and --sampling to -bsam,4.0,Ultrafast bootstrapping with partition model,1.0,Advanced tutorial
47.0,"to resample partitions instead of sites. Moreover,   allows an even more complicated strategy resampling partitions and then sites within resampled partitions (Gadagkar et al., 2005; Seo et al., 2005). This may help to reduce false positives (i.e. wrong branch receiving 100% support)",4.0,Ultrafast bootstrapping with partition model,1.0,Advanced tutorial
48.0,iqtree -s example.phy -p example.nex -B 1000 --sampling GENESITE for version 1.x change -p to -spp and -B to -bb and --sampling to -bsam,4.0,Ultrafast bootstrapping with partition model,1.0,Advanced tutorial
49.0,Constrained tree search,5.0,Constrained tree search,1.0,Advanced tutorial
50.0,"  supports constrained tree search via -g option, so that the resulting tree must obey a constraint tree topology. The constraint tree can be multifurcating and need not to contain all species. To illustrate, let’s return to the first running example, where we want to force Human grouping with Seal whereas Cow with Whale. If you use the following constraint tree (NEWICK format)",5.0,Constrained tree search,1.0,Advanced tutorial
51.0,"((Human,Seal),(Cow,Whale));",5.0,Constrained tree search,1.0,Advanced tutorial
52.0,Save this to a file example.constr0 and run,5.0,Constrained tree search,1.0,Advanced tutorial
53.0,iqtree -s example.phy -m TIM2 I G -g example.constr0 --prefix example.constr0 for version 1.x change --prefix to -pre,5.0,Constrained tree search,1.0,Advanced tutorial
54.0,(We use a prefix in order not to overwrite output files of the previous run). The resulting part of the tree extracted from example.constr0.iqtree looks exactly like a normal unconstrained tree search,5.0,Constrained tree search,1.0,Advanced tutorial
56.0,"This is the correct behavior although Human and Seal are not monophyletic, this tree indeed satisfies the constraint, because the induced subtree separates (Human,Seal) from (Cow,Whale). This comes from the fact that the tree is unrooted. If you want them to be sister groups, then you need to include outgroup taxa into the constraint tree. For example",5.0,Constrained tree search,1.0,Advanced tutorial
57.0,"((Human,Seal),(Cow,Whale),Mouse);",5.0,Constrained tree search,1.0,Advanced tutorial
58.0,Save this to example.constr1 and run,5.0,Constrained tree search,1.0,Advanced tutorial
59.0,iqtree -s example.phy -m TIM2 I G -g example.constr1 --prefix example.constr1 for version 1.x change --prefix to -pre,5.0,Constrained tree search,1.0,Advanced tutorial
60.0,The resulting part of the tree is then,5.0,Constrained tree search,1.0,Advanced tutorial
62.0,which shows the desired effect.,5.0,Constrained tree search,1.0,Advanced tutorial
63.0,"NOTE While this option helps to enforce the tree based on prior knowledge, it is advised to always perform tree topology tests to make sure that the resulting constrained tree is NOT significantly worse than an unconstrained tree See tree topology tests and testing constrained tree below for a guide how to check this.",5.0,Constrained tree search,1.0,Advanced tutorial
64.0,Tree topology tests,6.0,Tree topology tests,1.0,Advanced tutorial
65.0,  can compute log-likelihoods of a set of trees passed via the -z option,6.0,Tree topology tests,1.0,Advanced tutorial
66.0,iqtree -s example.phy -z example.treels -m GTR G,6.0,Tree topology tests,1.0,Advanced tutorial
67.0,"assuming that example.treels is an existing file containing a set of trees in NEWICK format.   first reconstructs an ML tree. Then, it will compute the log-likelihood of the trees in example.treels based on the estimated parameters done for the ML tree. example.phy.iqtree will have a section called USER TREES that lists the tree IDs and the corresponding log-likelihoods. The trees with optimized branch lengths can be found in example.phy.treels.trees If you only want to evaluate the trees without reconstructing the ML tree, you can run",6.0,Tree topology tests,1.0,Advanced tutorial
68.0,iqtree -s example.phy -z example.treels -n 0,6.0,Tree topology tests,1.0,Advanced tutorial
69.0,"Here, the number of search iterations is set to 0 (-n 0), such that model parameters are quickly estimated from an initial parsimony tree, which is normally accurate enough for our purpose. If you, however, prefer to estimate model parameters based on a tree (e.g. reconstructed previously), use -te <treefile> option.",6.0,Tree topology tests,1.0,Advanced tutorial
70.0,"  also supports several tree topology tests using the RELL approximation (Kishino et al., 1990). This includes bootstrap proportion (BP), Kishino-Hasegawa test (Kishino and Hasegawa, 1989), Shimodaira-Hasegawa test (Shimodaira and Hasegawa, 1999), expected likelihood weights (Strimmer and Rambaut, 2002)",6.0,Tree topology tests,1.0,Advanced tutorial
71.0,iqtree -s example.phy -z example.treels -n 0 -zb 1000,6.0,Tree topology tests,1.0,Advanced tutorial
72.0,"Here, -zb specifies the number of RELL replicates, where 1000 is the recommended minimum number. The USER TREES section of example.phy.iqtree will list the results of BP, KH, SH, and ELW methods.",6.0,Tree topology tests,1.0,Advanced tutorial
73.0,"If you also want to perform the weighted KH and weighted SH tests, simply add -zw option",6.0,Tree topology tests,1.0,Advanced tutorial
74.0,iqtree -s example.phy -z example.treels -n 0 -zb 1000 -zw,6.0,Tree topology tests,1.0,Advanced tutorial
75.0,"Starting with version 1.4.0   supports approximately unbiased (AU) test (Shimodaira, 2002) via -au option",6.0,Tree topology tests,1.0,Advanced tutorial
76.0,iqtree -s example.phy -z example.treels -n 0 -zb 1000 -zw -au,6.0,Tree topology tests,1.0,Advanced tutorial
77.0,This will perform all above tests plus the AU test.,6.0,Tree topology tests,1.0,Advanced tutorial
78.0,"Finally, note that   will automatically detect duplicated tree topologies and omit them during the evaluation.",6.0,Tree topology tests,1.0,Advanced tutorial
79.0,"HINTSThe KH, SH and AU tests return p-values, thus a tree is rejected if its p-value < 0.05 (marked with a - sign).bp-RELL and c-ELW return posterior weights which are not p-value. The weights sum up to 1 across the trees tested.The KH test (Kishino and Hasegawa, 1989) was designed to test 2 trees and thus has no correction for multiple testing. The SH test (Shimodaira and Hasegawa, 1999) fixes this problem.However, the SH test becomes too conservative (i.e., rejecting fewer trees than expected) when testing many trees. The AU test (Shimodaira, 2002) fixes this problem and is thus recommended as replacement for both KH and SH tests.",6.0,Tree topology tests,1.0,Advanced tutorial
80.0,Testing constrained tree,7.0,Testing constrained tree,1.0,Advanced tutorial
81.0,"We now illustrate an example to use the AU test (see above) to test trees from unconstrained versus constrained search, which is helpful to know if a constrained search is sensible or not. Thus",7.0,Testing constrained tree,1.0,Advanced tutorial
82.0,"Perform an unconstrained search iqtree -s example.phy -m TIM2 I G --prefix example.unconstr  for version 1.x change --prefix to -prePerform a constrained search, where example.constr1 file contains ((Human,Seal),(Cow,Whale),Mouse); iqtree -s example.phy -m TIM2 I G -g example.constr1 --prefix example.constr1  for version 1.x change --prefix to -prePerform another constrained search, where example.constr2 file contains ((Human,Cow,Whale),Seal,Mouse); iqtree -s example.phy -m TIM2 I G -g example.constr2 --prefix example.constr2  for version 1.x change --prefix to -prePerform the last constrained search, where example.constr3 file contains ((Human,Mouse),(Cow,Rat),Opossum); iqtree -s example.phy -m TIM2 I G -g example.constr3 --prefix example.constr3  for version 1.x change --prefix to -preConcatenate all trees into a file  for Linux or macOS cat example.unconstr.treefile example.constr1.treefile example.constr2.treefile example.constr3.treefile > example.treels      for Windows type example.unconstr.treefile example.constr1.treefile example.constr2.treefile example.constr3.treefile > example.treelsTest the set of trees iqtree -s example.phy -m TIM2 I G -z example.treels -n 0 -zb 1000 -au",7.0,Testing constrained tree,1.0,Advanced tutorial
83.0,Now look at the resulting .iqtree file,7.0,Testing constrained tree,1.0,Advanced tutorial
85.0,"One sees that the AU test does not reject the first 3 trees (denoted by   sign below the p-AU column), whereas the last tree is significantly excluded (- sign). All other tests also agree with this. Therefore, groupings of (Human,Mouse) and (Cow,Rat) do not make sense. Whereas the phylogenetic position of Seal based on 3 first trees is still undecidable. This is in agreement with the SH-aLRT and ultrafast bootstrap supports done in the Tutorial.",7.0,Testing constrained tree,1.0,Advanced tutorial
86.0,Consensus construction and bootstrap value assignment,8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
87.0,"  can construct an extended majority-rule consensus tree from a set of trees written in NEWICK or NEXUS format (e.g., produced by MrBayes)",8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
88.0,iqtree -con mytrees,8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
89.0,"To build a majority-rule consensus tree, simply set the minimum support threshold to 0.5",8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
90.0,iqtree -con mytrees -minsup 0.5,8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
91.0,"If you want to specify a burn-in (the number of beginning trees to ignore from the trees file), use -bi option",8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
92.0,iqtree -con mytrees -minsup 0.5 -bi 100,8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
93.0,to skip the first 100 trees in the file.,8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
94.0,  can also compute a consensus network and print it into a NEXUS file by,8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
95.0,iqtree -net mytrees,8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
96.0,"Finally, a useful feature is to read in an input tree and a set of trees, then   can assign the support value onto the input tree (number of times each branch in the input tree occurs in the set of trees). This option is useful if you want to compute the support values for an ML tree based on alternative topologies.",8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
97.0,iqtree -sup input_tree set_of_trees,8.0,Consensus construction and bootstrap value assignment,1.0,Advanced tutorial
98.0,User-defined substitution models,9.0,User-defined substitution models,1.0,Advanced tutorial
99.0,"Users can specify any DNA model using a 6-letter code that defines which rates should be equal. For example, 010010 corresponds to the HKY model and 012345 to the GTR model. In fact,   uses this specification internally to simplify the coding. The 6-letter code is specified via the -m option, e.g.",9.0,User-defined substitution models,1.0,Advanced tutorial
100.0,iqtree -s example.phy -m 010010 G,9.0,User-defined substitution models,1.0,Advanced tutorial
101.0,"Moreover, with the -m option one can input a file which contains the 6 rates (A-C, A-G, A-T, C-G, C-T, G-T) and 4 base frequencies (A, C, G, T). For example",9.0,User-defined substitution models,1.0,Advanced tutorial
102.0,iqtree -s example.phy -m mymodel G,9.0,User-defined substitution models,1.0,Advanced tutorial
103.0,"where mymodel is a file containing the 10 entries described above, in the correct order. The entries can be seperated by either empty space(s) or newline character. One can even specify the rates within -m option by e.g.",9.0,User-defined substitution models,1.0,Advanced tutorial
104.0,"iqtree -s example.phy -m 'TN{2.0,3.0} G8{0.5} I{0.15}'",9.0,User-defined substitution models,1.0,Advanced tutorial
105.0,"That means, we use Tamura-Nei model with fixed transition-transversion rate ratio of 2.0 and purine/pyrimidine rate ratio of 3.0. Moreover, we use 8-category Gamma-distributed site rates with the shape parameter (alpha) equal to 0.5 and a proportion of invariable sites p-inv=0.15.",9.0,User-defined substitution models,1.0,Advanced tutorial
106.0,"By default   computes empirical state frequencies from the alignment by counting, but one can also estimate the frequencies by maximum-likelihood with  Fo in the model name",9.0,User-defined substitution models,1.0,Advanced tutorial
107.0,iqtree -s example.phy -m GTR G Fo,9.0,User-defined substitution models,1.0,Advanced tutorial
108.0,"For amino-acid alignments,   use the empirical frequencies specified in the model. If you want frequencies as counted from the alignment, use  F, for example",9.0,User-defined substitution models,1.0,Advanced tutorial
109.0,iqtree -s myprotein_alignment -m WAG G F,9.0,User-defined substitution models,1.0,Advanced tutorial
110.0,Note that all model specifications above can be used in the partition model NEXUS file.,9.0,User-defined substitution models,1.0,Advanced tutorial
111.0,Inferring site-specific rates,10.0,Inferring site-specific rates,1.0,Advanced tutorial
112.0,"  allows to infer site-specific evolutionary rates if a site-rate heterogeneity model such as Gamma or FreeRate is the best model. Here,   will estimate model parameters and then apply an empirical Bayesian approach to assign site-rates as the mean over rate categories, weighted by the posterior probability of the site falling into each category. This approach is provided in   because such empirical Bayesian approach was shown to be most accurate (Mayrose et al., 2004). An example run",10.0,Inferring site-specific rates,1.0,Advanced tutorial
113.0,iqtree -s example.phy --rate for version 1.x change --rate to -wsr,10.0,Inferring site-specific rates,1.0,Advanced tutorial
114.0,  will write an output file example.phy.rate that looks like,10.0,Inferring site-specific rates,1.0,Advanced tutorial
115.0,Site    Rate    Category        Categorized_rate1       0.26625 2       0.243932       0.99345 3       0.811243       2.69275 4       2.913674       0.25822 2       0.243935       0.25822 2       0.243936       0.42589 2       0.243937       0.30194 2       0.243938       0.72790 3       0.811249       0.25822 2       0.2439310      0.09177 1       0.03116,10.0,Inferring site-specific rates,1.0,Advanced tutorial
116.0,"The 1st column is site index of the alignment (starting from 1), the 2nd column Rate shows the mean site-specific rate as explained above, and the 3rd and 4th columns show the category index and rate of the Gamma rate category with the highest probability for this site (1 for slow and 4 for fast rate).",10.0,Inferring site-specific rates,1.0,Advanced tutorial
117.0,"The above run will perform a full tree search. To speed up you can use -n 0 to only use a parsimony tree for site rate estimates. Or if you have already infered an ML tree, you can specify it to improve the rate estimate",10.0,Inferring site-specific rates,1.0,Advanced tutorial
118.0,iqtree -s example.phy -t ml.treefile -n 0 --rate  for version 1.x change --rate to -wsr,10.0,Inferring site-specific rates,1.0,Advanced tutorial
119.0,where -t is the option to input a fixed tree topology and ml.treefile is the ML tree reconstructed previously.,10.0,Inferring site-specific rates,1.0,Advanced tutorial
120.0,"If you already know the best-fit model for the alignment, you can use specify it via -m option to omit model selection and hence speed it up",10.0,Inferring site-specific rates,1.0,Advanced tutorial
121.0,iqtree -s example.phy -m GTR R10 -n 0 --rate  for version 1.x change --rate to -wsr,10.0,Inferring site-specific rates,1.0,Advanced tutorial
122.0,"Finally,   2 allows to estimate rates by maximum likelihood via --mlrate option",10.0,Inferring site-specific rates,1.0,Advanced tutorial
123.0,iqtree -s example.phy -n 0 --mlrate ,10.0,Inferring site-specific rates,1.0,Advanced tutorial
124.0,This will print an output file example.phy.mlrate that looks like,10.0,Inferring site-specific rates,1.0,Advanced tutorial
125.0," Site-specific subtitution rates determined by maximum likelihood This file can be read in MS Excel or in R with command   tab=read.table('example.phy.mlrate',header=TRUE) Columns are tab-separated with following meaning   Site   Alignment site ID   Rate   Site rate estimated by maximum likelihoodSite    Rate1       2.515502       12.891293       34.313504       2.443135       2.443136       4.418897       2.695778       9.275039       2.4431310      0.00001",10.0,Inferring site-specific rates,1.0,Advanced tutorial
126.0,Where to go from here?,11.0,Where to go from here?,1.0,Advanced tutorial
127.0,See Command Reference for a complete list of all options available in  .,11.0,Where to go from here?,1.0,Advanced tutorial
128.0,Tests of symmetry,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
129.0,"  provides three matched-pairs tests of symmetry (Naser-Khdour et al., 2019) to test the two assumptions of stationarity and homogeneity. A simple analysis",12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
130.0,iqtree2 -s example.phy -p example.nex --symtest-only,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
131.0,will perform the three tests of symmetry on every partition of the alignment and print the result into a .symtest.csv file. --symtest-only option tells   to only perform the tests of symmetry and then exit. In this example the content of example.nex.symtest.csv looks like this,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
132.0," Matched-pair tests of symmetry This file can be read in MS Excel or in R with command    dat=read.csv('example.nex.symtest.csv',comment.char='') Columns are comma-separated with following meanings    Name    Partition name    SymSig  Number of significant sequence pairs by test of symmetry    SymNon  Number of non-significant sequence pairs by test of symmetry    SymPval P-value for maximum test of symmetry    MarSig  Number of significant sequence pairs by test of marginal symmetry    MarNon  Number of non-significant sequence pairs by test of marginal symmetry    MarPval P-value for maximum test of marginal symmetry    IntSig  Number of significant sequence pairs by test of internal symmetry    IntNon  Number of non-significant sequence pairs by test of internal symmetry    IntPval P-value for maximum test of internal symmetryName,SymSig,SymNon,SymPval,MarSig,MarNon,MarPval,IntSig,IntNon,IntPvalpart1,44,92,0.475639,50,86,0.722371,4,132,0.23869part2,43,93,0.142052,49,87,0.205232,5,131,0.169618part3,53,83,0.00499855,58,78,0.00164132,6,130,0.343127",12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
133.0,The three important columns are,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
134.0,"SymPval a small p-value (say < 0.05) indicates that the assumptions of stationarity or homogeneity or both is rejected. In this case, partition part3 does not comply with these two assumptions (p-value = 0.00499855), whereas the other two partitions are “good”.MarPval a small p-value means that the assumption of stationarity is rejected. In this case, only partition part3 does not comply with the stationary condition (p-value = 0.00164132).IntPval a small p-value means that the homogeneity assumption is reject. In this case, no partitions are “bad” according to this test, i.e., they all comply with the homogeneity assumption.",12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
135.0,This little example shows that only part3 is problematic by not complying with the stationary assumption.,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
136.0,Now you may want to perform the phylogenetic analysis excluding all “bad” partitions by,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
137.0,iqtree2 -s example.phy -p example.nex --symtest-remove-bad,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
138.0,that will remove all “bad” partitions where SymPval < 0.05 and continue the analysis with the remaining “good” partitions. You may then compare the trees from “all” partitions and from “good” only partitions to see if there is significant difference between them with tree topology tests.,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
139.0,Other options can be seen when running iqtree2 -h,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
140.0,TEST OF SYMMETRY  --symtest               Perform three tests of symmetry  --symtest-only          Do --symtest then exist  --symtest-remove-bad    Do --symtest and remove bad partitions  --symtest-remove-good   Do --symtest and remove good partitions  --symtest-type MAR|INT  Use MARginal/INTernal test when removing partitions  --symtest-pval NUMER    P-value cutoff (default 0.05)  --symtest-keep-zero     Keep NAs in the tests,12.0,Tests of symmetry,2.0,Assessing phylogenetic assumptions
141.0,Likelihood mapping,13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
142.0,"Likelihood mapping (Strimmer and von Haeseler, 1997) is a visualisation method to display the phylogenetic information of an alignment. It visualises the treelikeness of all quartets in a single triangular graph and therefore renders a quick interpretation of the phylogenetic content.",13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
143.0,A simple likelihood mapping analysis can be conducted with,13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
144.0,iqtree -s example.phy -lmap 2000 -n 0,13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
145.0,where -lmap option specify the number of quartets of taxa that will be drawn randomly from the alignment. -n 0 tells   to stop the analysis right after running the likelihood mapping.   will print the result in the .iqtree report file as well as the likelihood mapping plot .lmap.svg (in SVG format) and .lmap.eps file (in EPS figure format).,13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
146.0,"You can now view the likelihood mapping plot file example.phy.lmap.svg, which looks like this",13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
147.0,It shows phylogenetic information of the alignment example.phy.,13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
148.0,"Top sub-figure distribution of quartets depicted by dots on the likelihood mapping plot.Left sub-figure percentages of quartets falling in each of the three areas. The three areas show support for one of the different groupings like (a,b)-(c,d).Right sub-figure percentages of quartets falling in each of the seven areas. Quartets falling into the three corners are informative and called fully-resolved quartets. Those in three rectangles are partly informative (partly resolved quartets) and those in the center are uninformative (unresolved quartets). A good data set should have high number of fully resolved quartets and low number of unresolved quartets.",13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
149.0,The meanings can also be found in the LIKELIHOOD MAPPING STATISTICS section of the report file example.phy.iqtree,13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
151.0,"The command reference will provide more options and how to perform 2-, 3-, or 4-cluster likelihood mapping analysis.",13.0,Likelihood mapping,2.0,Assessing phylogenetic assumptions
152.0,Input data,14.0,Input data,3.0,Beginner’s tutorial
153.0,"  takes as input a multiple sequence alignment and will reconstruct an evolutionary tree that is best explained by the input data. If you have raw (unaligned) sequences, you need to first run an alignment program like MAFFT or ClustalW to align the sequences, before feeding them into  .",14.0,Input data,3.0,Beginner’s tutorial
154.0,The input alignment can be in various common formats. For example the PHYLIP format which may look like,14.0,Input data,3.0,Beginner’s tutorial
155.0,7 28Frog       AAATTTGGTCCTGTGATTCAGCAGTGATTurtle     CTTCCACACCCCAGGACTCAGCAGTGATBird       CTACCACACCCCAGGACTCAGCAGTAATHuman      CTACCACACCCCAGGAAACAGCAGTGATCow        CTACCACACCCCAGGAAACAGCAGTGACWhale      CTACCACGCCCCAGGACACAGCAGTGATMouse      CTACCACACCCCAGGACTCAGCAGTGAT,14.0,Input data,3.0,Beginner’s tutorial
156.0,"This tiny alignment contains 7 DNA sequences from several animals with the sequence length of 28 nucleotides.   also supports other file formats such as FASTA, NEXUS, CLUSTALW. The FASTA file for the above example may look like this",14.0,Input data,3.0,Beginner’s tutorial
157.0,>Frog       AAATTTGGTCCTGTGATTCAGCAGTGAT>Turtle     CTTCCACACCCCAGGACTCAGCAGTGAT>Bird       CTACCACACCCCAGGACTCAGCAGTAAT>Human      CTACCACACCCCAGGAAACAGCAGTGAT>Cow        CTACCACACCCCAGGAAACAGCAGTGAC>Whale      CTACCACGCCCCAGGACACAGCAGTGAT>Mouse      CTACCACACCCCAGGACTCAGCAGTGAT,14.0,Input data,3.0,Beginner’s tutorial
158.0,"TIP From version 2 you can input a directory of alignment files.   2 will load and concatenate all alignments within the directory, eliminating the need for users to manually perform this step.",14.0,Input data,3.0,Beginner’s tutorial
159.0,First running example,15.0,First running example,3.0,Beginner’s tutorial
160.0,From the download there is an example alignment called example.phy in PHYLIP format. This example contains parts of the mitochondrial DNA sequences of several animals (Source Phylogenetic Handbook).,15.0,First running example,3.0,Beginner’s tutorial
161.0,You can now start to reconstruct a maximum-likelihood tree from this alignment by entering (assuming that you are now in the same folder with example.phy),15.0,First running example,3.0,Beginner’s tutorial
162.0,iqtree -s example.phy,15.0,First running example,3.0,Beginner’s tutorial
163.0,-s is the option to specify the name of the alignment file that is always required by   to work. At the end of the run   will write several output files including,15.0,First running example,3.0,Beginner’s tutorial
164.0,"example.phy.iqtree the main report file that is self-readable. You should look at this file to see the computational results. It also contains a textual representation of the final tree (see below).example.phy.treefile the ML tree in NEWICK format, which can be visualized by any supported tree viewer programs like FigTree or iTOL.example.phy.log log file of the entire run (also printed on the screen). To report bugs, please send this log file and the original alignment file to the authors.",15.0,First running example,3.0,Beginner’s tutorial
165.0,For this example data the resulting maximum-likelihood tree may look like this (extracted from .iqtree file),15.0,First running example,3.0,Beginner’s tutorial
167.0,"This makes sense as the mammals (Human to Opossum) form a clade, whereas the reptiles (Turtle to Crocodile) and Bird form a separate sister clade. Here the tree is drawn at the outgroup Lungfish which is more accient than other species in this example. However, please note that   always produces an unrooted tree as it knows nothing about this biological background;   simply draws the tree this way as LngfishAu is the first sequence occuring in the alignment.",15.0,First running example,3.0,Beginner’s tutorial
168.0,"During the example run above,   periodically wrote to disk a checkpoint file example.phy.ckp.gz (gzip-compressed to save space). This checkpoint file is used to resume an interrupted run, which is handy if you have a very large data sets or time limit on a cluster system. If the run did not finish, invoking   again with the very same command line will recover the analysis from the last stopped point, thus saving all computation time done before.",15.0,First running example,3.0,Beginner’s tutorial
169.0,"If the run successfully completed, running again will issue an error message",15.0,First running example,3.0,Beginner’s tutorial
170.0,ERROR Checkpoint (example.phy.ckp.gz) indicates that a previous run successfully finishedUse `-redo` option if you really want to redo the analysis and overwrite all output files.,15.0,First running example,3.0,Beginner’s tutorial
171.0,"This prevents lost of data if you accidentally re-run  . However, if you really want to re-run the analysis and overwrite all previous output files, use -redo option",15.0,First running example,3.0,Beginner’s tutorial
172.0,iqtree -s example.phy -redo,15.0,First running example,3.0,Beginner’s tutorial
173.0,"Finally, the default prefix of all output files is the alignment file name. You can change the prefix with",15.0,First running example,3.0,Beginner’s tutorial
174.0,iqtree -s example.phy --prefix myprefix for version 1.x change --prefix to -pre,15.0,First running example,3.0,Beginner’s tutorial
175.0,This prevents output files being overwritten when you perform multiple analyses on the same alignment within the same folder.,15.0,First running example,3.0,Beginner’s tutorial
176.0,Choosing the right substitution model,16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
177.0,NOTE If you use model selection please cite the following paper,16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
178.0,"S. Kalyaanamoorthy, B.Q. Minh, T.K.F. Wong, A. von Haeseler, and L.S. Jermiin (2017) ModelFinder fast model selection for accurate phylogenetic estimates. Nat. Methods, 14587–589. DOI 10.1038/nmeth.4285",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
179.0,"  supports a wide range of substitution models for DNA, protein, codon, binary and morphological alignments. If you do not know which model is appropriate for your data, you can use ModelFinder to determine the best-fit model",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
180.0,iqtree -s example.phy -m MFP change -m MFP to -m TEST to resemble jModelTest/ProtTest,16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
181.0,"-m is the option to specify the model name to use during the analysis. The special MFP key word stands for ModelFinder Plus, which tells   to perform ModelFinder and the remaining analysis using the selected model. ModelFinder computes the log-likelihoods of an initial parsimony tree for many different models and the Akaike information criterion (AIC), corrected Akaike information criterion (AICc), and the Bayesian information criterion (BIC). Then ModelFinder chooses the model that minimizes the BIC score (you can also change to AIC or AICc by adding the option -AIC or -AICc, respectively).",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
182.0,"TIP Starting with version 1.5.4, -m MFP is the default behavior. Thus, this run is equivalent to iqtree -s example.phy.",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
183.0,"Here,   will write an additional file",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
184.0,example.phy.model log-likelihoods for all models tested. It serves as a checkpoint file to recover an interrupted model selection.,16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
185.0,"If you now look at example.phy.iqtree you will see that   selected TIM2 I G4 as the best-fit model for this example data. Thus, for additional analyses you do not have to perform the model test again and can use the selected model",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
186.0,iqtree -s example.phy -m TIM2 I G,16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
187.0,"Sometimes you only want to find the best-fit model without doing tree reconstruction, then run",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
188.0,iqtree -s example.phy -m MF change -m MF to -m TESTONLY to resemble jModelTest/ProtTest,16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
189.0,"By default, the maximum number of categories is limitted to 10 due to computational reasons. If your sequence alignment is long enough, then you can increase this upper limit with the cmax option",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
190.0,iqtree -s example.phy -m MF -cmax 15,16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
191.0,will test  R2 to  R15 instead of at most  R10.,16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
192.0,"To reduce computational burden, one can use the option -mset to restrict the testing procedure to a subset of base models instead of testing the entire set of all available models. For example, -mset WAG,LG will test only models like WAG ... or LG .... Another useful option in this respect is -msub for AA data sets. With -msub nuclear only general AA models are included, whereas with -msub viral only AA models for viruses are included.",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
193.0,"If you have enough computational resource, you can perform a thorough and more accurate analysis that invokes a full tree search for each model considered via the -mtree option",16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
194.0,iqtree -s example.phy -m MF -mtree,16.0,Choosing the right substitution model,3.0,Beginner’s tutorial
195.0,Using codon models,17.0,Using codon models,3.0,Beginner’s tutorial
196.0,"  supports a number of codon models. You need to input a protein-coding DNA alignment and specify codon data by option -st CODON (Otherwise,   applies DNA model because it detects that your alignment has DNA sequences)",17.0,Using codon models,3.0,Beginner’s tutorial
197.0,iqtree -s coding_gene.phy -st CODON ,17.0,Using codon models,3.0,Beginner’s tutorial
198.0,"If your alignment length is not divisible by 3,   will stop with an error message.   will group sites 1,2,3 into codon site 1; sites 4,5,6 to codon site 2; etc. Moreover, any codon, which has at least one gap/unknown/ambiguous nucleotide, will be treated as unknown codon character.",17.0,Using codon models,3.0,Beginner’s tutorial
199.0,"Note that the above command assumes the standard genetic code. If your sequences follow ‘The Invertebrate Mitochondrial Code’ (see the full list of supported genetic code here), then run",17.0,Using codon models,3.0,Beginner’s tutorial
200.0,iqtree -s coding_gene.phy -st CODON5 ,17.0,Using codon models,3.0,Beginner’s tutorial
201.0,"Binary, morphological and SNP data",18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
202.0,"Binary alignments contain sequences with characters 0 and 1, which can be in any common formats supported by  , for example, in PHYLIP format",18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
203.0,4 6S1   010101S2   110011S3   0--100S4   10--10,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
204.0,Morphological alignments have an extended characeter alphabet of 0-9 and A-Z (for states 10-31). For example (PHYLIP format),18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
206.0,  will automatically determine the sequence type and the alphabet size. To run   on such alignments,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
207.0,iqtree -s morphology.phy,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
208.0,or,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
209.0,iqtree -s morphology.phy -st MORPH,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
210.0,"  implements to two morphological ML models MK and ORDERED. Morphological data typically do not have constant (uninformative) sites. In such cases, you should apply ascertainment bias correction model by e.g.",18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
211.0,iqtree -s morphology.phy -st MORPH -m MK ASC,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
212.0,You can again select the best-fit binary/morphological model,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
213.0,iqtree -s morphology.phy -st MORPH,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
214.0,"For SNP data (DNA) that typically do not contain constant sites, you can explicitly tell the model to include ascertainment bias correction",18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
215.0,iqtree -s SNP_data.phy -m GTR ASC,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
216.0,You can explicitly tell model testing to only include  ASC model with,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
217.0,iqtree -s SNP_data.phy -m MFP ASC,18.0,"Binary, morphological and SNP data",3.0,Beginner’s tutorial
218.0,Assessing branch supports with ultrafast bootstrap approximation,19.0,Assessing branch supports with ultrafast bootstrap approximation,3.0,Beginner’s tutorial
219.0,"To overcome the computational burden required by the nonparametric bootstrap,   introduces an ultrafast bootstrap approximation (UFBoot) (Minh et al., 2013; Hoang et al., 2018) that is orders of magnitude faster than the standard procedure and provides relatively unbiased branch support values. Citation for UFBoot",19.0,Assessing branch supports with ultrafast bootstrap approximation,3.0,Beginner’s tutorial
220.0,"D.T. Hoang, O. Chernomor, A. von Haeseler, B.Q. Minh, and L.S. Vinh (2018) UFBoot2 Improving the ultrafast bootstrap approximation. Mol. Biol. Evol., 35518–522. https//doi.org/10.1093/molbev/msx281",19.0,Assessing branch supports with ultrafast bootstrap approximation,3.0,Beginner’s tutorial
221.0,To run UFBoot,19.0,Assessing branch supports with ultrafast bootstrap approximation,3.0,Beginner’s tutorial
222.0,iqtree -s example.phy -m TIM2 I G -B 1000 for version 1.x change -B to -bb,19.0,Assessing branch supports with ultrafast bootstrap approximation,3.0,Beginner’s tutorial
223.0,"-B specifies the number of bootstrap replicates where 1000 is the minimum number recommended. The section MAXIMUM LIKELIHOOD TREE in example.phy.iqtree shows a textual representation of the maximum likelihood tree with branch support values in percentage. The NEWICK format of the tree is printed to the file example.phy.treefile. In addition,   writes the following files",19.0,Assessing branch supports with ultrafast bootstrap approximation,3.0,Beginner’s tutorial
224.0,"example.phy.contree the consensus tree with assigned branch supports where branch lengths are optimized on the original alignment.example.phy.splits.nex support values in percentage for all splits (bipartitions), computed as the occurence frequencies in the bootstrap trees. This file can be viewed with the program SplitsTree to explore the conflicting signals in the data. So it is more informative than consensus tree, e.g. you can see how highly supported the second best conflicting split is, which had no chance to enter the consensus tree.example.phy.splits (if using -wsplits option) This file contains the same information as example.phy.splits.nex but in star-dot format.",19.0,Assessing branch supports with ultrafast bootstrap approximation,3.0,Beginner’s tutorial
225.0,NOTE UFBoot support values have a different interpretation to the standard bootstrap. Refer to FAQ UFBoot support values interpretation for more information.,19.0,Assessing branch supports with ultrafast bootstrap approximation,3.0,Beginner’s tutorial
226.0,Reducing impact of severe model violations with UFBoot,20.0,Reducing impact of severe model violations with UFBoot,3.0,Beginner’s tutorial
227.0,Starting with   version 1.6 we provide a new option -bnni to reduce the risk of overestimating branch supports with UFBoot due to severe model violations. With this option UFBoot will further optimize each bootstrap tree using a hill-climbing nearest neighbor interchange (NNI) search based directly on the corresponding bootstrap alignment.,20.0,Reducing impact of severe model violations with UFBoot,3.0,Beginner’s tutorial
228.0,"Thus, if severe model violations are present in the data set at hand, users are advised to append -bnni to the regular UFBoot command",20.0,Reducing impact of severe model violations with UFBoot,3.0,Beginner’s tutorial
229.0,iqtree -s example.phy -m TIM2 I G -B 1000 -bnni for version 1.x change -B to -bb,20.0,Reducing impact of severe model violations with UFBoot,3.0,Beginner’s tutorial
230.0,Assessing branch supports with standard nonparametric bootstrap,21.0,Assessing branch supports with standard nonparametric bootstrap,3.0,Beginner’s tutorial
231.0,The standard nonparametric bootstrap is invoked by the -b option,21.0,Assessing branch supports with standard nonparametric bootstrap,3.0,Beginner’s tutorial
232.0,iqtree -s example.phy -m TIM2 I G -b 100,21.0,Assessing branch supports with standard nonparametric bootstrap,3.0,Beginner’s tutorial
233.0,-b specifies the number of bootstrap replicates where 100 is the minimum recommended number. The output files are similar to those produced by the UFBoot procedure.,21.0,Assessing branch supports with standard nonparametric bootstrap,3.0,Beginner’s tutorial
234.0,Assessing branch supports with single branch tests,22.0,Assessing branch supports with single branch tests,3.0,Beginner’s tutorial
235.0,"  provides an implementation of the SH-like approximate likelihood ratio test (Guindon et al., 2010). To perform this test, run",22.0,Assessing branch supports with single branch tests,3.0,Beginner’s tutorial
236.0,iqtree -s example.phy -m TIM2 I G -alrt 1000,22.0,Assessing branch supports with single branch tests,3.0,Beginner’s tutorial
237.0,-alrt specifies the number of bootstrap replicates for SH-aLRT where 1000 is the minimum number recommended.,22.0,Assessing branch supports with single branch tests,3.0,Beginner’s tutorial
238.0,"  also supports other tests such as the aBayes test (Anisimova et al., 2011) and the local bootstrap test (Adachi and Hasegawa, 1996b). See single branch tests for more details.",22.0,Assessing branch supports with single branch tests,3.0,Beginner’s tutorial
239.0,You can also perform both SH-aLRT and the ultrafast bootstrap within one single run,22.0,Assessing branch supports with single branch tests,3.0,Beginner’s tutorial
240.0,iqtree -s example.phy -m TIM2 I G -alrt 1000 -B 1000 for version 1.x change -B to -bb,22.0,Assessing branch supports with single branch tests,3.0,Beginner’s tutorial
241.0,"The branches of the resulting .treefile will be assigned with both SH-aLRT and UFBoot support values, which are readable by any tree viewer program like FigTree, Dendroscope or ETE. You can also look at the textual tree figure in .iqtree file",22.0,Assessing branch supports with single branch tests,3.0,Beginner’s tutorial
243.0,"From this figure, the branching patterns within reptiles are poorly supported (e.g. Sphenodon with SH-aLRT 39%, UFBoot 51% and Turtle with SH-aLRT 85%, UFBoot 72%) as well as the phylogenetic position of Seal within mammals (SH-aLRT 68.3%, UFBoot 75%). Other branches appear to be well supported.",22.0,Assessing branch supports with single branch tests,3.0,Beginner’s tutorial
244.0,Utilizing multi-core CPUs,23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
245.0,  can utilize multiple CPU cores to speed up the analysis. A complement option -T (or -nt for version 1.x) allows specifying the number of CPU cores to use. For example,23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
246.0,iqtree -s example.phy -m TIM2 I G -T 2 for version 1.x change -T to -nt,23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
247.0,"Here,   will use 2 CPU cores to perform the analysis.",23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
248.0,Note that the parallel efficiency is only good for long alignments. A good practice is to use -T AUTO to determine the best number of cores,23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
249.0,iqtree -s example.phy -m TIM2 I G -T AUTO for version 1.x change -T to -nt,23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
250.0,Then while running   may print something like this on to the screen,23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
251.0,Measuring multi-threading efficiency up to 8 CPU coresThreads 1 / Time 8.001 sec / Speedup 1.000 / Efficiency 100% / LogL -22217Threads 2 / Time 4.346 sec / Speedup 1.841 / Efficiency 92% / LogL -22217Threads 3 / Time 3.381 sec / Speedup 2.367 / Efficiency 79% / LogL -22217Threads 4 / Time 4.385 sec / Speedup 1.825 / Efficiency 46% / LogL -22217BEST NUMBER OF THREADS 3,23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
252.0,"Therefore, I would only use 3 cores for this example data. For later analysis with your same data set, you can stick to the determined number.",23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
253.0,Depending on the compute system it might be required to set an upper limit of CPU cores that can automatically be assigned. Use the -ntmax option to do so. For instance,23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
254.0,iqtree -s example.phy -m TIM2 I G -T AUTO -ntmax 8 for version 1.x change -T to -nt,23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
255.0,"does the same as above, but only allows to use up to 8 CPU cores. By default all cores of the current machine would be used as maximum.",23.0,Utilizing multi-core CPUs,3.0,Beginner’s tutorial
256.0,Where to go from here?,24.0,Where to go from here?,3.0,Beginner’s tutorial
257.0,"Once confident enough you can go on with a more advanced tutorial, which covers topics like phylogenomic (multi-gene) analyses using partition models or mixture models.",24.0,Where to go from here?,3.0,Beginner’s tutorial
258.0,General options,25.0,General options,4.0,Command reference
259.0,General options are mainly intended for specifying input and output files,25.0,General options,4.0,Command reference
260.0,"OptionUsage and meaning-h or -?Print help usage.-sSpecify input alignment file in PHYLIP, FASTA, NEXUS, CLUSTAL or MSF format.-stSpecify sequence type as either of DNA, AA, BIN, MORPH, CODON or NT2AA for DNA, amino-acid, binary, morphological, codon or DNA-to-AA-translated sequences. This is only necessary if   did not detect the sequence type correctly. Note that -st CODON is always necessary when using codon models (otherwise,   applies DNA models) and you also need to specify a genetic code like this if differed from the standard genetic code. -st NT2AA tells   to translate protein-coding DNA into AA sequences and then subsequent analysis will work on the AA sequences. You can also use a genetic code like -st NT2AA5 for the Invertebrate Mitochondrial Code (see genetic code table).-tSpecify a file containing starting tree for tree search. The special option -t BIONJ starts tree search from BIONJ tree and -t RANDOM starts tree search from completely random tree. DEFAULT 100 parsimony trees   BIONJ tree-teLike -t but fixing user tree. That means, no tree search is performed and   computes the log-likelihood of the fixed user tree.-oSpecify an outgroup taxon name to root the tree. The output tree in .treefile will be rooted accordingly. DEFAULT first taxon in alignment-preSpecify a prefix for all output files. DEFAULT either alignment file name (-s) or partition file name (-q, -spp or -sp)-ntSpecify the number of CPU cores for the multicore version. A special option -nt AUTO will tell   to automatically determine the best number of cores given the current data and computer.-ntmaxSpecify the maximal number of CPU cores -nt AUTO is allowed to allocate DEFAULT CPU cores on the current machine-seedSpecify a random number seed to reproduce a previous run. This is normally used for debugging purposes. DEFAULT based on current machine clock-vTurn on verbose mode for printing more messages to screen. This is normally used for debugging purposes. DEFAULT OFF-quietSilent mode, suppress printing to the screen. Note that .log file is still written.-keep-identKeep identical sequences in the alignment. Bu default   will remove them during the analysis and add them in the end.-safeTurn on safe numerical mode to avoid numerical underflow for large data sets with many sequences (typically in the order of thousands). This mode is automatically turned on when having more than 2000 sequences.-memSpecify maximal RAM usage, for example, -mem 64G to use at most 64 GB of RAM. By default,   will try to not to exceed the computer RAM size.",25.0,General options,4.0,Command reference
261.0,Example usages,25.0,General options,4.0,Command reference
262.0,"Reconstruct a maximum-likelihood tree given a sequence alignment file example.phy  iqtree -s example.phyReconstruct a maximum-likelihood tree using at most 8 GB RAM and automatically detect the number of cores to use   For version <= 1.5.X  iqtree-omp -s example.phy -nt AUTO -mem 8G       For version >= 1.6.0, change iqtree-omp to just iqtree  iqtree -s example.phy -nt AUTO -mem 8GLike above but write all output to myrun.* files   For version <= 1.5.X  iqtree-omp -s example.phy -nt AUTO -mem 8G -pre myrun   For version <= 1.6.0  iqtree -s example.phy -nt AUTO -mem 8G -pre myrun",25.0,General options,4.0,Command reference
263.0,Checkpointing to resume stopped run,26.0,Checkpointing to resume stopped run,4.0,Command reference
264.0,"Starting with version 1.4.0   supports checkpointing If an   run was interrupted for some reason, rerunning it with the same command line and input data will automatically resume the analysis from the last stopped point. The previous log file will then be appended. If a run successfully finished,   will deny to rerun and issue an error message. A few options that control checkpointing behavior",26.0,Checkpointing to resume stopped run,4.0,Command reference
265.0,OptionUsage and meaning-redoRedo the entire analysis no matter if it was stopped or successful. WARNING This option will overwrite all existing output files.-cptimeSpecify the minimum checkpoint time interval in seconds (default 20s),26.0,Checkpointing to resume stopped run,4.0,Command reference
266.0,"NOTE   writes a checkpoint file with name suffix .ckp.gz in gzip format. Do not modify this file. If you delete this file, all checkpointing information will be lost",26.0,Checkpointing to resume stopped run,4.0,Command reference
267.0,Likelihood mapping analysis,27.0,Likelihood mapping analysis,4.0,Command reference
268.0,"Starting with version 1.4.0,   implements the likelihood mapping approach (Strimmer and von Haeseler, 1997) to assess the phylogenetic information of an input alignment. The detailed results will be printed to .iqtree report file. The likelihood mapping plots will be printed to .lmap.svg and .lmap.eps files.",27.0,Likelihood mapping analysis,4.0,Command reference
269.0,"Compared with the original implementation in TREE-PUZZLE,   is much faster and supports many more substitution models (including partition and mixture models).",27.0,Likelihood mapping analysis,4.0,Command reference
270.0,"OptionUsage and meaning-lmapSpecify the number of quartets to be randomly drawn. If you specify -lmap ALL, all unique quartets will be drawn, instead.-lmclustSpecify a NEXUS file containing taxon clusters (see below for example) for quartet mapping analysis.-n 0Skip subsequent tree search, useful when you only want to assess the phylogenetic information of the alignment.-wqlWrite quartet log-likelihoods into .lmap.quartetlh file (typically not needed).",27.0,Likelihood mapping analysis,4.0,Command reference
271.0,"TIP The number of quartets specified via -lmap is recommended to be at least 25 times the number of sequences in the alignment, such that each sequence is covered ~100 times in the set of quartets drawn.",27.0,Likelihood mapping analysis,4.0,Command reference
272.0,"An example NEXUS cluster file (where A, B, C, etc. are sequence names)",27.0,Likelihood mapping analysis,4.0,Command reference
273.0,NEXUSbegin sets;    taxset Cluster1 = A B C;    taxset Cluster2 = D E;    taxset Cluster3 = F G H I;    taxset Cluster4 = J;    taxset IGNORED = X;end;,27.0,Likelihood mapping analysis,4.0,Command reference
274.0,"Here, Cluster1 to Cluster4 are four user-defined clusters of sequences. Note that users can give any names to the clusters instead of Cluster1, etc. If a cluster is named ignored or IGNORED the sequences included will be ignored in the likelihood mapping analysis.",27.0,Likelihood mapping analysis,4.0,Command reference
275.0,"If you provide a cluster file it has to contain between 1 and 4 clusters (plus an optional IGNORED or ignored cluster), which will tell   to perform an unclustered (default without a cluster file) or a clustered analysis with 2, 3 or 4 groups, respectively.",27.0,Likelihood mapping analysis,4.0,Command reference
276.0,The names given to the clusters in the cluster file will be used to label the corners of the triangle diagrams.,27.0,Likelihood mapping analysis,4.0,Command reference
277.0,Example usages,27.0,Likelihood mapping analysis,4.0,Command reference
278.0,Perform solely likelihood mapping analysis (ignoring tree search) with 2000 quartets for an alignment example.phy with model being automatically selected  iqtree -s example.phy -lmap 2000 -n 0 -m TEST,27.0,Likelihood mapping analysis,4.0,Command reference
279.0,"You can now view the likelihood mapping plot file example.phy.lmap.svg, which looks like this",27.0,Likelihood mapping analysis,4.0,Command reference
280.0,"It shows phylogenetic information of the alignment example.phy. On the top distribution of quartets depicted by dots on the likelihood mapping plot. On the left the three areas show support for one of the different groupings like (a,b)-(c,d). On the right quartets falling into the three corners are informative. Those in three rectangles are partly informative and those in the center are uninformative. A good data set should have high number of informative quartets and low number of uninformative quartets. The meanings can also be found in the LIKELIHOOD MAPPING STATISTICS section of the report file example.phy.iqtree",27.0,Likelihood mapping analysis,4.0,Command reference
282.0,Automatic model selection,28.0,Automatic model selection,4.0,Command reference
283.0,"The default model (e.g., HKY F for DNA, LG for protein data) may not fit well to the data. Therefore,   allows to automatically determine the best-fit model via a series of -m TEST... option",28.0,Automatic model selection,4.0,Command reference
284.0,"OptionUsage and meaning-m TESTONLYPerform standard model selection like jModelTest (for DNA) and ProtTest (for protein). Moreover,   also works for codon, binary and morphogical data. If a partition file is specified,   will find the best-fit model for each partition.-m TESTLike -m TESTONLY but immediately followed by tree reconstruction using the best-fit model found. So this performs both model selection and tree inference within a single run.-m TESTNEWONLY or -m MFPerform an extended model selection that additionally includes FreeRate model compared with -m TESTONLY. Recommended as replacement for -m TESTONLY. Note that LG4X is a FreeRate model, but by default is not included because it is also a protein mixture model. To include it, use -madd option (see table below).-m TESTNEW or -m MFPLike -m MF but immediately followed by tree reconstruction using the best-fit model found.",28.0,Automatic model selection,4.0,Command reference
285.0,"TIP During model section,   will write a model checkpoint file (suffix .model in version <= 1.5.X or .model.gz in version >= 1.6.X) that stores information of all models tested so far. Thus, if   is interrupted for whatever reason, restarting the run will load this file to reuse the computation.",28.0,Automatic model selection,4.0,Command reference
286.0,  version 1.6 or later allows to additionally test Lie Markov DNA models by adding the following keyword to -m option,28.0,Automatic model selection,4.0,Command reference
287.0,OptionUsage and meaning LMAdditionally consider all Lie Markov models LMRYAdditionally consider all Lie Markov models with RY symmetry LMWSAdditionally consider all Lie Markov models with WS symmetry LMMKAdditionally consider all Lie Markov models with MK symmetry LMSSAdditionally consider all strand-symmetric Lie Markov models,28.0,Automatic model selection,4.0,Command reference
288.0,"When a partition file is specified then you can append MERGE keyword into -m option to find the best-fit partitioning scheme like PartitionFinder (Lanfear et al., 2012). More specifically,",28.0,Automatic model selection,4.0,Command reference
289.0,"OptionUsage and meaning-m TESTMERGEONLYSelect best-fit partitioning scheme by possibly merging partitions to reduce over-parameterization and increase model fit. It implements the greedy algorithm of PartitionFinder.-m TESTMERGELike -m TESTMERGEONLY but immediately followed by tree reconstruction using the best partitioning scheme found.-m TESTNEWMERGEONLY or -m MF MERGELike -m TESTMERGEONLY but additionally includes FreeRate model.-m TESTNEWMERGE or -m MFP MERGELike -m MF MERGE but immediately followed by tree reconstruction using the best partitioning scheme found.-rclusterSpecify the percentage for the relaxed clustering algorithm (Lanfear et al., 2014) to speed up the computation instead of the default slow greedy algorithm. This is similar to --rcluster-percent option of PartitionFinder. For example, with -rcluster 10 only the top 10% partition schemes are considered to save computations.-rclusterfSimilar to -rcluster but using the fast relaxed clustering algorithm (Lanfear et al., 2017) of PartitionFinder2. Introduced in version 1.6.-rcluster-maxSpecify the absolute maximum number of partition pairs in the paritition merging phase. Default the larger of 1000 and 10 times the number of partitions. This option is similar to --rcluster-max option of PartitionFinder2.",28.0,Automatic model selection,4.0,Command reference
290.0,"WARNING For versions <= 1.5.X, all commands with -m ...MERGE... will always perform an edge-unlinked partition scheme finding even if -spp option is used. Only in the next phase of tree reconstruction, then an edge-linked partition model is used. However, for versions 1.6.X onwards, the edge-linked partition finding is performed by -spp option.",28.0,Automatic model selection,4.0,Command reference
291.0,Several parameters can be set to e.g. reduce computations,28.0,Automatic model selection,4.0,Command reference
292.0,"OptionUsage and meaning-msetSpecify the name of a program (raxml, phyml or mrbayes) to restrict to only those models supported by the specified program. Alternatively, one can specify a comma-separated list of base models. For example, -mset WAG,LG,JTT will restrict model selection to WAG, LG, and JTT instead of all 18 AA models to save computations.-msubSpecify either nuclear, mitochondrial, chloroplast or viral to restrict to those AA models designed for specified source.-mfreqSpecify a comma-separated list of frequency types for model selection. DEFAULT -mfreq FU,F for protein models (FU = AA frequencies given by the protein matrix, F = empirical AA frequencies from the data), -mfreq ,F1x4,F3x4,F for codon models-mrateSpecify a comma-separated list of rate heterogeneity types for model selection. DEFAULT -mrate E,I,G,I G for standard procedure, -mrate E,I,G,I G,R for new selection procedure. (E means Equal/homogeneous rate model).-cminSpecify minimum number of categories for FreeRate model. DEFAULT 2-cmaxSpecify maximum number of categories for FreeRate model. It is recommended to increase if alignment is long enough. DEFAULT 10-meritSpecify either AIC, AICc or BIC for the optimality criterion to apply for new procedure. DEFAULT all three criteria are considered-mtreeTurn on full tree search for each model considered, to obtain more accurate result. Only recommended if enough computational resources are available. DEFAULT fixed starting tree-mredoIgnore model checkpoint file computed earlier. DEFAULT model checkpoint file (if exists) is loaded to reuse previous computations-maddSpecify a comma-separated list of mixture models to additionally consider for model selection. For example, -madd LG4M,LG4X to additionally include these two protein mixture models.-mdefSpecify a NEXUS model file to define new models.",28.0,Automatic model selection,4.0,Command reference
293.0,"NOTE Some of the above options require a comma-separated list, which should not contain any empty space",28.0,Automatic model selection,4.0,Command reference
294.0,Example usages,28.0,Automatic model selection,4.0,Command reference
295.0,"Select best-fit model for alignment data.phy based on Bayesian information criterion (BIC)  iqtree -s data.phy -m TESTONLYSelect best-fit model for a protein alignment prot.phy using the new testing procedure and only consider WAG, LG and JTT matrix to save time  iqtree -s prot.phy -m MF -mset WAG,LG,JTTFind the best partitioning scheme for alignment data.phy and partition file partition.nex with a relaxed clustering at 10% to save time  iqtree -s data.phy -spp partition.nex -m TESTMERGEONLY -rcluster 10",28.0,Automatic model selection,4.0,Command reference
296.0,Specifying substitution models,29.0,Specifying substitution models,4.0,Command reference
297.0,"-m is a powerful option to specify substitution models, state frequency and rate heterogeneity type. The general syntax is",29.0,Specifying substitution models,4.0,Command reference
298.0,-m MODEL FreqType RateType,29.0,Specifying substitution models,4.0,Command reference
299.0,"where MODEL is a model name,  FreqType (optional) is the frequency type and  RateType (optional) is the rate heterogeneity type.",29.0,Specifying substitution models,4.0,Command reference
300.0,The following MODELs are available,29.0,Specifying substitution models,4.0,Command reference
301.0,"DataTypeModel namesDNAJC/JC69, F81, K2P/K80, HKY/HKY85, TN/TrN/TN93, TNe, K3P/K81, K81u, TPM2, TPM2u, TPM3, TPM3u, TIM, TIMe, TIM2, TIM2e, TIM3, TIM3e, TVM, TVMe, SYM, GTR and 6-digit specification. See DNA models for more details.ProteinBLOSUM62, cpREV, Dayhoff, DCMut, FLU, HIVb, HIVw, JTT, JTTDCMut, LG, mtART, mtMAM, mtREV, mtZOA, mtMet, mtVer, mtInv, Poisson, PMB, rtREV, VT, WAG.ProteinMixture models C10, …, C60 (CAT model) (Lartillot and Philippe, 2004), EX2, EX3, EHO, UL2, UL3, EX_EHO, LG4M, LG4X, CF4. See Protein models for more details.CodonMG, MGK, MG1KTS, MG1KTV, MG2K, GY, GY1KTS, GY1KTV, GY2K, ECMK07/KOSI07, ECMrest, ECMS05/SCHN05 and combined empirical-mechanistic models. See Codon models for more details.BinaryJC2, GTR2. See Binary and morphological models for more details.MorphologyMK, ORDERED. See Binary and morphological models for more details.",29.0,Specifying substitution models,4.0,Command reference
302.0,The following FreqTypes are supported,29.0,Specifying substitution models,4.0,Command reference
303.0,FreqTypeMeaning FEmpirical state frequency observed from the data. FOState frequency optimized by maximum-likelihood from the data. Note that this is with letter-O and not digit-0. FQEqual state frequency. F1x4See Codon frequencies. F3x4See Codon frequencies.,29.0,Specifying substitution models,4.0,Command reference
304.0,Further options,29.0,Specifying substitution models,4.0,Command reference
305.0,"OptionUsage and meaning-mwoptTurn on optimizing weights of mixture models. Note that for models like LG C20 F G this mode is automatically turned on, but not for LG C20 G.",29.0,Specifying substitution models,4.0,Command reference
306.0,Example usages,29.0,Specifying substitution models,4.0,Command reference
307.0,Infer an ML tree for a DNA alignment dna.phy under GTR I G model  iqtree -s dna.phy -m GTR I GInfer an ML tree for a protein alignment prot.phy under LG F G model  iqtree -s prot.phy -m LG F GInfer an ML tree for a protein alignment prot.phy under profile mixture model LG C10 F G  iqtree -s prot.phy -m LG C10 F G,29.0,Specifying substitution models,4.0,Command reference
308.0,Rate heterogeneity,30.0,Rate heterogeneity,4.0,Command reference
309.0,The following RateTypes are supported,30.0,Rate heterogeneity,4.0,Command reference
310.0,"RateTypeMeaning IAllowing for a proportion of invariable sites. GDiscrete Gamma model (Yang, 1994) with default 4 rate categories. The number of categories can be changed with e.g.  G8. I GInvariable site plus discrete Gamma model (Gu et al., 1995). RFreeRate model (Yang, 1995; Soubrier et al., 2012) that generalizes  G by relaxing the assumption of Gamma-distributed rates. The number of categories can be specified with e.g.  R6. DEFAULT 4 categories I Rinvariable site plus FreeRate model.",30.0,Rate heterogeneity,4.0,Command reference
311.0,See Rate heterogeneity across sites for more details.,30.0,Rate heterogeneity,4.0,Command reference
312.0,Further options,30.0,Rate heterogeneity,4.0,Command reference
313.0,"OptionUsage and meaning-aSpecify the Gamma shape parameter (default estimate)-gmedianPerform the median approximation for Gamma rate heterogeneity instead of the default mean approximation (Yang, 1994)-iSpecify the proportion of invariable sites (default estimate)--opt-gamma-invPerform more thorough estimation for  I G model parameters-wsrWrite per-site rates to .rate file",30.0,Rate heterogeneity,4.0,Command reference
314.0,"Optionally, one can specify Ascertainment bias correction by appending  ASC to the model string. Advanced mixture models can also be specified via MIX{...} and FMIX{...} syntax. Option -mwopt can be used to turn on optimizing weights of mixture models.",30.0,Rate heterogeneity,4.0,Command reference
315.0,Partition model options,31.0,Partition model options,4.0,Command reference
316.0,Partition models are used for phylogenomic data with multiple genes. You first have to prepare a partition file in NEXUS or RAxML-style format. Then use the following options to input the partition file,31.0,Partition model options,4.0,Command reference
317.0,"OptionUsage and meaning-qSpecify partition file for edge-equal partition model. That means, all partitions share the same set of branch lengths (like -q option of RAxML).-sppLike -q but allowing partitions to have different evolutionary speeds (edge-proportional partition model).-spSpecify partition file for edge-unlinked partition model. That means, each partition has its own set of branch lengths (like -M option of RAxML). This is the most parameter-rich partition model to accomodate heterotachy.",31.0,Partition model options,4.0,Command reference
318.0,Site-specific frequency model options,32.0,Site-specific frequency model options,4.0,Command reference
319.0,The site-specific frequency model is used to substantially reduce the time and memory requirement compared with full profile mixture models C10 to C60. For full details see site-specific frequency model. To use this model you have to specify a profile mixture model with e.g. -m LG C20 F G together with a guide tree or a site frequency file,32.0,Site-specific frequency model options,4.0,Command reference
320.0,"OptionUsage and meaning-ftSpecify a guide tree (in Newick format) to infer site frequency profiles.-fsSpecify a site frequency file, e.g. the .sitefreq file obtained from -ft run. This will save memory used for the first phase of the analysis.-fmaxSwitch to posterior maximum mode for obtaining site-specific profiles. Default posterior mean.",32.0,Site-specific frequency model options,4.0,Command reference
321.0,With -fs option you can input a file containing your own site frequency profiles. The format of this file is that each line contains the site ID (starting from 1) and the state frequencies (20 for amino-acid) separated by white space. So it has as many lines as the number of sites in the alignment. The order of amino-acids is,32.0,Site-specific frequency model options,4.0,Command reference
322.0, A   R   N   D   C   Q   E   G   H   I   L   K   M   F   P   S   T   W   Y   V,32.0,Site-specific frequency model options,4.0,Command reference
323.0,Tree search parameters,33.0,Tree search parameters,4.0,Command reference
324.0,"The new   search algorithm (Nguyen et al., 2015) has several parameters that can be changed with",33.0,Tree search parameters,4.0,Command reference
325.0,"OptionUsage and meaning-allnniTurn on more thorough and slower NNI search. It means that   will consider all possible NNIs instead of only those in the vicinity of previously applied NNIs. DEFAULT OFF-djcAvoid computing ML pairwise distances and BIONJ tree.-fastTurn on the fast tree search mode, where   will just construct two starting trees maximum parsimony and BIONJ, which are then optimized by nearest neighbor interchange (NNI). Introduced in version 1.6.-gSpecify a topological constraint tree file in NEWICK format. The constraint tree can be a multifurcating tree and need not to include all taxa.-ninitSpecify number of initial parsimony trees. DEFAULT 100. Here the PLL library (Flouri et al., 2015) is used, which implements the randomized stepwise addition and parsimony subtree pruning and regafting (SPR).-nSpecify number of iterations to stop. This option overrides -nstop criterion.-ntopSpecify number of top initial parsimony trees to optimize with ML nearest neighbor interchange (NNI) search to initialize the candidate set. DEFAULT 20-nbestSpecify number of trees in the candidate set to maintain during ML tree search. DEFAULT 5-nstopSpecify number of unsuccessful iterations to stop. DEFAULT 100-persSpecify perturbation strength (between 0 and 1) for randomized NNI. DEFAULT 0.5-sprradSpecify SPR radius for the initial parsimony tree search. DEFAULT 6",33.0,Tree search parameters,4.0,Command reference
326.0,"NOTE While the default parameters were empirically determined to work well under our extensive benchmark (Nguyen et al., 2015), it might not hold true for all data sets. If in doubt that tree search is still stuck in local optima, one should repeat analysis with at least 10   runs. Moreover, our experience showed that -pers and -nstop are the most relevant options to change in such case. For example, data sets with many short sequences should be analyzed with smaller perturbation strength (e.g. -pers 0.2) and larger number of stop iterations (e.g. -nstop 500).",33.0,Tree search parameters,4.0,Command reference
327.0,Example usages,33.0,Tree search parameters,4.0,Command reference
328.0,Infer an ML tree for an alignment data.phy with increased stopping iteration of 500 and reduced perturbation strength of 0.2  iqtree -s data.phy -m TEST -nstop 500 -pers 0.2Infer an ML tree for an alignment data.phy obeying a topological constraint tree constraint.tree  iqtree -s data.phy -m TEST -g constraint.tree,33.0,Tree search parameters,4.0,Command reference
329.0,Ultrafast bootstrap parameters,34.0,Ultrafast bootstrap parameters,4.0,Command reference
330.0,"The ultrafast bootstrap (UFBoot) approximation (Minh et al., 2013; Hoang et al., in press) has several parameters that can be changed with",34.0,Ultrafast bootstrap parameters,4.0,Command reference
331.0,"OptionUsage and meaning-bbSpecify number of bootstrap replicates (>=1000).-bcorSpecify minimum correlation coefficient for UFBoot convergence criterion. DEFAULT 0.99-bepsSpecify a small epsilon to break tie in RELL evaluation for bootstrap trees. DEFAULT 0.5-bnniPerform an additional step to further optimize UFBoot trees by nearest neighbor interchange (NNI) based directly on bootstrap alignments. This option is recommended in the presence of severe model violations. It increases computing time by 2-fold but reduces the risk of overestimating branch supports due to severe model violations. Introduced in   1.6.-bsamSpecify the resampling strategies for partitioned analysis. By default,   resamples alignment sites within partitions. With -bsam GENE   will resample partitions. With -bsam GENESITE   will resample partitions and then resample sites within resampled partitions (Gadagkar et al., 2005; Seo et al., 2005).-nmSpecify maximum number of iterations to stop. DEFAULT 1000-nstepSpecify iteration interval checking for UFBoot convergence. DEFAULT every 100 iterations-wbtTurn on writing bootstrap trees to .ufboot file. DEFAULT OFF-wbtlLike -wbt but bootstrap trees written with branch lengths. DEFAULT OFF",34.0,Ultrafast bootstrap parameters,4.0,Command reference
332.0,Example usages,34.0,Ultrafast bootstrap parameters,4.0,Command reference
333.0,"Select best-fit model, infer an ML tree and perform ultrafast bootstrap with 1000 replicates  iqtree -s data.phy -m TEST -bb 1000Reconstruct ML and perform ultrafast bootstrap (5000 replicates) under a partition model file partition.nex  iqtree -s data.phy -spp partition.nex -m TEST -bb 5000",34.0,Ultrafast bootstrap parameters,4.0,Command reference
334.0,Nonparametric bootstrap,35.0,Nonparametric bootstrap,4.0,Command reference
335.0,"The slow standard nonparametric bootstrap (Felsenstein, 1985) can be run with",35.0,Nonparametric bootstrap,4.0,Command reference
336.0,OptionUsage and meaning-bSpecify number of bootstrap replicates (recommended >=100). This will perform both bootstrap and analysis on original alignment and provide a consensus tree.-bcLike -b but omit analysis on original alignment.-boLike -b but only perform bootstrap analysis (no analysis on original alignment and no consensus tree).,35.0,Nonparametric bootstrap,4.0,Command reference
337.0,Single branch tests,36.0,Single branch tests,4.0,Command reference
338.0,"The following single branch tests are faster than all bootstrap analysis and recommended for extremely large data sets (e.g., >10,000 taxa)",36.0,Single branch tests,4.0,Command reference
339.0,"OptionUsage and meaning-alrtSpecify number of replicates (>=1000) to perform SH-like approximate likelihood ratio test (SH-aLRT) (Guindon et al., 2010). If number of replicates is set to 0 (-alrt 0), then the parametric aLRT test (Anisimova and Gascuel 2006) is performed, instead of SH-aLRT.-abayesPerform approximate Bayes test (Anisimova et al., 2011).-lbpSpecify number of replicates (>=1000) to perform fast local bootstrap probability method (Adachi and Hasegawa, 1996b).",36.0,Single branch tests,4.0,Command reference
340.0,"TIP One can combine all these tests (also including UFBoot -bb option) within a single   run. Each branch in the resulting tree will be assigned several support values separated by slash (/), where the order of support values is stated in the .iqtree report file.",36.0,Single branch tests,4.0,Command reference
341.0,Example usages,36.0,Single branch tests,4.0,Command reference
342.0,Infer an ML tree and perform SH-aLRT test as well as ultrafast bootstrap with 1000 replicates  iqtree -s data.phy -m TEST -alrt 1000 -bb 1000,36.0,Single branch tests,4.0,Command reference
343.0,Ancestral sequence reconstruction,37.0,Ancestral sequence reconstruction,4.0,Command reference
344.0,"This feature is newly introduced in version 1.6. You can combine this feature with -te option to determine ancestral sequences along a user-defined tree (Otherwise,   computes ancestral sequences of the ML tree).",37.0,Ancestral sequence reconstruction,4.0,Command reference
345.0,"OptionUsage and meaning-asrWrite ancestral sequences (by empirical Bayesian method) for all nodes of the tree to .state file.-asr-minSpecify the minimum threshold of posterior probability to determine the best ancestral state. Default observed state frequency from the alignment.-teSpecify a user-defined tree to determine ancestral sequences along this tree. You can assign each node of this tree with a node name, and   will report the ancestral sequences of the corresponding nodes. If nodes do not have names,   will automatically assign node namdes as Node1, Node2, etc.",37.0,Ancestral sequence reconstruction,4.0,Command reference
346.0,Example usages,37.0,Ancestral sequence reconstruction,4.0,Command reference
347.0,iqtree -s example.phy -m JC G -asr,37.0,Ancestral sequence reconstruction,4.0,Command reference
348.0,The first few lines of the output file example.phy.state may look like this,37.0,Ancestral sequence reconstruction,4.0,Command reference
349.0," Ancestral state reconstruction for all nodes in example.phy.treefile This file can be read in MS Excel or in R with command   tab=read.table('example.phy.state',header=TRUE) Columns are tab-separated with following meaning   Node  Node name in the tree   Site  Alignment site ID   State Most likely state assignment   p_X   Posterior probability for state X (empirical Bayesian method)Node    Site    State   p_A     p_C     p_G     p_TNode2   1       C       0.00004 0.99992 0.00002 0.00002Node2   2       A       0.92378 0.00578 0.00577 0.06468Node2   3       A       0.95469 0.02634 0.00675 0.01222Node2   4       C       0.00002 0.99992 0.00002 0.00004...",37.0,Ancestral sequence reconstruction,4.0,Command reference
350.0,Tree topology tests,38.0,Tree topology tests,4.0,Command reference
351.0,"  provides a number of tests for significant topological differences between trees. The AU test implementation in   is much more efficient than the original CONSEL by supporting SSE, AVX and multicore parallelization. Moreover, it is more appropriate than CONSEL for partition analysis by bootstrap resampling sites within partitions, whereas CONSEL is not partition-aware.",38.0,Tree topology tests,4.0,Command reference
352.0,"NOTE There is a discrepancy between   and CONSEL for the AU test   implements the least-square estimate for p-values whereas CONSEL provides the maximum-likelihood estimate (MLE) for p-values. Hence, the AU p-values might be slightly different. We plan to implement MLE for AU p-values in   soon.",38.0,Tree topology tests,4.0,Command reference
353.0,"OptionUsage and meaning-zSpecify a file containing a set of trees.   will compute the log-likelihoods of all trees.-zbSpecify the number of RELL (Kishino et al., 1990) replicates (>=1000) to perform several tree topology tests for all trees passed via -z. The tests include bootstrap proportion (BP), KH test (Kishino and Hasegawa, 1989), SH test (Shimodaira and Hasegawa, 1999) and expected likelihood weights (ELW) (Strimmer and Rambaut, 2002).-zwUsed together with -zb to additionally perform the weighted-KH and weighted-SH tests.-auUsed together with -zb to additionally perform the approximately unbiased (AU) test (Shimodaira, 2002). Note that you have to specify the number of replicates for the AU test via -zb.-n 0Only estimate model parameters on an initial parsimony tree and ignore a full tree search to save time.-teSpecify a fixed user tree to estimate model parameters. Thus it behaves like -n 0 but uses a user-defined tree instead of parsimony tree.",38.0,Tree topology tests,4.0,Command reference
354.0,Example usages,38.0,Tree topology tests,4.0,Command reference
355.0,"Given alignment data.phy, test a set of trees in data.trees using AU test with 10,000 replicates  iqtree -s data.phy -m GTR G -n 0 -z data.trees -zb 10000 -au Same above but for a partitioned data partition.nex and additionally performing weighted test  iqtree -s data.phy -spp partition.nex -n 0 -z data.trees -zb 10000 -au -zw",38.0,Tree topology tests,4.0,Command reference
356.0,Constructing consensus tree,39.0,Constructing consensus tree,4.0,Command reference
357.0,  provides a fast implementation of consensus tree construction for post analysis,39.0,Constructing consensus tree,4.0,Command reference
358.0,"OptionUsage and meaning-tSpecify a file containing a set of trees.-conCompute consensus tree of the trees passed via -t. Resulting consensus tree is written to .contree file.-netCompute consensus network of the trees passed via -t. Resulting consensus network is written to .nex file.-minsupSpecify a minimum threshold (between 0 and 1) to keep branches in the consensus tree. -minsup 0.5 means to compute majority-rule consensus tree. DEFAULT 0 to compute extended majority-rule consensus.-biSpecify a burn-in, which is the number of beginning trees passed via -t to discard before consensus construction. This is useful e.g. when summarizing trees from MrBayes analysis.-supSpecify an input “target” tree file. That means, support values are first extracted from the trees passed via -t, and then mapped onto the target tree. Resulting tree with assigned support values is written to .suptree file. This option is useful to map and compare support values from different approaches onto a single tree.-suptagSpecify name of a node in -sup target tree. The corresponding node of .suptree will then be assigned with IDs of trees where this node appears. Special option -suptag ALL will assign such IDs for all nodes of the target tree.-scaleSet the scaling factor of support values for -sup option (default 100, i.e. percentages)-precSet the precision of support values for -sup option (default 0)",39.0,Constructing consensus tree,4.0,Command reference
359.0,Computing Robinson-Foulds distance,40.0,Computing Robinson-Foulds distance,4.0,Command reference
360.0,  provides a fast implementation of Robinson-Foulds (RF) distance computation between trees,40.0,Computing Robinson-Foulds distance,4.0,Command reference
361.0,OptionUsage and meaning-tSpecify a file containing a set of trees.-rfSpecify a second set of trees.   computes all pairwise RF distances between two tree sets passed via -t and -rf-rf_allCompute all-to-all RF distances between all trees passed via -t-rf_adjCompute RF distances between adjacent trees passed via -t,40.0,Computing Robinson-Foulds distance,4.0,Command reference
362.0,Example usages,40.0,Computing Robinson-Foulds distance,4.0,Command reference
363.0,Compute the pairwise RF distances between 2 sets of trees  iqtree -rf tree_set1 tree_set2Compute the all-to-all RF distances within a set of trees  iqtree -rf_all tree_set,40.0,Computing Robinson-Foulds distance,4.0,Command reference
364.0,Generating random trees,41.0,Generating random trees,4.0,Command reference
365.0,  provides several random tree generation models,41.0,Generating random trees,4.0,Command reference
366.0,"OptionUsage and meaning-rSpecify number of taxa.   will create a random tree under Yule-Harding model with specified number of taxa-ruLike -r, but a random tree is created under uniform model.-rcatLike -r, but a random caterpillar tree is created.-rbalLike -r, but a random balanced tree is created.-rcsgLike -r, bur a random circular split network is created.-rlenSpecify three numbers minimum, mean and maximum branch lengths of the random tree. DEFAULT -rlen 0.001 0.1 0.999",41.0,Generating random trees,4.0,Command reference
367.0,Example usages,41.0,Generating random trees,4.0,Command reference
368.0,Generate a 100-taxon random tree into the file 100.tree under the Yule Harding model  iqtree -r 100 100.tree Generate 100-taxon random tree with mean branch lengths of 0.2 and branch lengths are between 0.05 and 0.3  iqtree -r 100 -rlen 0.05 0.2 0.3 100.tree Generate a random tree under uniform model  iqtree -ru 100 100.tree Generate a random tree where taxon labels follow an alignment  iqtree -s example.phy -r 17 example.random.tree ,41.0,Generating random trees,4.0,Command reference
369.0,"Note that, you still need to specify the -r option being equal to the number of taxa in the alignment.",41.0,Generating random trees,4.0,Command reference
370.0,Miscellaneous options,42.0,Miscellaneous options,4.0,Command reference
371.0,"OptionUsage and meaning-alninfoPrint alignment site statistics to .alninfo file.-blfixFix branch lengths of tree passed via -t or -te. This is useful to evaluate the log-likelihood of an input tree with fixed tolopogy and branch lengths. DEFAULT OFF-blminSpecify minimum branch length. Default the smaller of 0.000001 and 0.1/alignment_length.-blmaxSpecify the maximum branch length. Default 10-czbCollapse near zero branches, so that the final tree may be multifurcating. This is useful for bootstrapping in the presence of polytomy to reduce bootstrap supports of short branches.-meSpecify the log-likelihood epsilon for final model parameter estimation (Default 0.01). With -fast option, the epsilon is raised to 0.05.-wplWrite partition log-likelihoods to .partlh file. Only effective with partition model.-wsprWrite site posterior probabilities per rate category to .siteprob file.-wspmWrite site posterior probabilities per mixture class to .siteprob file.-wspmrWrite site posterior probabilities per mixture class and rate category to .siteprob file.-wslWrite site log-likelihoods to .sitelh file in TREE-PUZZLE format. Such file can then be passed on to CONSEL for further tree tests.-wslrWrite site log-likelihoods per rate category to .sitelh file.-wslmWrite site log-likelihoods per mixture class to .sitelh file.-wslmrWrite site log-likelihoods per mixture class and rate category to .sitelh file.-wtTurn on writing all locally optimal trees into .treels file.-fconstSpecify a list of comma-separated integer numbers. The number of entries should be equal to the number of states in the model (e.g. 4 for DNA and 20 for protein).   will then add a number of constant sites accordingly. For example, -fconst 10,20,15,40 will add 10 constant sites of all A, 20 constant sites of all C, 15 constant sites of all G and 40 constant sites of all T into the alignment.",42.0,Miscellaneous options,4.0,Command reference
372.0,Example usages,42.0,Miscellaneous options,4.0,Command reference
373.0,Print alignment information about parsimony informative sites  iqtree -s example.phy -m JC -n 0 -alninfo,42.0,Miscellaneous options,4.0,Command reference
374.0,The first few lines of the output file example.phy.alninfo may look like this,42.0,Miscellaneous options,4.0,Command reference
375.0," Alignment site statistics This file can be read in MS Excel or in R with command   tab=read.table('example.phy.alninfo',header=TRUE) Columns are tab-separated with following meaning   Site   Site ID   Stat   Statistic, I=informative, C=constant, c=constant ambiguous,           U=Uninformative but not constant, -=all-gapsSite    Stat1       U2       I3       I4       U5       U",42.0,Miscellaneous options,4.0,Command reference
376.0,Print site log-likelihood and posterior probability for each Gamma rate category  iqtree -s example.phy -m JC G -wspr -wslr  -n 0,42.0,Miscellaneous options,4.0,Command reference
377.0,The first few lines of the output file example.phy.siteprob (printed by -wspr option) may look like this,42.0,Miscellaneous options,4.0,Command reference
378.0,Site    p1      p2      p3      p41       0.180497        0.534405        0.281   0.004098162       4.73239e-05     0.0373409       0.557705        0.4049073       1.23186e-08     0.000426294     0.0672021       0.9323724       0.180497        0.534405        0.281   0.004098165       0.180497        0.534405        0.281   0.00409816,42.0,Miscellaneous options,4.0,Command reference
379.0,where pX is the probability of the site falling into rate category X.,42.0,Miscellaneous options,4.0,Command reference
380.0,The first few lines of the output file example.phy.sitelh (printed by -wslr option) may look like this,42.0,Miscellaneous options,4.0,Command reference
381.0," Site likelihood per rate/mixture category This file can be read in MS Excel or in R with command   tab=read.table('example.phy.sitelh',header=TRUE,fill=TRUE) Columns are tab-separated with following meaning   Site   Alignment site ID   LnL    Logarithm of site likelihood           Thus, sum of LnL is equal to tree log-likelihood   LnLW_k Logarithm of (category-k site likelihood times category-k weight)           Thus, sum of exp(LnLW_k) is equal to exp(LnL)Site    LnL     LnLW_1  LnLW_2  LnLW_3  LnLW_41       -7.0432 -8.7552 -7.6698 -8.3126 -12.54042       -17.5900        -27.5485        -20.8776        -18.1739        -18.49413       -20.3313        -38.5435        -28.0917        -23.0314        -20.40144       -7.0432 -8.7552 -7.6698 -8.3126 -12.54045       -7.0432 -8.7552 -7.6698 -8.3126 -12.5404",42.0,Miscellaneous options,4.0,Command reference
382.0,General requirements,43.0,General requirements,5.0,Compilation guide
383.0,"A C   compiler such as GCC (version >= 4.8), Clang, MS Visual Studio and Intel C   compiler.CMake version >= 2.8.10.Boost library for   version 2. Boost library is typically available under Linux. Under MacOS you use Homebrew and run brew install boost to install the Boost library. By default   will detect the path to the installed Boost library.Eigen3 library (for   version >= 1.6). Under MacOS you use Homebrew and run brew install eigen to install the Boost library. By default   will detect the path to the installed Eigen3 library. If this failed, you have to manually specify -DEIGEN3_INCLUDE_DIR=<installed_eigen3_dir> to the cmake command (see below).OpenMP library, which is used to compile the multicore version. This should typically be the case with gcc under Linux. Under MacOS you use Homebrew and run brew install libomp to install the OpenMP library.(Optional) Install git if you want to clone source code from   GitHub repository.",43.0,General requirements,5.0,Compilation guide
384.0,Downloading source code,44.0,Downloading source code,5.0,Compilation guide
385.0,Choose the source code (zip or tar.gz) of the   release you want to use from,44.0,Downloading source code,5.0,Compilation guide
386.0,https//github.com/iqtree/iqtree2/releases,44.0,Downloading source code,5.0,Compilation guide
387.0,For   version 1 please use,44.0,Downloading source code,5.0,Compilation guide
388.0,https//github.com/Cibiv/ /releases/,44.0,Downloading source code,5.0,Compilation guide
389.0,"Alternatively, if you have git installed, you can also clone the source code from GitHub with",44.0,Downloading source code,5.0,Compilation guide
390.0,git clone https//github.com/iqtree/iqtree2.git,44.0,Downloading source code,5.0,Compilation guide
391.0,For   version 1 please clone,44.0,Downloading source code,5.0,Compilation guide
392.0,git clone https//github.com/Cibiv/ .git,44.0,Downloading source code,5.0,Compilation guide
393.0,"Please find below separate compilation guide fors Linux, Mac OS X, and Windows as well as for 32-bit version or for MPI version.",44.0,Downloading source code,5.0,Compilation guide
394.0,Compiling under Linux,45.0,Compiling under Linux,5.0,Compilation guide
395.0,TIP Ready made   packages are provided for Debian and Arch Linux (AUR).,45.0,Compiling under Linux,5.0,Compilation guide
396.0,"Open a Terminal.Change to the source code folder cd PATH_TO_EXTRACTED_SOURCE_CODECreate a subfolder, say, build and go into this subfolder mkdir build cd buildConfigure source code with CMake cmake ..If cmake failed with message about Eigen3 not found, then install Eigen3 library and run cmake again. If this still failed, you have to manually specify the downloaded directory of Eigen3 with cmake -DEIGEN3_INCLUDE_DIR=<eigen3_dir> ..Compile source code with make make -jj option tells it to use all CPU cores to speed up the compilation. Without this option, make uses only one core, which might be slow.",45.0,Compiling under Linux,5.0,Compilation guide
397.0,This creates an executable iqtree2 (iqtree for version 1). It can be copied to your system search path so that   can be called from the Terminal simply with the command line iqtree2.,45.0,Compiling under Linux,5.0,Compilation guide
398.0,"TIP The above guide typically compiles   with gcc. If you have Clang installed and want to compile with Clang, the compilation will be similar to Mac OS X like below.",45.0,Compiling under Linux,5.0,Compilation guide
399.0,Compiling under Mac OS X,46.0,Compiling under Mac OS X,5.0,Compilation guide
400.0,TIP A ready made   package is provided by * Homebrew by simply running brew install homebrew/science/iqtree2.,46.0,Compiling under Mac OS X,5.0,Compilation guide
401.0,"Make sure that Clang compiler is installed, which is typically the case if you installed Xcode and the associated command line tools.If you installed cmake with HomebrewFind the path to the CMake executable, which is typically /Applications/CMake.app/Contents/bin/cmake. For later convenience, please create a symbolic link cmake to this cmake executable, so that cmake can be invoked from the Terminal by simply entering cmake.",46.0,Compiling under Mac OS X,5.0,Compilation guide
402.0,"The steps to compile   are similar to Linux (see above), except that you need to specify clang as compiler when configuring source code with CMake (step 4)",46.0,Compiling under Mac OS X,5.0,Compilation guide
403.0,cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang   ..,46.0,Compiling under Mac OS X,5.0,Compilation guide
404.0,(please change cmake to absolute path like /Applications/CMake.app/Contents/bin/cmake).,46.0,Compiling under Mac OS X,5.0,Compilation guide
405.0,"To compile the multicore version, the default installed Clang unfortunately does not support OpenMP (which might change in the near future). However, the latest Clang 3.7 supports OpenMP, which can be downloaded from http//clang.llvm.org. After that you can run CMake with",46.0,Compiling under Mac OS X,5.0,Compilation guide
406.0,cmake -DIQTREE_FLAGS=omp -DCMAKE_C_COMPILER=clang-3.7 -DCMAKE_CXX_COMPILER=clang  -3.7 ..,46.0,Compiling under Mac OS X,5.0,Compilation guide
407.0,(assuming that clang-3.7 and clang  -3.7 points to the installed Clang 3.7).,46.0,Compiling under Mac OS X,5.0,Compilation guide
408.0,Compiling under Windows,47.0,Compiling under Windows,5.0,Compilation guide
409.0,Please first install TDM-GCC (a GCC version for Windows) from http//tdm-gcc.tdragon.net.Then install Clang for Windows from http//clang.llvm.org.,47.0,Compiling under Windows,5.0,Compilation guide
410.0,"WARNING Although   can also be built with TDM-GCC, the executable does not run properly due to stack alignment issue and the libgomp library causes downgraded performance for the OpenMP version. Thus, it is recommended to compile   with Clang.",47.0,Compiling under Windows,5.0,Compilation guide
411.0,"Open Command Prompt.Change to the source code folder cd PATH_TO_EXTRACTED_SOURCE_CODEPlease note that Windows uses back-slash (\) instead of slash (/) as path name separator.Create a subfolder, say, build and go into this subfolder mkdir build cd buildConfigure source code with CMake cmake -G ""MinGW Makefiles"" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang   -DCMAKE_C_FLAGS=--target=x86_64-pc-windows-gnu -DCMAKE_CXX_FLAGS=--target=x86_64-pc-windows-gnu -DCMAKE_MAKE_PROGRAM=mingw32-make ..To build the multicore version please add -DIQTREE_FLAGS=omp to the cmake command. Note that the make program shipped with TDM-GCC is called mingw32-make, thus needed to specify like above. You can also copy mingw32-make to make to simplify this step.Compile source code with mingw32-makeor mingw32-make -j4to use 4 cores for compilation instead of only 1.",47.0,Compiling under Windows,5.0,Compilation guide
412.0,Compiling 32-bit version,48.0,Compiling 32-bit version,5.0,Compilation guide
413.0,"NOTE Typically a 64-bit   version is built and recommended The 32-bit version has several restriction like maximal RAM usage of 2GB and no AVX support, thus not suitable to analyze large data sets.",48.0,Compiling 32-bit version,5.0,Compilation guide
414.0,"To compile the 32-bit version instead, simply add m32 into IQTREE_FLAGS of the cmake command",48.0,Compiling 32-bit version,5.0,Compilation guide
415.0,cmake -DIQTREE_FLAGS=m32 .. ,48.0,Compiling 32-bit version,5.0,Compilation guide
416.0,"To build the 32-bit multicore version, run",48.0,Compiling 32-bit version,5.0,Compilation guide
417.0,cmake -DIQTREE_FLAGS=omp-m32 ..,48.0,Compiling 32-bit version,5.0,Compilation guide
418.0,For Windows you need to change Clang target with,48.0,Compiling 32-bit version,5.0,Compilation guide
419.0,"cmake -G ""MinGW Makefiles"" -DCMAKE_C_FLAGS=--target=i686-pc-windows-gnu -DCMAKE_CXX_FLAGS=--target=i686-pc-windows-gnu -DCMAKE_MAKE_PROGRAM=mingw32-make ..",48.0,Compiling 32-bit version,5.0,Compilation guide
420.0,Compiling MPI version,49.0,Compiling MPI version,5.0,Compilation guide
421.0,Requirements,49.0,Compiling MPI version,5.0,Compilation guide
422.0,"Download source code of   version 1.5.1 or later.Install an MPI library (e.g., OpenMPI) if not available in your system. For Mac OS X, the easiest is to install Homebrew package manager, and then install OpenMPI library from the command line with  brew install openmpi",49.0,Compiling MPI version,5.0,Compilation guide
423.0,Then simply run CMake and make by,49.0,Compiling MPI version,5.0,Compilation guide
424.0,cmake -DIQTREE_FLAGS=mpi ..make -j4,49.0,Compiling MPI version,5.0,Compilation guide
425.0,"  will automatically detect and setup the MPI paths and library. Alternatively, you can also use the MPI C/C   compiler wrappers (typically named mpicc and mpicxx), for example",49.0,Compiling MPI version,5.0,Compilation guide
426.0,cmake -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx ..make -j4,49.0,Compiling MPI version,5.0,Compilation guide
427.0,The executable is named iqtree-mpi. One can then run mpirun to start the MPI version with e.g. 2 processes,49.0,Compiling MPI version,5.0,Compilation guide
428.0,mpirun -np 2 iqtree-mpi -s alignment ...,49.0,Compiling MPI version,5.0,Compilation guide
429.0,"If you want to compile the hybrid MPI/OpenMP version, simply run",49.0,Compiling MPI version,5.0,Compilation guide
430.0,cmake -DIQTREE_FLAGS=omp-mpi ..make -j4,49.0,Compiling MPI version,5.0,Compilation guide
431.0,"The resulting executable is then named iqtree-mpi (iqtree-omp-mpi for   versions <= 1.5.X). This can be used to start an MPI run with e.g. 4 processes and 2 cores each (i.e., a total of 8 cores will be used)",49.0,Compiling MPI version,5.0,Compilation guide
432.0, For   version <= 1.5.Xmpirun -np 4 iqtree-omp-mpi -nt 2 -s alignment ... For   version >= 1.6.0mpirun -np 4 iqtree-mpi -nt 2 -s alignment ...,49.0,Compiling MPI version,5.0,Compilation guide
433.0,"NOTE Please be aware that OpenMP and OpenMPI are different OpenMP is the standard to implement shared-memory multithreading program, that we use to provide the multicore   version. Whereas OpenMPI is a message passing interface (MPI) library for distributed memory parallel system, that is used to compile iqtree-mpi. Thus, one cannot run iqtree with mpirun",49.0,Compiling MPI version,5.0,Compilation guide
434.0,Compiling Xeon Phi Knights Landing version,50.0,Compiling Xeon Phi Knights Landing version,5.0,Compilation guide
435.0,"Starting with version 1.6,   supports Xeon Phi Knights Landing (AVX-512 instruction set). To build this version the following requirements must be met",50.0,Compiling Xeon Phi Knights Landing version,5.0,Compilation guide
436.0,"A C   compiler, which supports AVX-512 instruction set GCC 5.1, Clang 3.7, or Intel compiler 14.0.",50.0,Compiling Xeon Phi Knights Landing version,5.0,Compilation guide
437.0,The compilation steps are the same except that you need to add -DIQTREE_FLAGS=KNL to the cmake command,50.0,Compiling Xeon Phi Knights Landing version,5.0,Compilation guide
438.0,cmake -DIQTREE_FLAGS=KNL ..make -j4,50.0,Compiling Xeon Phi Knights Landing version,5.0,Compilation guide
439.0,"The compiled iqtree binary will automatically choose the proper computational kernel for the running computer. Thus, it works as normal and will speed up on Knights Landing CPUs. Run ./iqtree to make sure that the binary was compiled correctly",50.0,Compiling Xeon Phi Knights Landing version,5.0,Compilation guide
440.0,  multicore Xeon Phi KNL version 1.6.beta for Linux 64-bit built May  7 2017,50.0,Compiling Xeon Phi Knights Landing version,5.0,Compilation guide
441.0,About precompiled binaries,51.0,About precompiled binaries,5.0,Compilation guide
442.0,"To provide the pre-compiled   binaries at http//www.iqtree.org, we used Clang 3.9.0 for Windows and Clang 4.0 for Linux and macOS. We recommend to use Clang instead of GCC as Clang-compiled binaries run about 5-10% faster than GCC-compiled ones.",51.0,About precompiled binaries,5.0,Compilation guide
443.0,Linux binaries were statically compiled with Ubuntu 16.4 using libc   library. The static-linked binaries will thus run on most Linux distributions. The CMake command is (assuming that clang-4 and clang  -4 point to the installed Clang),51.0,About precompiled binaries,5.0,Compilation guide
444.0, 64-bit versioncmake -DIQTREE_FLAGS=static-libcxx -DCMAKE_C_COMPILER=clang-4 -DCMAKE_CXX_COMPILER=clang  -4 <source_dir> 32-bit versioncmake -DIQTREE_FLAGS=static-m32 -DCMAKE_C_COMPILER=clang-4 -DCMAKE_CXX_COMPILER=clang  -4 <source_dir>,51.0,About precompiled binaries,5.0,Compilation guide
445.0,"macOS binaries were compiled under macOS Sierra, but the binaries are backward compatible with Mac OS X 10.7 Lion",51.0,About precompiled binaries,5.0,Compilation guide
446.0,cmake -DCMAKE_C_COMPILER=clang-4 -DCMAKE_CXX_COMPILER=clang  -4 <source_dir>,51.0,About precompiled binaries,5.0,Compilation guide
447.0,"Windows binaries were statically compiled under Windows 7 using Clang 3.9.0 in combination with TDM-GCC 5.1.0, which provides the neccessary libraries for Clang.",51.0,About precompiled binaries,5.0,Compilation guide
448.0," 64-bit versioncmake -G ""MinGW Makefiles"" -DIQTREE_FLAGS=static -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang   -DCMAKE_C_FLAGS=--target=x86_64-pc-windows-gnu -DCMAKE_CXX_FLAGS=--target=x86_64-pc-windows-gnu -DCMAKE_MAKE_PROGRAM=mingw32-make ..32-bit versioncmake -G ""MinGW Makefiles"" -DIQTREE_FLAGS=static -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang   -DCMAKE_C_FLAGS=--target=i686-pc-windows-gnu -DCMAKE_CXX_FLAGS=--target=i686-pc-windows-gnu -DCMAKE_MAKE_PROGRAM=mingw32-make ..",51.0,About precompiled binaries,5.0,Compilation guide
449.0,Setup an Xcode project in MacOS,52.0,Setup an Xcode project in MacOS,5.0,Compilation guide
450.0,"Many developers in MacOS use Xcode to develop the code. To generate an XCode project for  , you need to run",52.0,Setup an Xcode project in MacOS,5.0,Compilation guide
451.0,mkdir build-xcodecd build-xcodecmake -G Xcode <IQTREE_SOURCE_DIR>,52.0,Setup an Xcode project in MacOS,5.0,Compilation guide
452.0,"This will generate a a subfolder build-xcode/iqtree.xcodeproj, which you can open in Xcode now.",52.0,Setup an Xcode project in MacOS,5.0,Compilation guide
453.0,Partition models,53.0,Partition models,6.0,Complex models
454.0,"Partition models are intended for phylogenomic (e.g., multi-gene) alignments, which allow each partition to have its own substitution models and evolutionary rates.   supports three types of partition models",53.0,Partition models,6.0,Complex models
455.0,"Edge-equal partition model with equal branch lengths All partitions share the same set of branch lengths.Edge-proportional partition model with proportional branch lengths Like above but each partition has its own partition specific rate, that rescales all its branch lengths. This model accomodates different evolutionary rates between partitions (e.g. between 1st, 2nd, and 3rd codon positions).Edge-unlinked partition model Each partition has its own set of branch lengths. This is the most parameter-rich partition model, that accounts for e.g., heterotachy (Lopez et al., 2002).",53.0,Partition models,6.0,Complex models
456.0,"TIP The edge-equal partition model is typically unrealistic as it does not account for different evolutionary speeds between partitions, whereas the edge-unlinked partition model can be overfitting if there are many short partitions. Therefore, the edge-proportional partition model is recommended for a typical analysis.",53.0,Partition models,6.0,Complex models
457.0,Partition file format,53.0,Partition models,6.0,Complex models
458.0,To apply partition models users must first prepare a partition file in RAxML-style or NEXUS format. The RAxML-style is defined by the RAxML software and may look like,53.0,Partition models,6.0,Complex models
459.0,"DNA, part1 = 1-100DNA, part2 = 101-384",53.0,Partition models,6.0,Complex models
460.0,"This means two DNA partitions of an alignment, where one groups aligment sites 1-100 into part1 and 101-384 into part2.",53.0,Partition models,6.0,Complex models
461.0,"The NEXUS format is more complex but more powerful. For example, the above partition scheme may look like",53.0,Partition models,6.0,Complex models
462.0,"nexusbegin sets;    charset part1 = 1-100;    charset part2 = 101-384;    charpartition mine = HKY Gpart1, GTR I Gpart2;end;",53.0,Partition models,6.0,Complex models
463.0,"The first line contains the keyword nexus to indicate a NEXUS file. It has a sets block, which contains two character sets (charset command) named part1 and part2. Furthermore, with the charpartition command we set the model HKY G for part1 and GTR I G for part2. This is not possible with the RAxML-style format (i.e., one cannot specify  G rate model for one partition and  I G rate model for the other partition).",53.0,Partition models,6.0,Complex models
464.0,TIP   fully supports mixed rate heterogeneity types types between partitions (see above example).,53.0,Partition models,6.0,Complex models
465.0,"One can also specify non-consecutive sites of a partition, e.g. under RAxML-style format",53.0,Partition models,6.0,Complex models
466.0,"DNA, part1 = 1-100, 250-384DNA, part2 = 101-249\3, 102-249\3DNA, part3 = 103-249\3",53.0,Partition models,6.0,Complex models
467.0,or under NEXUS format,53.0,Partition models,6.0,Complex models
468.0,nexusbegin sets;    charset part1 = 1-100 250-384;    charset part2 = 101-249\3 102-249\3;    charset part3 = 103-249\3;end;,53.0,Partition models,6.0,Complex models
469.0,"This means, part2 contains sites 101, 102, 104, 105, 107, …, 246, 248, 249; whereas part3 contains sites 103, 106, …, 247. This is useful to specify partitions corresponding to 1st, 2nd and 3rd codon positions.",53.0,Partition models,6.0,Complex models
470.0,"Moreover, the NEXUS file allows each partition to come from a separate alignment file (not possible under RAxML-style format) with e.g.",53.0,Partition models,6.0,Complex models
471.0,"nexusbegin sets;    charset part1 = aln1.phy 1-100\3 201-300;    charset part2 = aln1.phy 101-200;    charset part3 = aln2.phy *;    charpartition mine = HKYpart1, GTR Gpart2, WAG I Gpart3;end;",53.0,Partition models,6.0,Complex models
472.0,"Here, part1 and part2 correspond to sub-alignments of aln1.phy file and part3 is the entire alignment file aln2.phy. Note that aln2.phy is a protein alignment in this example.",53.0,Partition models,6.0,Complex models
473.0,TIP   fully supports mixed data types between partitions.,53.0,Partition models,6.0,Complex models
474.0,"If you want to specify codon model for a partition, use the CODON keyword (otherwise, the partition may be detected as DNA)",53.0,Partition models,6.0,Complex models
475.0,"nexusbegin sets;    charset part1 = aln1.phyCODON, 1-300;    charset part2 = aln1.phy 301-400;    charset part3 = aln2.phy *;    charpartition mine = GYpart1, GTR Gpart2, WAG I Gpart3;end;",53.0,Partition models,6.0,Complex models
476.0,"Note that this assumes part1 has standard genetic code. If not, append CODON with the right genetic code ID.",53.0,Partition models,6.0,Complex models
477.0,Partitioned analysis,53.0,Partition models,6.0,Complex models
478.0,"Having prepared a partition file, one is ready to start a partitioned analysis with -q (edge-equal), -spp (edge-proportional) or -sp (edge-unlinked) option. See this tutorial for more details.",53.0,Partition models,6.0,Complex models
479.0,Mixture models,54.0,Mixture models,6.0,Complex models
480.0,What is the difference between partition and mixture models?,54.0,Mixture models,6.0,Complex models
481.0,"Mixture models, like partition models, allow more than one substitution model along the sequences. However, while a partition model assigns each alignment site a given specific model, mixture models do not need this information. A mixture model will compute for each site its probability (or weight) of belonging to each of the mixture classes (also called categories or components). Since the site-to-class assignment is unknown, the site likelihood under mixture models is the weighted sum of site likelihoods per mixture class.",54.0,Mixture models,6.0,Complex models
482.0,"For example, the discrete Gamma rate heterogeneity is a simple mixture model type. It has several rate categories with equal weight.   also supports a number of predefined protein mixture models such as the profile mixture models C10 to C60 (The ML variants of Bayesian CAT models).",54.0,Mixture models,6.0,Complex models
483.0,"Here, we discuss several possibilities to define new mixture models in  .",54.0,Mixture models,6.0,Complex models
484.0,Defining mixture models,54.0,Mixture models,6.0,Complex models
485.0,"To start with, the following command",54.0,Mixture models,6.0,Complex models
486.0,"iqtree -s example.phy -m ""MIX{JC,HKY}""",54.0,Mixture models,6.0,Complex models
487.0,"specifies a mixture model (via the MIX keyword in the model string) with two components. The components (1) JC model, and (2) HKY model, are given in curly brackets and separated with a comma.   will then estimate the parameters of both mixture components as well as their weights the proportion of sites belonging to each component.",54.0,Mixture models,6.0,Complex models
488.0,"NOTE Do not forget the double-quotes around model string They prevent interpretation of the curly brackets by the command line shell, i.e., MIX{JC,HKY} would otherwise be interpreted as MIXJC MIXHKY.",54.0,Mixture models,6.0,Complex models
489.0,"Mixture models can be combined with rate heterogeneity, e.g.",54.0,Mixture models,6.0,Complex models
490.0,"iqtree -s example.phy -m ""MIX{JC,HKY} G4""",54.0,Mixture models,6.0,Complex models
491.0,"Here, we specify two mixture components and four Gamma rate categories. Effectively, this means that there are eight mixture components. Each site has a probability belonging to either JC or HKY and to one of the four rate categories.",54.0,Mixture models,6.0,Complex models
492.0,Profile mixture models,54.0,Mixture models,6.0,Complex models
493.0,"Sometimes one only wants to model the changes in nucleotide or amino-acid frequencies along the sequences while keeping the substitution rate matrix the same. This can be specified in   via FMIX{...} model syntax. For convenience the mixture components can be defined in a NEXUS file like this (example corresponds to the CF4 model of (Wang et al., 2008))",54.0,Mixture models,6.0,Complex models
494.0,"nexusbegin models;    frequency Fclass1 = 0.02549352 0.01296012 0.005545202 0.006005566 0.01002193 0.01112289 0.008811948 0.001796161 0.004312188 0.2108274 0.2730413 0.01335451 0.07862202 0.03859909 0.005058205 0.008209453 0.03210019 0.002668138 0.01379098 0.2376598;    frequency Fclass2 = 0.09596966 0.008786096 0.02805857 0.01880183 0.005026264 0.006454635 0.01582725 0.7215719 0.003379354 0.002257725 0.003013483 0.01343441 0.001511657 0.002107865 0.006751404 0.04798539 0.01141559 0.000523736 0.002188483 0.004934972;    frequency Fclass3 = 0.01726065 0.005467988 0.01092937 0.3627871 0.001046402 0.01984758 0.5149206 0.004145081 0.002563289 0.002955213 0.005286931 0.01558693 0.002693098 0.002075771 0.003006167 0.01263069 0.01082144 0.000253451 0.001144787 0.004573568;    frequency Fclass4 = 0.1263139 0.09564027 0.07050061 0.03316681 0.02095119 0.05473468 0.02790523 0.009007538 0.03441334 0.005855319 0.008061884 0.1078084 0.009019514 0.05018693 0.07948 0.09447839 0.09258897 0.01390669 0.05367769 0.01230413;    frequency CF4model = FMIX{empirical,Fclass1,Fclass2,Fclass3,Fclass4};end;",54.0,Mixture models,6.0,Complex models
495.0,NOTE The amino-acid order in this file is A R N D C Q E G H I L K M F P S T W Y V.,54.0,Mixture models,6.0,Complex models
496.0,"Here, the NEXUS file contains a models block to define new models. More explicitly, we define four AA profiles Fclass1 to Fclass4, each containing 20 AA frequencies. Then, the frequency mixture is defined with",54.0,Mixture models,6.0,Complex models
497.0,"FMIX{empirical,Fclass1,Fclass2,Fclass3,Fclass4}",54.0,Mixture models,6.0,Complex models
498.0,"This means, we have five components the first corresponds to empirical AA frequencies to be inferred from the data and the remaining four components are specified in this NEXUS file. Please save this to a file, say, mymodels.nex. One can now start the analysis with",54.0,Mixture models,6.0,Complex models
499.0,iqtree -s some_protein.aln -mdef mymodels.nex -m JTT CF4model G,54.0,Mixture models,6.0,Complex models
500.0,"The -mdef option specifies the NEXUS file containing user-defined models. Here, the JTT matrix is applied for all alignment sites and one varies the AA profiles along the alignment. One can use the NEXUS syntax to define all other profile mixture models such as C10 to C60.",54.0,Mixture models,6.0,Complex models
501.0,NEXUS model file,54.0,Mixture models,6.0,Complex models
502.0,"In fact,   uses this NEXUS model file internally to define all protein mixture models. In addition to defining state frequencies, one can specify the entire model with rate matrix and state frequencies together. For example, the LG4M model (Le et al., 2012) can be defined by",54.0,Mixture models,6.0,Complex models
503.0,"nexusbegin models;    model LG4M1 =        0.269343        0.254612 0.150988        0.236821 0.031863 0.659648        ....;    ....    model LG4M4 = ....;        model LG4M = MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4;end;",54.0,Mixture models,6.0,Complex models
504.0,"Here, we first define the four matrices LG4M1, LG4M2, LG4M3 and LG4M4 in PAML format (see protein models). Then LG4M is defined as mixture model with these four components fused with Gamma rate heterogeneity (via *G4 syntax instead of  G4). This means that, in total, we have 4 mixture components instead of 16. The first component LG4M1 is rescaled by the rate of the lowest Gamma rate category. The fourth component LG4M4 corresponds to the highest rate.",54.0,Mixture models,6.0,Complex models
505.0,Note that both frequency and model commands can be embedded into a single model file.,54.0,Mixture models,6.0,Complex models
506.0,Site-specific frequency models,55.0,Site-specific frequency models,6.0,Complex models
507.0,"Starting with version 1.5.0,   provides a new posterior mean site frequency (PMSF) model as a rapid approximation to the time and memory consuming profile mixture models C10 to C60 (Le et al., 2008a; a variant of PhyloBayes’ CAT model). The PMSF are the amino-acid profiles for each alignment site computed from an input mixture model and a guide tree. The PMSF model is much faster and requires much less RAM than C10 to C60 (see table below), regardless of the number of mixture classes. Our extensive simulations and empirical phylogenomic data analyses demonstrate that the PMSF models can effectively ameliorate long branch attraction artefacts.",55.0,Site-specific frequency models,6.0,Complex models
508.0,If you use this model in a publication please cite,55.0,Site-specific frequency models,6.0,Complex models
509.0,"H.C. Wang, B.Q. Minh, S. Susko and A.J. Roger (2018) Modeling site heterogeneity with posterior mean site frequency profiles accelerates accurate phylogenomic estimation. Syst. Biol., 67216-235. https//doi.org/10.1093/sysbio/syx068",55.0,Site-specific frequency models,6.0,Complex models
510.0,"Here is an example of computation time and RAM usage for an Obazoa data set (68 sequences, 43615 amino-acid sites) from Brown et al. (2013) using 16 CPU cores",55.0,Site-specific frequency models,6.0,Complex models
511.0,ModelsCPU timeWall-clock timeRAM usageLG F G43h38m23s3h37m23s1.8 GBLG C20 F G584h25m29s46h39m06s38.8 GBLG C60 F G1502h25m31s125h15m29s112.8 GBLG PMSF G73h30m37s5h7m27s2.2 GB,55.0,Site-specific frequency models,6.0,Complex models
512.0,Example usages,55.0,Site-specific frequency models,6.0,Complex models
513.0,"To use the PMSF model you have to provide a guide tree, which, for example, can be obtained by a quicker analysis under the simpler LG F G model. The guide tree can then be specified via -ft option, for example",55.0,Site-specific frequency models,6.0,Complex models
514.0,iqtree -s <alignment> -m LG C20 F G -ft <guide_tree>,55.0,Site-specific frequency models,6.0,Complex models
515.0,"Here,   will perform two phases. In the first phase,   estimates mixture model parameters given the guide tree and then infers the site-specific frequency profile (printed to .sitefreq file). In the second phase,   will conduct typical analysis using the inferred frequency model instead of the mixture model to save RAM and running time. Note that without -ft option,   will conduct the analysis under the specified mixture model.",55.0,Site-specific frequency models,6.0,Complex models
516.0,"The PMSF model allows one, for the first time, to conduct nonparametric bootstrap under such complex models, for example (with 100 bootstrap replicates)",55.0,Site-specific frequency models,6.0,Complex models
517.0,iqtree -s <alignment> -m LG C20 F G -ft <guide_tree> -b 100,55.0,Site-specific frequency models,6.0,Complex models
518.0,"Please note that the first phase still consumes as much RAM as the mixture model. To overcome this, you can perform the first phase in a high-memory server and the second phase in a normal PC as follows",55.0,Site-specific frequency models,6.0,Complex models
519.0,iqtree -s <alignment> -m LG C20 F G -ft <guide_tree> -n 0,55.0,Site-specific frequency models,6.0,Complex models
520.0,This will stop the analysis after the first phase and also write a .sitefreq file. You can now copy this .sitefreq file to another low-memory machine and run with the same alignment,55.0,Site-specific frequency models,6.0,Complex models
521.0,iqtree -s <alignment> -m LG C20 F G -fs <file.sitefreq> -b 100,55.0,Site-specific frequency models,6.0,Complex models
522.0,This will omit the first phase and thus need much less RAM.,55.0,Site-specific frequency models,6.0,Complex models
523.0,"Finally, note that for long (phylogenomic) alignments you can utilize the multicore   version to further save the computing times with, say, 24 cores by",55.0,Site-specific frequency models,6.0,Complex models
524.0, For   version <= 1.5.Xiqtree-omp -nt 24 -s <alignment> -m LG C20 F G -fs <file.sitefreq> For   version >= 1.6.0iqtree -nt 24 -s <alignment> -m LG C20 F G -fs <file.sitefreq>,55.0,Site-specific frequency models,6.0,Complex models
525.0,See also the list of relevant command line options.,55.0,Site-specific frequency models,6.0,Complex models
526.0,Heterotachy models,56.0,Heterotachy models,6.0,Complex models
527.0,"Sequence data that have evolved under heterotachy, i.e., rate variation across sites and lineages (Lopez, Casane, and Philippe, 2002), are known to mislead phylogenetic inference (Kolaczkowski and Thornton, 2004). To address this issue we introduce the General Heterogeneous evolution On a Single Topology (GHOST) model. More specifically, GHOST is an edge-unlinked mixture model consisting of several site classes, each having a separate set of model parameters and edge lengths on the same tree topology. Thus, GHOST naturally accounts for heterotachous evolution. In contrast to an edge-unlinked partition model, the GHOST model does not require the a priori data partitioning, a possible source of model misspecification.",56.0,Heterotachy models,6.0,Complex models
528.0,"Extensive simulations show that the GHOST model can accurately recover the tree topology, branch lengths, substitution rate and base frequency parameters from heterotachously-evolved sequences. Moreover, we compare the GHOST model to the partition model and show that, owing to the minimization of model constraints, the GHOST model is able to offer unique biological insights when applied to empirical data.",56.0,Heterotachy models,6.0,Complex models
529.0,If you use this model in a publication please cite,56.0,Heterotachy models,6.0,Complex models
530.0,"S.M. Crotty, B.Q. Minh, N.G. Bean, B.R. Holland, J. Tuke, L.S. Jermiin and A. von Haeseler (2019) GHOST Recovering historical signal from heterotachously-evolved sequence alignments. Syst. Biol., in press. https//doi.org/10.1093/sysbio/syz051",56.0,Heterotachy models,6.0,Complex models
531.0,Quick usages,56.0,Heterotachy models,6.0,Complex models
532.0,"Make sure that you have   version 1.6.0 or later. The GHOST model with k mixture classes is executed by adding  Hk to the model option (-m). For example if one wants to fit a GHOST model with 4 classes in conjunction with the GTR model of DNA evolution to sequences contained in data.fst, one would use the following command",56.0,Heterotachy models,6.0,Complex models
533.0,iqtree -s data.fst -m GTR H4,56.0,Heterotachy models,6.0,Complex models
534.0,"By default the above command will link GTR parameters across all classes. If you want to unlink GTR parameters, so that   estimates them separately for each class, replace  H4 by *H4",56.0,Heterotachy models,6.0,Complex models
535.0,iqtree -s data.fst -m GTR*H4,56.0,Heterotachy models,6.0,Complex models
536.0,Note that this infers one set of empirical base frequencies and apply those to all classes. If one wishes to infer separate base frequencies for each class then the  FO option is required,56.0,Heterotachy models,6.0,Complex models
537.0,iqtree -s data.fst -m GTR FO*H4,56.0,Heterotachy models,6.0,Complex models
538.0,The -wspm option will generate a .siteprob output file. This contains the probability of each site belonging to each class,56.0,Heterotachy models,6.0,Complex models
539.0,iqtree -s data.fst -m GTR FO*H4 -wspm,56.0,Heterotachy models,6.0,Complex models
540.0,Inferring species tree,57.0,Inferring species tree,7.0,Concordance Factor
541.0,"First, you need to infer a reference tree (e.g. a species tree), on which the concordance factors will be annotated. The species tree can be reconstructed by a concatenation/supermatrix approach or a coalescent/reconciliation/supertree approach. Here, we will use the concatenation approach in  .",57.0,Inferring species tree,7.0,Concordance Factor
542.0,"As an example, you can apply an edge-linked proportional partition model with ultrafast bootstrap (1000 replicates; for comparison with concordance factors)",57.0,Inferring species tree,7.0,Concordance Factor
543.0,iqtree -s ALN_FILE -p PARTITION_FILE --prefix concat -B 1000 -T AUTO,57.0,Inferring species tree,7.0,Concordance Factor
544.0,"where ALN_FILE and PARTITION_FILE are your input files. -T AUTO is to detect the best number of CPU cores. Here we use a prefix concat, so that all output files (concat.*) do not interfere with analyses below. If --prefix is omitted, all output files will be PARTITION_FILE.*.",57.0,Inferring species tree,7.0,Concordance Factor
545.0,"Moreover,   2 provides a new convenient feature if you have a directory with many (locus) alignments, you can specify this directory directly with -p option",57.0,Inferring species tree,7.0,Concordance Factor
546.0,iqtree -p ALN_DIR --prefix concat -B 1000 -T AUTO,57.0,Inferring species tree,7.0,Concordance Factor
547.0,  detects if -p argument is a directory and automatically load all alignment files and concatenate them into a supermatrix for the partition analysis.,57.0,Inferring species tree,7.0,Concordance Factor
548.0,Inferring gene/locus trees,58.0,Inferring gene/locus trees,7.0,Concordance Factor
549.0,"We now construct a set of gene/locus trees. One can manually do a for-loop, but   2 provides a new convenient option -S to compute individual locus trees given a partition file or a directory",58.0,Inferring gene/locus trees,7.0,Concordance Factor
550.0,iqtree -s ALN_FILE -S PARTITION_FILE --prefix loci -T AUTO oriqtree -S ALN_DIR --prefix loci -T AUTO,58.0,Inferring gene/locus trees,7.0,Concordance Factor
551.0,"In the second case,   automatically detects that ALN_DIR is a directory and will load all alignment files within the directory. So -S takes the same argument as -p except that it performs model selection (ModelFinder) and tree inference separately for each partition/alignment. The output files are similar to those from a partitioned analysis, except that loci.treefile now contains a set of trees.",58.0,Inferring gene/locus trees,7.0,Concordance Factor
552.0,Gene concordance factor (gCF),59.0,Gene concordance factor (gCF),7.0,Concordance Factor
553.0,"Given the species tree concat.treefile and the set of locus trees loci.treefile computed above, you can calculate gCF for each branch of the species tree as the fraction of decisive gene trees concordant with this branch",59.0,Gene concordance factor (gCF),7.0,Concordance Factor
554.0,iqtree -t concat.treefile --gcf loci.treefile --prefix concord,59.0,Gene concordance factor (gCF),7.0,Concordance Factor
555.0,"Note that -t accepts any reference tree (e.g., by coalescent/reconciliation approach) and --gcf accepts any set of trees (e.g. locus trees and bootstrap trees), which may contain a subset of taxa from the reference tree. IQ-Tree will write three files",59.0,Gene concordance factor (gCF),7.0,Concordance Factor
556.0,"concord.cf.tree Newick tree with gCF assigned for each internal branch of the reference tree. If the reference tree already has some branch label (such as bootstrap support in this case), gCF will be appended to the existing label separated by a /.concord.cf.branch Newick tree with internal branch IDs.concord.cf.stat A tab-separated table with gCF and gDF (gene discordance factor) for every internal branch (rows of the table). The ID column can be linked with concord.cf.branch file. This file can be read in R to do some plot (see below).",59.0,Gene concordance factor (gCF),7.0,Concordance Factor
557.0,"If you omit --prefix, all output files will be written to concat.treefile.*.",59.0,Gene concordance factor (gCF),7.0,Concordance Factor
558.0,Site concordance factor (sCF),60.0,Site concordance factor (sCF),7.0,Concordance Factor
559.0,"Given the species tree concat.treefile and the alignment, you can calculate sCF for each branch of the species tree as the fraction of decisive alignment sites supporting that branch",60.0,Site concordance factor (sCF),7.0,Concordance Factor
560.0,iqtree -t concat.treefile -s ALN_FILE --scf 100 --prefix concord -T 10,60.0,Site concordance factor (sCF),7.0,Concordance Factor
561.0,"--scf specifies the number of quartets (randomly sampled around each internal branch) for computing sCF. We recommend at least 100 quartets for stable sCF values. Note that running this command several times may lead to slightly different sCF due to randomness. To make it reproducible, you need to use -seed option to provide a random number generator seed.",60.0,Site concordance factor (sCF),7.0,Concordance Factor
562.0,"Instead of -s, you can alternatively provide a directory or a partition file. IQ-Tree then computes sCF for the concatenated alignment",60.0,Site concordance factor (sCF),7.0,Concordance Factor
563.0,iqtree -t concat.treefile -p ALN_DIR --scf 100 --prefix concord -T 10,60.0,Site concordance factor (sCF),7.0,Concordance Factor
564.0,"Finally, you can combine gCF and sCF within a single run",60.0,Site concordance factor (sCF),7.0,Concordance Factor
565.0,iqtree -t concat.treefile --gcf loci.treefile -p ALN_DIR --scf 100 --prefix concord -T 10,60.0,Site concordance factor (sCF),7.0,Concordance Factor
566.0,"Here, each branch of concord.cf.tree will be assigned (or appended) with gCF/sCF values and concord.cf.stat will be written with both gCF and sCF values.",60.0,Site concordance factor (sCF),7.0,Concordance Factor
567.0,Putting it all together,61.0,Putting it all together,7.0,Concordance Factor
568.0,"If you have separate alignments for each locus in a folder, then perform the following commands",61.0,Putting it all together,7.0,Concordance Factor
569.0, infer a concatenation-based species tree with 1000 ultrafast bootstrap and an edge-linked partition modeliqtree -p ALN_DIR --prefix concat -B 1000 -T AUTO infer the locus treesiqtree -S ALN_DIR --prefix loci -T AUTO compute concordance factorsiqtree -t concat.treefile --gcf loci.treefile -p ALN_DIR --scf 100 --prefix concord -T 10,61.0,Putting it all together,7.0,Concordance Factor
570.0,If you have a single concatenated alignment with a partition file that defines loci,61.0,Putting it all together,7.0,Concordance Factor
571.0, infer a concatenation-based species tree with 1000 ultrafast bootstrap and an edge-linked partition modeliqtree -s ALN_FILE -p PARTITION_FILE --prefix concat -B 1000 -T AUTO infer the locus treesiqtree -s ALN_FILE -S PARTITION_FILE --prefix loci -T AUTO compute concordance factorsiqtree -t concat.treefile --gcf loci.treefile -s ALN_FILE --scf 100 --prefix concord -T 10,61.0,Putting it all together,7.0,Concordance Factor
572.0,Note that you can adjust -T 10 if you have fewer/larger CPU cores.,61.0,Putting it all together,7.0,Concordance Factor
573.0,Alignment class,62.0,Alignment class,8.0,Developer guide
574.0,"The Alignment class stores the data as a vector of Pattern. Each Pattern is in turn a string representing the characters across the sequences at an alignment site, with a frequency of occurrences in the Alignment (from header file pattern.h)",62.0,Alignment class,8.0,Developer guide
575.0,/**        Site-patterns in a multiple sequence alignment*/class Pattern  public string {public        ...        /**                frequency appearance of the pattern        */        int frequency;};,62.0,Alignment class,8.0,Developer guide
576.0,"The rationale for storing the data this way (instead of storing a set of sequences) is that most computations are carried out along the site-patterns of the Alignment. Thus, it makes all operations more convenient and faster.",62.0,Alignment class,8.0,Developer guide
577.0,"As noted above, the Alignment class is defined as (from header file alignment.h)",62.0,Alignment class,8.0,Developer guide
578.0,"/**    Multiple Sequence Alignment. Stored by a vector of site-patterns*/class Alignment  public vector<Pattern> {public    /**            constructor            param filename file name            param sequence_type type of the sequence, either ""BIN"", ""DNA"", ""AA"", or NULL            param intype (OUT) input format of the file     */    Alignment(char *filename, char *sequence_type, InputType &intype);    ...};",62.0,Alignment class,8.0,Developer guide
579.0,"NOTE Please follow the commenting style of the code when declaring new components (classes, functions or variables) like the example above. That way, the source code documentation can be generated with tools like Doxygen. See Doxygen commenting manual for more details.",62.0,Alignment class,8.0,Developer guide
580.0,Model of substitution,63.0,Model of substitution,8.0,Developer guide
581.0,ModelSubst,63.0,Model of substitution,8.0,Developer guide
582.0,"ModelSubst is the base class for all substitution models implemented in  . It implements the basic Juke-Cantor-type model (equal substitution rates and equal state frequencies) that works for all data type. ModelSubst class declares a number of virtual methods, that need to be overriden when implementing a new model, for example (from header file model/modelsubst.h)",63.0,Model of substitution,8.0,Developer guide
583.0,"/**    Substitution model abstract class*/class ModelSubst public Optimization{public        /**                constructor                param nstates number of states, e.g. 4 for DNA, 20 for proteins.        */    ModelSubst(int nstates);        /**                return the number of dimensions        */        virtual int getNDim() { return 0; }    ...};",63.0,Model of substitution,8.0,Developer guide
584.0,"As an example, the method getNDim() should return the number of free parameters of the model, which is 0 for the default JC-type model.",63.0,Model of substitution,8.0,Developer guide
585.0,ModelGTR,63.0,Model of substitution,8.0,Developer guide
586.0,ModelGTR class extends ModelSubst and implements the general time reversible model. ModelGTR is the base class for all models currently used in  . Some important ingredients of ModelGTR (from model/modelgtr.h),63.0,Model of substitution,8.0,Developer guide
587.0,"/**    General Time Reversible (GTR) model of substitution.    This works for all kind of data, not only DNA*/class ModelGTR  public ModelSubst, public EigenDecomposition{public        /**                constructor                param tree associated tree for the model        */    ModelGTR(PhyloTree *tree, bool count_rates = true);        /**                return the number of dimensions        */        virtual int getNDim();    ...protected    /**                rates between pairs of states of the unit rate matrix Q.                In order A-C, A-G, A-T, C-G, C-T (rate G-T = 1 always)        */        double *rates;    ....};",63.0,Model of substitution,8.0,Developer guide
588.0,PhyloTree class (phylogenetic tree),64.0,PhyloTree class (phylogenetic tree),8.0,Developer guide
589.0,PhyloTree is the base class for phylogenetic trees.,64.0,PhyloTree class (phylogenetic tree),8.0,Developer guide
590.0,How do I get help?,65.0,How do I get help?,9.0,Frequently asked questions
591.0,If you have questions please follow the steps below,65.0,How do I get help?,9.0,Frequently asked questions
592.0,"Continue to read the FAQ below, which may answer your questions already.If not, read the documentation http//www.iqtree.org/doc.If you still could not find the answer, search the   Google group. There is a “Search for topics” box at the top of the Google group web page.Finally, if no answer is found, post a question to the   group. The average response time is one to two working days.",65.0,How do I get help?,9.0,Frequently asked questions
593.0,"For other feedback and feature request, please post a topic to the   Google group. We welcome all suggestions to further improve   For feature request, please also explain why you think such a new feature would be useful or how can it help for your work.",65.0,How do I get help?,9.0,Frequently asked questions
594.0,How do I report bug?,66.0,How do I report bug?,9.0,Frequently asked questions
595.0,"For bug report, please send the following information to the   Google group",66.0,How do I report bug?,9.0,Frequently asked questions
596.0,"A description of the behaviour, which you think might be unexpected or caused by a bug.The first 10 lines and last 10 lines of the .log file.(If possible) the assertion message printed on the screen, which may look like this iqtree ....cpp140 ... Assertion '...' failed.",66.0,How do I report bug?,9.0,Frequently asked questions
597.0,"The development team will get back to you and may ask for the full .log file and input data files for debugging purpose, if necessary. In such case please only send your data files directly to the developers for confidential reason Keep in mind that everyone can see all emails sent to the group",66.0,How do I report bug?,9.0,Frequently asked questions
598.0,How do I interpret ultrafast bootstrap (UFBoot) support values?,67.0,How do I interpret ultrafast bootstrap (UFBoot) support values?,9.0,Frequently asked questions
599.0,"The ultrafast bootstrap (UFBoot) feature (-bb option) was published in (Minh et al., 2013). One of the main conclusions is, that UFBoot support values are more unbiased 95% support correspond roughly to a probability of 95% that a clade is true. So this has a different meaning than the normal bootstrap supports (where you start to believe in the clade if it has >80% BS support). For UFBoot, you should only start to believe in a clade if its support is >= 95%. Thus, the interpretations are different and you should not compare BS% with UFBoot% directly.",67.0,How do I interpret ultrafast bootstrap (UFBoot) support values?,9.0,Frequently asked questions
600.0,"Moreover, it is recommended to also perform the SH-aLRT test (Guindon et al., 2010) by adding -alrt 1000 into the   command line. Each branch will then be assigned with SH-aLRT and UFBoot supports. One would typically start to rely on the clade if its SH-aLRT >= 80% and UFboot >= 95%.",67.0,How do I interpret ultrafast bootstrap (UFBoot) support values?,9.0,Frequently asked questions
601.0,How does   treat gap/missing/ambiguous characters?,68.0,How does IQ-TREE treat gap/missing/ambiguous characters?,9.0,Frequently asked questions
602.0,"Gaps (-) and missing characters (? or N for DNA alignments) are treated in the same way as unknown characters, which represent no information. The same treatment holds for many other ML software (e.g., RAxML, PhyML). More explicitly, for a site (column) of an alignment containing AC-AG-A (i.e. A for sequence 1, C for sequence 2, - for sequence 3, and so on), the site-likelihood of a tree T is equal to the site-likelihood of the subtree of T restricted to those sequences containing non-gap characters (ACAGA).",68.0,How does IQ-TREE treat gap/missing/ambiguous characters?,9.0,Frequently asked questions
603.0,Ambiguous characters that represent more than one character are also supported each represented character will have equal likelihood. For DNA the following ambigous nucleotides are supported according to IUPAC nomenclature,68.0,How does IQ-TREE treat gap/missing/ambiguous characters?,9.0,Frequently asked questions
604.0,"NucleotideMeaningRA or G (purine)YC or T (pyrimidine)WA or T (weak)SG or C (strong)MA or C (amino)KG or T (keto)BC, G or T (next letter after A)HA, C or T (next letter after G)DA, G or T (next letter after C)VA, G or C (next letter after T)?, -, ., ~, O, N, XA, G, C or T (unknown; all 4 nucleotides are equally likely)",68.0,How does IQ-TREE treat gap/missing/ambiguous characters?,9.0,Frequently asked questions
605.0,For protein the following ambiguous amino-acids are supported,68.0,How does IQ-TREE treat gap/missing/ambiguous characters?,9.0,Frequently asked questions
606.0,"Amino-acidMeaningBN or DZQ or EJI or LUunknown AA (although it is the 21st AA)?, -, ., ~, * or Xunknown AA (all 20 AAs are equally likely)",68.0,How does IQ-TREE treat gap/missing/ambiguous characters?,9.0,Frequently asked questions
607.0,Can I mix DNA and protein data in a partitioned analysis?,69.0,Can I mix DNA and protein data in a partitioned analysis?,9.0,Frequently asked questions
608.0,"Yes You can specify this via a NEXUS partition file. In fact, you can mix any data types supported in  , including also codon, binary and morphological data. To do so, each data type should be stored in a separate alignment file (see also Partitioned analysis with mixed data). As an example, assuming dna.phy is a DNA alignment and and prot.phy is a protein alignment. Then a partition file mixing two types of data can be specified as follows",69.0,Can I mix DNA and protein data in a partitioned analysis?,9.0,Frequently asked questions
609.0,"nexusbegin sets;    charset part1 = dna.phy 1-100 201-300;    charset part2 = dna.phy 101-200;    charset part3 = prot.phy 1-150;    charset part4 = prot.phy 151-400;    charpartition mine = HKYpart1, GTR Gpart2, WAG I Gpart3, LG Gpart4;end;",69.0,Can I mix DNA and protein data in a partitioned analysis?,9.0,Frequently asked questions
610.0,"NOTE The site count for each alignment should start from 1, and not continue from the last position of a previous alignment (e.g., see part3 and part4 declared above).",69.0,Can I mix DNA and protein data in a partitioned analysis?,9.0,Frequently asked questions
611.0,What is the interpretation of branch lengths when mixing codon and DNA data?,70.0,What is the interpretation of branch lengths when mixing codon and DNA data?,9.0,Frequently asked questions
612.0,"When mixing codon and DNA data in a partitioned analysis, the branch lengths are interpreted as the number of nucleotide substitutions per nucleotide site This is different from having only codon data, where branch lengths are the number of nucleotide substitutions per codon site (thus typically 3 times longer than under DNA models).",70.0,What is the interpretation of branch lengths when mixing codon and DNA data?,9.0,Frequently asked questions
613.0,"Note that if you mix codon, DNA and protein data, the branch lengths are then the number of character substitutions per site, where character is either nucleotide or amino-acid.",70.0,What is the interpretation of branch lengths when mixing codon and DNA data?,9.0,Frequently asked questions
614.0,What is the purpose of composition test?,71.0,What is the purpose of composition test?,9.0,Frequently asked questions
615.0,"At the beginning of each run,   performs a composition chi-square test for every sequence in the alignment. The purpose is to test for homogeneity of character composition (e.g., nucleotide for DNA, amino-acid for protein sequences). A sequence is denoted failed if its character composition significantly deviates from the average composition of the alignment.",71.0,What is the purpose of composition test?,9.0,Frequently asked questions
616.0,"More specifically, for each sequence, compute",71.0,What is the purpose of composition test?,9.0,Frequently asked questions
617.0,chi2 = \sum_{i=1}^k (O_i - E_i)^2 / E_i,71.0,What is the purpose of composition test?,9.0,Frequently asked questions
618.0,"where k is the size of the alphabet (e.g. 4 for DNA, 20 for amino acids) and the values 1 to k correspond uniquely to one of the characters. O_i is the character frequency in the sequence tested. E_i is the overall character frequency from the entire alignment.",71.0,What is the purpose of composition test?,9.0,Frequently asked questions
619.0,Whether the character composition deviates significantly from the overall composition is done by testing the chi2 value using the chi2-distribution with k-1 degrees of freedom (df=3 for DNA or df=19 for amino acids). By and large it is a normal Chi^2 test.,71.0,What is the purpose of composition test?,9.0,Frequently asked questions
620.0,This test should be regarded as an explorative tool which might help to nail down problems in a dataset. One would typically not remove failing sequences by default. But if the tree shows unexpected topology the test might point in direction of the origin of the problem.,71.0,What is the purpose of composition test?,9.0,Frequently asked questions
621.0,"Furthermore, please keep in mind, this test is performed at the very beginning, where   does not know anything about the models yet. That means",71.0,What is the purpose of composition test?,9.0,Frequently asked questions
622.0,"If you have partitioned (multi-gene) data, it might be more reasonable to test this separately for each partition in a partition analysis. Here, one might want to be able to decide whether some partitions should better be discarded if it is hard to find a composition representing the sequences in the partition. Or on the other hand if a sequence fails for many partitions and show very unexpected phylogenetic topologies, try without it.If you have (phylogenomic) protein data, you can also try several protein mixture models, which account for different amino-acid compositions along the sequences, for example, the C10 to C60 profile mixture models.Finally, it is recommended to always check the alignment (something one should always do anyway), especially if they have been collected and produced automatically.",71.0,What is the purpose of composition test?,9.0,Frequently asked questions
623.0,What is the good number of CPU cores to use?,72.0,What is the good number of CPU cores to use?,9.0,Frequently asked questions
624.0,"Starting with version 1.5.1, you can use option -nt AUTO to automatically determine the best number of threads for your current data and computer.",72.0,What is the good number of CPU cores to use?,9.0,Frequently asked questions
625.0,"If you want to know more details   can utilize multicore machines to speed up the analysis via -nt option. However, it does not mean that using more cores will always result in less running time if your alignment is short, using too many cores may even slow down the analysis. This is because   parallelizes the likelihood computation along the alignment. Thus, the parallel efficiency is only increased with longer alignments.",72.0,What is the good number of CPU cores to use?,9.0,Frequently asked questions
626.0,If you want to restrict the number of CPU cores allocated by -nt AUTO use -ntmax to specify the maximal number of CPU cores allowed (DEFAULT CPU cores on the current machine).,72.0,What is the good number of CPU cores to use?,9.0,Frequently asked questions
627.0,How do I save time for standard bootstrap?,73.0,How do I save time for standard bootstrap?,9.0,Frequently asked questions
628.0,"The standard bootstrap is rather slow and may take weeks/months for large data sets. One way to speed up is to use the multicore version. However, this only works well for long alignments (see What is the good number of CPU cores to use?). Another way is to use many machines or a computing cluster and split the computation among the machines. To illustrate, you want to perform 100 bootstrap replicates and have 5 PCs, each has 4 CPU cores. Then you can",73.0,How do I save time for standard bootstrap?,9.0,Frequently asked questions
629.0,"Perform 5 independent bootstrap runs (each with 20 replicates) on the 5 machines with 5 prefix outputs (such that output files are not overwritten). For example  For old   versions <= 1.5.X, change iqtree to iqtree-omp iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot1 iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot2 iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot3 iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot4 iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot5Note that if you have access to a computing cluster, you may want to submit these jobs onto the cluster queue in parallel and with even more fined grained parallelization (e.g. one replicate per job).Once all 5 runs finished, combine the 5 .boottrees file into one file (e.g. by cat command under Linux) cat boot*.boottrees > alltreesConstruct a consensus tree from the combined bootstrap trees iqtree -con -t alltreesThe consensus tree is then written to .contree file.Estimate branch lengths of the consensus tree using the original alignment iqtree -s input_alignment -te alltrees.contree -pre alltrees.contreeYou can also perform the analysis on the original alignment  For old   versions <= 1.5.X, change iqtree to iqtree-omp iqtree -nt 4 -s input_alignment ...and map the support values onto the obtained ML tree iqtree -sup input_alignment.treefile -t alltrees The ML tree with assigned bootstrap supports is written to .suptree file.",73.0,How do I save time for standard bootstrap?,9.0,Frequently asked questions
630.0,Why does   complain about the use of  ASC model?,74.0,Why does IQ-TREE complain about the use of +ASC model?,9.0,Frequently asked questions
631.0,"When using ascertainment bias correction (ASC) model, sometimes you may get an error message",74.0,Why does IQ-TREE complain about the use of +ASC model?,9.0,Frequently asked questions
632.0,ERROR Invaid use of  ASC because of ... invariant sites in the alignment,74.0,Why does IQ-TREE complain about the use of +ASC model?,9.0,Frequently asked questions
633.0,or when performing model testing,74.0,Why does IQ-TREE complain about the use of +ASC model?,9.0,Frequently asked questions
634.0,Skipped since  ASC is not applicable,74.0,Why does IQ-TREE complain about the use of +ASC model?,9.0,Frequently asked questions
635.0,"This is because your alignment contains invariant sites (columns), which violate the mathematical condition of the model. The invariant sites can be",74.0,Why does IQ-TREE complain about the use of +ASC model?,9.0,Frequently asked questions
636.0,"Constant sites containing a single character state over all sequences. For example, all sequences show an A (Adenine) at a particular site in a DNA alignment.Partially constant sites containing a single character, gap or unknown character. For example, at a particular site some sequences show a G (Guanine), some sequences have - (gap) and the other have N.Ambiguously constant sites For example, some sequences show a C (Cytosine), some show a Y (meaning C or T) and some show a - (gap).",74.0,Why does IQ-TREE complain about the use of +ASC model?,9.0,Frequently asked questions
637.0,All these sites must be removed from the alignment before a  ASC model can be applied.,74.0,Why does IQ-TREE complain about the use of +ASC model?,9.0,Frequently asked questions
638.0,"TIP Starting with   version 1.5.0, an output alignment file with suffix .varsites is written in such cases, which contain only variable sites from the input alignment. The .varsites alignment can then be used with the  ASC model.",74.0,Why does IQ-TREE complain about the use of +ASC model?,9.0,Frequently asked questions
639.0,How does   treat identical sequences?,75.0,How does IQ-TREE treat identical sequences?,9.0,Frequently asked questions
640.0,"Among a group of identical sequences,   will keep the first two and ignore the rest. If the sequence is the 2nd one, it will be “kept for subsequent analysis”. If it is the 3rd or more, it will be “ignored but added at the end”. The rationale for this is to still be able to calculate the bootstrap support for this group of identical sequences it is not always 100%. Because by bootstrap resampling, on average only two third of the sites will be present in a bootstrap alignment (due to sampling with replacement), and suddenly another sequence not in this group may actually become identical to this group of sequences. In that case, the bootstrap value will be < 100%.",75.0,How does IQ-TREE treat identical sequences?,9.0,Frequently asked questions
641.0,"Therefore, the .uniqueseq.phy printed by   may still contain the identical sequences, but no more than two of each identical group.",75.0,How does IQ-TREE treat identical sequences?,9.0,Frequently asked questions
642.0,What are the differences between alignment columns/sites and patterns?,76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
643.0,"Columns are the columns/sites in the alignment and the number of columns is the length of the alignment. In the alignment there might be the same columns. Different columns are called patterns. While (parsimony) informative sites are patterns that have at least two different characters (nucleotides or amino acids) and each character should occur in at least two species. Essentially, informative sites have information for the grouping of species. These patterns are mainly important in the context of parsimony, where no evolutionary model is used. In maximum likelihood inference all patterns containing different characters are important for the estimation of tree topology and branch lengths, while constant/invariant sites (containing only the same character only A’s or only G’s etc) are important for the correct estimation of the branch lengths. Therefore, should not be excluded from the alignment.",76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
644.0,Example,76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
645.0,            123456789species_1   AACGTACGTspecies_2   AACGATCGTspecies_3   AACCGTCCTspecies_4   AACCTACCT,76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
646.0,"sites/columns 1 and 2 are identical and contain only A’s - invariant site pattern, uninformativesites/columns 3 and 7 are identical and contain only C’s - invariant site pattern, uninformativesites/columns 4 and 8 are identical and contain 2 G’c and 2 C’s - informative site patternsites/columns 5, 6 and 9 occur only once, each site is a different pattern. 5th is uninformative, 6th is informative, 9th is invariant and uninformative",76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
647.0,"Summing up, the alignment has 9 columns,",76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
648.0,6 patterns,76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
649.0,A C G T A TA C G A T TA C C G T TA C C T A T,76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
650.0,(2 informative),76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
651.0,G A G T C T C A,76.0,What are the differences between alignment columns/sites and patterns?,9.0,Frequently asked questions
652.0,  web server,77.0,IQ-TREE web server,10.0,Getting started
653.0,"The quickest is to try out the   web server, where you only need to upload an alignment, choose the options and start the analysis. There is a web server tutorial here.",77.0,IQ-TREE web server,10.0,Getting started
654.0,"If you want to use the command-line version, follow the instructions below.",77.0,IQ-TREE web server,10.0,Getting started
655.0,Installation,78.0,Installation,10.0,Getting started
656.0,"For reasons of performance,   is a command-line program, i.e.,   needs to be run from a terminal/console (command prompt under Windows).",78.0,Installation,10.0,Getting started
657.0,Packages and bundles,78.0,Installation,10.0,Getting started
658.0,Ready made   packages are available for the following distributions/repositories (command to install iqtree),78.0,Installation,10.0,Getting started
659.0,Debian Linux sudo apt-get install iqtreeArch Linux (AUR)Anaconda conda install -c bioconda iqtreeHomebrew brew install brewsci/bio/iqtree2FreeBSD pkg install iqtree,78.0,Installation,10.0,Getting started
660.0,Manual download,78.0,Installation,10.0,Getting started
661.0,"  for Windows, MacOSX and Linux can be downloaded here.",78.0,Installation,10.0,Getting started
662.0,"Extract the .zip (Windows, MacOSX) or .tar.gz (Linux) file to create a directory iqtree-X.Y.Z-OS, where X.Y.Z is the version number and OS is the operating system (Windows, MacOSX or Linux).You will find the executable in the bin sub-folder. Copy all files in bin folder to your system search path such that you can run   by entering iqtree from the Terminal.",78.0,Installation,10.0,Getting started
663.0,Now you need to open a Terminal (or Console) to run  . See below the guide for Windows users and Mac OS X users.,78.0,Installation,10.0,Getting started
664.0,For Windows users,79.0,For Windows users,10.0,Getting started
665.0,"Since   is a command-line program, clicking on iqtree.exe will not work. You have to open a Command Prompt for all analyses",79.0,For Windows users,10.0,Getting started
666.0,"Click on “Start” menu (below left corner of Windows screen).Type in “cmd” and press “Enter”. It will open the Command Prompt window (see Figure below).Go into   folder you just extracted by entering e.g. (assuming you downloaded version 1.5.0) cd Downloads\iqtree-1.5.0-Windows(assuming that   was downloaded into Downloads folder).Now you can try an example run by entering bin\iqtree -s example.phy(example.phy is the example PHYLIP alignment file also extracted in that folder).After a few seconds,   finishes and you may see something like this",79.0,For Windows users,10.0,Getting started
667.0,Congratulations ;-) You have finished the first   analysis.,79.0,For Windows users,10.0,Getting started
668.0,For Mac OS X users,80.0,For Mac OS X users,10.0,Getting started
669.0,"Open the “Terminal”, e.g., by clicking on the Spotlight icon (top-right corner), typing “terminal” and press “Enter”.Go into   folder by entering (assuming you downloaded version 1.5.0) cd Downloads/iqtree-1.5.0-MacOSX(assuming that   was downloaded into Downloads folder).Now you can try an example run by entering bin/iqtree -s example.phy(example.phy is the example PHYLIP alignment file also extracted in that folder).After a few seconds,   finishes and you may see something like this",80.0,For Mac OS X users,10.0,Getting started
670.0,Congratulations ;-) You have finished the first   analysis.,80.0,For Mac OS X users,10.0,Getting started
671.0,Minimal command-line examples,81.0,Minimal command-line examples,10.0,Getting started
672.0,"A few typically analyses are listed in the following. Note that it is assumed that iqtree executable was already copied into system search path. If not, please replace iqtree with actual path to executable.",81.0,Minimal command-line examples,10.0,Getting started
673.0,"Infer maximum-likelihood tree from a sequence alignment (example.phy) with the best-fit model automatically selected by ModelFinder  iqtree -s example.phyInfer maximum-likelihood tree using GTR I G model  iqtree -s example.phy -m GTR I GPerform ModelFinder without subsequent tree inference  iqtree -s example.phy -m MFCombine ModelFinder, tree search, SH-aLRT test and ultrafast bootstrap with 1000 replicates  iqtree -s example.phy -B 1000 -alrt 1000   for version 1.x, change -B to -bbPerform edge-linked proportional partition model (example.nex)  iqtree -s example.phy -p example.nex   for version 1.x change -p to -sppFind best partition scheme by possibly merging partitions  iqtree -s example.phy -p example.nex -m MF MERGEFind best partition scheme followed by tree inference and ultrafast bootstrap  iqtree -s example.phy -p example.nex -m MFP MERGE -B 1000   for version 1.x change -B to -bbUse 4 CPU cores to speed up computation  iqtree -s example.phy -T 4   for version 1.x change -T to -ntDetermine the best number of cores to use under GTR R4 model  iqtree -s example.phy -m GTR R4 -T AUTO   for version 1.x change -T to -ntShow all available options  iqtree -h",81.0,Minimal command-line examples,10.0,Getting started
674.0,Where to go from here?,82.0,Where to go from here?,10.0,Getting started
675.0,Please continue with the Beginner’s tutorial for further usages.,82.0,Where to go from here?,10.0,Getting started
676.0,Why  ?,83.0,Why IQ-TREE?,11.0,Introduction
677.0,"Thanks to the recent advent of next-generation sequencing techniques, the amount of phylogenomic/transcriptomic data have been rapidly accumulated. This extremely facilitates resolving many “deep phylogenetic” questions in the tree of life. At the same time it poses major computational challenges to analyze such big data, where most phylogenetic software cannot handle. Moreover, there is a need to develop more complex probabilistic models to adequately capture realistic aspects of genomic sequence evolution.",83.0,Why IQ-TREE?,11.0,Introduction
678.0,This trends motivated us to develop the   software with a strong emphasis on phylogenomic inference. Our goals are,83.0,Why IQ-TREE?,11.0,Introduction
679.0,Accuracy Proposing novel computational methods that perform better than existing approaches.Speed Allowing fast analysis on big data sets and utilizing high performance computing platforms.Flexibility Facilitating the inclusion of new (phylogenomic) models and sequence data types.Versatility Implementing a broad range of commonly-used maximum likelihood analyses.,83.0,Why IQ-TREE?,11.0,Introduction
680.0,  has been developed since 2011 and freely available at http//www.iqtree.org/ as open-source software under the GNU-GPL license version 2. It is actively maintained by the core development team (see below) and a number of collabrators.,83.0,Why IQ-TREE?,11.0,Introduction
681.0,The name   comes from the fact that it is the successor of IQPNNI and TREE-PUZZLE software.,83.0,Why IQ-TREE?,11.0,Introduction
682.0,Key features,84.0,Key features,11.0,Introduction
683.0,"Efficient search algorithm Fast and effective stochastic algorithm to reconstruct phylogenetic trees by maximum likelihood.   compares favorably to RAxML and PhyML in terms of likelihood while requiring similar amount of computing time (Nguyen et al., 2015).Ultrafast bootstrap An ultrafast bootstrap approximation (UFBoot) to assess branch supports. UFBoot is 10 to 40 times faster than RAxML rapid bootstrap and obtains less biased support values (Minh et al., 2013; Hoang et al., 2018).Ultrafast model selection An ultrafast and automatic model selection (ModelFinder) which is 10 to 100 times faster than jModelTest and ProtTest. ModelFinder also finds best-fit partitioning scheme like PartitionFinder.Big Data Analysis Supporting huge datasets with thousands of sequences or millions of alignment sites via checkpointing, safe numerical and low memory mode. Multicore CPUs and parallel MPI system are utilized to speedup analysis.Phylogenetic testing Several fast branch tests like SH-aLRT and aBayes test (Anisimova et al., 2011) and tree topology tests like the approximately unbiased (AU) test (Shimodaira, 2002).",84.0,Key features,11.0,Introduction
684.0,The strength of   is the availability of a wide variety of phylogenetic models,84.0,Key features,11.0,Introduction
685.0,"Common models All common substitution models for DNA, protein, codon, binary and morphological data with rate heterogeneity among sites and ascertainment bias correction for e.g. SNP data.Partition models Allowing individual models for different genomic loci (e.g. genes or codon positions), mixed data types, mixed rate heterogeneity types, linked or unlinked branch lengths between partitions.Mixture models fully customizable mixture models and empirical protein mixture models and.Polymorphism-aware models Accounting for incomplete lineage sorting to infer species tree from genome-wide population data (Schrempf et al., 2016).",84.0,Key features,11.0,Introduction
686.0,Free web server,85.0,Free web server,11.0,Introduction
687.0,"For a quick start you can also try the   web server, which performs online computation using a dedicated computing cluster. It is very easy to use with as few as just 3 clicks Try it out at",85.0,Free web server,11.0,Introduction
688.0,http//iqtree.cibiv.univie.ac.at,85.0,Free web server,11.0,Introduction
689.0,User support,86.0,User support,11.0,Introduction
690.0,"Please refer to the user documentation and frequently asked questions. If you have further questions, feedback, feature requests, and bug reports, please sign up the following Google group (if not done yet) and post a topic to the",86.0,User support,11.0,Introduction
691.0,https//groups.google.com/d/forum/iqtree,86.0,User support,11.0,Introduction
692.0,The average response time is two working days.,86.0,User support,11.0,Introduction
693.0,Documentation,87.0,Documentation,11.0,Introduction
694.0,  has an extensive documentation with several tutorials and manual,87.0,Documentation,11.0,Introduction
695.0,Getting started guide recommended for users who just downloaded  .Web Server Tutorial A quick starting guide for the   Web Server.Beginner’s tutorial recommended for users starting to use  .Advanced tutorial recommended for more experienced users who want to explore more features of  .Command Reference Comprehensive documentation of command-line options available in  .Substitution Models All common substitution models and usages.Complex Models Complex models such as partition and mixture models.Polymorphism Aware Models Polymorphism-aware phylogenetic Models (PoMo) related documentation.Compilation guide for advanced users who wants to compile   from source code.Frequently asked questions (FAQ) recommended to have a look before you post a question in the   group.,87.0,Documentation,11.0,Introduction
696.0,How to cite  ?,88.0,How to cite IQ-TREE?,11.0,Introduction
697.0,"To maintain  , support users and secure fundings, it is important for us that you cite the following papers, whenever the corresponding features were applied for your analysis.Example 1 We obtained branch supports with the ultrafast bootstrap (Hoang et al., 2018) implemented in the   software (Nguyen et al., 2015).Example 2 We inferred the maximum-likelihood tree using the edge-linked partition model in   (Chernomor et al., 2016; Nguyen et al., 2015).",88.0,How to cite IQ-TREE?,11.0,Introduction
698.0,"If you performed the tests of symmetry, please cite",88.0,How to cite IQ-TREE?,11.0,Introduction
699.0,"S. Naser-Khdour, B.Q. Minh, W. Zhang, E.A. Stone, R. Lanfear (2019) The prevalence and pmpact of model violations in phylogenetic analysis, Genome Biol. Evol., in press. https//doi.org/10.1093/gbe/evz193",88.0,How to cite IQ-TREE?,11.0,Introduction
700.0,If you used the polymorphism-aware models please cite,88.0,How to cite IQ-TREE?,11.0,Introduction
701.0,"D. Schrempf, B.Q. Minh, A. von Haeseler, and C. Kosiol (2019) Polymorphism-aware species trees with advanced mutation models, bootstrap, and rate heterogeneity. Mol. Biol. Evol., 361294-1301. https//doi.org/10.1093/molbev/msz043",88.0,How to cite IQ-TREE?,11.0,Introduction
702.0,If you used the heterotachy model (GHOST) please cite,88.0,How to cite IQ-TREE?,11.0,Introduction
703.0,"S.M. Crotty, B.Q. Minh, N.G. Bean, B.R. Holland, J. Tuke, L.S. Jermiin, A. von Haeseler (2019) GHOST Recovering historical signal from heterotachously-evolved sequence alignments. Syst. Biol., in press. https//doi.org/10.1093/sysbio/syz051",88.0,How to cite IQ-TREE?,11.0,Introduction
704.0,If you performed the ultrafast bootstrap (UFBoot) please cite,88.0,How to cite IQ-TREE?,11.0,Introduction
705.0,"D.T. Hoang, O. Chernomor, A. von Haeseler, B.Q. Minh, and L.S. Vinh (2018) UFBoot2 Improving the ultrafast bootstrap approximation. Mol. Biol. Evol., 35518–522. https//doi.org/10.1093/molbev/msx281",88.0,How to cite IQ-TREE?,11.0,Introduction
706.0,If you used posterior mean site frequency model please cite,88.0,How to cite IQ-TREE?,11.0,Introduction
707.0,"H.C. Wang, B.Q. Minh, S. Susko and A.J. Roger (2018) Modeling site heterogeneity with posterior mean site frequency profiles accelerates accurate phylogenomic estimation. Syst. Biol., 67216-235. https//doi.org/10.1093/sysbio/syx068",88.0,How to cite IQ-TREE?,11.0,Introduction
708.0,If you used ModelFinder please cite,88.0,How to cite IQ-TREE?,11.0,Introduction
709.0,"S. Kalyaanamoorthy, B.Q. Minh, T.K.F. Wong, A. von Haeseler, and L.S. Jermiin (2017) ModelFinder Fast Model Selection for Accurate Phylogenetic Estimates, Nature Methods, 14587–589. https//doi.org/10.1038/nmeth.4285",88.0,How to cite IQ-TREE?,11.0,Introduction
710.0,If you performed tree reconstruction please cite,88.0,How to cite IQ-TREE?,11.0,Introduction
711.0,"L.-T. Nguyen, H.A. Schmidt, A. von Haeseler, and B.Q. Minh (2015)   A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol., 32268-274. https//doi.org/10.1093/molbev/msu300",88.0,How to cite IQ-TREE?,11.0,Introduction
712.0,"If you used partition models e.g., for phylogenomic analysis please cite",88.0,How to cite IQ-TREE?,11.0,Introduction
713.0,"O. Chernomor, A. von Haeseler, and B.Q. Minh (2016) Terrace aware data structure for phylogenomic inference from supermatrices. Syst. Biol., 65997-1008. https//doi.org/10.1093/sysbio/syw037",88.0,How to cite IQ-TREE?,11.0,Introduction
714.0,If you used the   web server please cite,88.0,How to cite IQ-TREE?,11.0,Introduction
715.0,"J. Trifinopoulos, L.-T. Nguyen, A. von Haeseler, and B.Q. Minh (2016) W-  a fast online phylogenetic tool for maximum likelihood analysis. Nucleic Acids Res., 44 (W1)W232-W235. https//doi.org/10.1093/nar/gkw256",88.0,How to cite IQ-TREE?,11.0,Introduction
716.0,Development team,89.0,Development team,11.0,Introduction
717.0,  is actively developed by,89.0,Development team,11.0,Introduction
718.0,"Bui Quang Minh, Team leader, Designs and implements software core, tree search, ultrafast bootstrap, model selection.",89.0,Development team,11.0,Introduction
719.0,"Robert Lanfear, Co-leader, Model selection.",89.0,Development team,11.0,Introduction
720.0,"Olga Chernomor, Developer, Implements partition models.",89.0,Development team,11.0,Introduction
721.0,"Heiko A. Schmidt, Developer, Integrates TREE-PUZZLE features.",89.0,Development team,11.0,Introduction
722.0,"Dominik Schrempf, Developer, Implements polymorphism-aware models (PoMo).",89.0,Development team,11.0,Introduction
723.0,"Michael Woodhams, Developer, Implements Lie Markov models.",89.0,Development team,11.0,Introduction
724.0,"Diep Thi Hoang, Developer, Improves ultrafast bootstrap.",89.0,Development team,11.0,Introduction
725.0,"Arndt von Haeseler, Advisor.",89.0,Development team,11.0,Introduction
726.0,Past members,89.0,Development team,11.0,Introduction
727.0,"Lam Tung Nguyen, Developer, Implemented tree search algorithm.",89.0,Development team,11.0,Introduction
728.0,"Jana Trifinopoulos, Developer, Implemented web service.",89.0,Development team,11.0,Introduction
729.0,Credits and acknowledgements,90.0,Credits and acknowledgements,11.0,Introduction
730.0,"Some parts of the code were taken from the following packages/libraries Phylogenetic likelihood library, TREE-PUZZLE, BIONJ, Nexus Class Libary, Eigen library, SPRNG library, Zlib library, gzstream library, vectorclass library, GNU scientific library.",90.0,Credits and acknowledgements,11.0,Introduction
731.0,"  was funded by the Austrian Science Fund (grant no. I760-B17 from 2012-2015 and I 2508-B29 from 2016-2017), the University of Vienna (Initiativkolleg I059-N from 2012-2015), the Australian National University (2018-onwards), Chan-Zuckerberg Initiative (2020).",90.0,Credits and acknowledgements,11.0,Introduction
732.0,Inferring time tree with tip dates,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
733.0,"This is a common scenario e.g. in virus datasets where you have sampling time for many sequences. You need first to prepare a date file, which comprises several lines, each with a taxon name (from your sequence alignment) and its date separated by spaces, tabs or blanks. Note that it is not required to have dates for all tips. For example, this date file is part of the new corona virus dataset",91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
734.0,hCoV-19/Wuhan-Hu-1         2019-12-31hCoV-19/China/WF0028       2020-02hCoV-19/USA/WA-S88         2020-03-01hCoV-19/USA/CA-CDPH-UC1   2020hCoV-19/Italy/SPL1         2020-01-29hCoV-19/Spain/Valencia5   2020-02-27hCoV-19/Australia/QLD01   2020-01-28hCoV-19/Vietnam/CM295      2020-03-06hCoV-19/bat/Yunnan         2013-07-24hCoV-19/pangolin/Guangdong 2019-02-012019-12-31,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
735.0,"The date information here can be uncertain. For example, hCoV-19/China/WF0028 was sampled in Feb 2020, hCoV-19/USA/CA-CDPH-UC1 was sampled in 2020, and hCoV-19/pangolin/Guangdong was sample between 1st Feb 2019 and 31st Dec 2019. For such data range you can use “NA” to mean that the lower or upper bound is missing, e.g.",91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
736.0,TaxonA  2018-02-01NATaxonB  NA2018-03-31,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
737.0,which means that TaxonA was sampled after 1st Feb 2018 and TaxonB was sampled before 31st Mar 2018.,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
738.0,Now run   with,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
739.0,iqtree -s ALN_FILE --date DATE_FILE,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
740.0,"where ALN_FILE is the sequence alignment and DATE_FILE is the date file. This single command line will perform three steps (1) find the best-fit model using ModelFinder, (2) find the maximum likelihood (ML) tree with branch lengths in number of substitutions per site, and (3) rescale the branch lengths of the ML tree to build a time tree with dated ancestral node. As output   will additional print three files",91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
741.0,"ALN_FILE.timetree.lsd The report of LSD.ALN_FILE.timetree.nex Time tree file in NEXUS format, that can be viewed nicely in FigTree (Click on “Node Labels” on the left tab and choose “Display” as “date” in FigTree, see figure below).ALN_FILE.timetree.nwk Time tree file in NEWICK format.",91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
742.0,"This command will automatically detect the best root position (according to LSD criterion). However, if the root is incorrectly inferred, it may produce wrong dates. Therefore, it is advisable to provide outgroup taxa if possible. In this example, we have this information, so you can use -o option",91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
743.0,"iqtree -s ALN_FILE --date DATE_FILE -o ""hCoV-19/bat/Yunnan,hCoV-19/pangolin/Guangdong""",91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
744.0,to instruct   that the root is on the branch separating bat and pangolin sequences from the rest.,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
745.0,"Alternatively you can also append the dates into the sequence names of the alignment file using the | separator, such as (assuming a FASTA file here)",91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
746.0,>hCoV-19/Wuhan-Hu-1|2019-12-31......>hCoV-19/China/WF0028|2020-02......>hCoV-19/USA/WA-S88|2020-03-01......>hCoV-19/USA/CA-CDPH-UC1|2020......>hCoV-19/Italy/SPL1|2020-01-29......>hCoV-19/Spain/Valencia5|2020-02-27......>hCoV-19/Australia/QLD01|2020-01-28......>hCoV-19/Vietnam/CM295|2020-03-06......>hCoV-19/bat/Yunnan|2013-07-24......>hCoV-19/pangolin/Guangdong|2019......,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
747.0,Then run  ,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
748.0,"iqtree -s ALN_FILE --date TAXNAME -o ""hCoV-19/bat/Yunnan,hCoV-19/pangolin/Guangdong""",91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
749.0,The special keyword TAXNAME for the --date option instructs   to automatically extract the dates from the taxon names.,91.0,Inferring time tree with tip dates,12.0,Phylogenetic Dating
750.0,Calibrating tree using ancestral dates,92.0,Calibrating tree using ancestral dates,12.0,Phylogenetic Dating
751.0,Another scenario is that we have sequences from present day and want to calibrate the dates of the ancestral nodes. This will only work if you have fossil date record of at least one ancestral node in the tree. Then you again need to prepare a date file which looks like,92.0,Calibrating tree using ancestral dates,12.0,Phylogenetic Dating
752.0,"taxon1,taxon2      -50taxon3,taxon4,taxon5  -100taxon6                -10",92.0,Calibrating tree using ancestral dates,12.0,Phylogenetic Dating
753.0,"which, for example, mean that the most recent common ancestor (MRCA) of taxon1 and taxon2 was 50 mya (million year ago) and the MRCA of taxon3, taxon4, taxon5 was 100 mya. Note that no empty space should be added to the comma-separated list of taxa, as empty space is used as a separator between taxon list and dates.",92.0,Calibrating tree using ancestral dates,12.0,Phylogenetic Dating
754.0,Now run  ,92.0,Calibrating tree using ancestral dates,12.0,Phylogenetic Dating
755.0,iqtree -s ALN_FILE --date DATE_FILE --date-tip 0,92.0,Calibrating tree using ancestral dates,12.0,Phylogenetic Dating
756.0,"This means that except for taxon6, all other taxa have the date of 0 for presence.",92.0,Calibrating tree using ancestral dates,12.0,Phylogenetic Dating
757.0,"If you know the root date, then you can set it via --date-root option.",92.0,Calibrating tree using ancestral dates,12.0,Phylogenetic Dating
758.0,Dating an existing tree,93.0,Dating an existing tree,12.0,Phylogenetic Dating
759.0,"If you already have a tree, you can use option -te TREE_FILE to ask   to load and fix this tree topology",93.0,Dating an existing tree,12.0,Phylogenetic Dating
760.0,iqtree -s ALN_FILE --date DATE_FILE -te TREE_FILE,93.0,Dating an existing tree,12.0,Phylogenetic Dating
761.0,"This will work with the scenarios above, i.e.,   will date the user-defined tree instead of the ML tree. To further speed up the process If you know the model already, you set can it via -m option; or in a partitioned analysis, you can provide a partition file with specified models.",93.0,Dating an existing tree,12.0,Phylogenetic Dating
762.0,Obtaining confidence intervals,94.0,Obtaining confidence intervals,12.0,Phylogenetic Dating
763.0,"To infer the confidence interval of the estimated dates, use --date-ci option",94.0,Obtaining confidence intervals,12.0,Phylogenetic Dating
764.0,iqtree -s ALN_FILE --date DATE_FILE --date-ci 100,94.0,Obtaining confidence intervals,12.0,Phylogenetic Dating
765.0,"which will resample branch lengths 100 times to infer the confidence intervals. Note that this is not bootstrap and the method is much faster but unpublished. Roughly speaking, it is based on a mixture of Poisson and lognormal distributions for a relaxed clock model. You can control the standard deviation of the lognormal distribution via --clock-sd option. The default is 0.2. If you set a higher value, the confidence interval will become wider.",94.0,Obtaining confidence intervals,12.0,Phylogenetic Dating
766.0,Excluding outlier taxa/nodes,95.0,Excluding outlier taxa/nodes,12.0,Phylogenetic Dating
767.0,"Long branches may cause biased date estimates. To detect and exclude outlier taxa or nodes prior to dating, use --date-outlier option",95.0,Excluding outlier taxa/nodes,12.0,Phylogenetic Dating
768.0,iqtree -s ALN_FILE --date DATE_FILE --date-outlier 3,95.0,Excluding outlier taxa/nodes,12.0,Phylogenetic Dating
769.0,"that specifies a z-score threshold to detect outliers. The higher this value is, the more outliers will be removed from the resulting time tree.",95.0,Excluding outlier taxa/nodes,12.0,Phylogenetic Dating
770.0,Full list of LSD2 options,96.0,Full list of LSD2 options,12.0,Phylogenetic Dating
771.0,"The main options in   provide easy access to the key LSD2 functions. If you would like more control of what LSD2 is doing, you can use the --date-options ""..."" command to pass any valid options to LSD2. For example, to control the way that LSD2 treats outliers, you can do this",96.0,Full list of LSD2 options,12.0,Phylogenetic Dating
772.0,"iqtree -s ALN_FILE --date DATE_FILE --date-options ""-e 2""",96.0,Full list of LSD2 options,12.0,Phylogenetic Dating
773.0,"A full list of the options for LSD2 can be obtained by downloading LSD2 and running lsd2 -h, the output of that command is reproduced here for convenience",96.0,Full list of LSD2 options,12.0,Phylogenetic Dating
774.0,"LSD LEAST-SQUARES METHODS TO ESTIMATE RATES AND DATES - v.1.8DESCRIPTIONThis program estimates the rate and the dates of the input phylogenies given some temporal constraints.It minimizes the square errors of the branch lengths under normal distribution model.SYNOPSIS./lsd [-i inputFile] [-d inputDateFile] [-o outputFile] [-s sequenceLength] [-g outgroupFile] [-f nbSamplings] OPTIONS-a rootDate   To specify the root date if there's any. If the root date is not a number, but a string (ex 2020-01-10, or b(2019,2020)) then it should   be put between the quotes.-b varianceParameter   The parameter (between 0 and 1) to compute the variances in option -v. It is the pseudo positive constant to add to the branch lengths   when calculating variances, to adjust the dependency of variances to branch lengths. By default b is the maximum between median branch length   and 10/seqlength; but it should be adjusted  based on how/whether the input tree is relaxed or strict. The smaller it is the more variances   would be linear to branch lengths, which is relevant for strict clock. The bigger it is the less effect of branch lengths on variances,    which might be better for relaxed clock.-d inputDateFile   This options is used to read the name of the input date file which contains temporal constraints of internal nodes   or tips. An internal node can be defined either by its label (given in the input tree) or by a subset of tips that have it as    the most recent common ancestor (mrca). A date could be a real or a string or format year-month-day.   The first line of this file is the number of temporal constraints. A temporal constraint can be fixed date, or a    lower bound l(value), or an upper bound u(value), or an interval b(v1,v2)   For example, if the input tree has 4 taxa a,b,c,d, and an internal node named n, then following is a possible date file    6    a l(2003.12)    b u(2007.07)    c 2005    d b(2001.2,2007.11)    mrca(a,b,c,d) b(2000,2001)    n l(2004.3)   If this option is omitted, and option -a, -z are also omitted, the program will estimate relative dates by giving T[root]=0 and T[tips]=1.-D outDateFormat    Specify output date format 1 for real, 2 for year-month-day. By default the program will guess the format of input dates and uses it for    output dates.-e ZscoreOutlier   This option is used to estimate and exclude outlier nodes before dating process.   LSD2 normalize the branch residus and decide a node is outlier if its related residus is great than the ZscoreOutlier.   A normal value of ZscoreOutliercould be 3, but you can adjust it bigger/smaller depending if you want to have   less/more outliers. Note that for now, some functionalities could not be combined with outliers estimation, for example    estimating multiple rates, imprecise date constraints.-f samplingNumberCI   This option calculates the confidence intervals of the estimated rate and dates. The branch lengths of the esimated   tree are sampled samplingNumberCI times to generate a set of simulated trees. To generate simulated lengths   for each branch, we use a Poisson distribution whose mean equals to the estimated one multiplied by the sequence length, which is    1000 by default if nothing was specified via option -s. Long sequence length tends to give small confidence intervals. To avoid    over-estimate the confidence intervals in the case of very long sequence length but not necessarily strict molecular clock, you    could use a smaller sequence length than the actual ones. Confidence intervals are written in the nexus tree with label CI_height,   and can be visualzed with Figtree under Node bar feature.-g outgroupFile   If your data contain outgroups, then specify the name of the outgroup file here. The program will use the outgroups to root the trees.   If you use this combined with options -G, then the outgroups will be removed. The format of this file should be        n        OUTGROUP1        OUTGROUP2        ...        OUTGROUPn-F    By default without this option, we impose the constraints that the date of every node is equal or smaller then the   dates of its descendants, so the running time is quasi-linear. Using this option we ignore this temporal constraints, and   the the running time becomes linear, much faster.-h help   Print this message.-i inputTreesFile   The name of the input trees file. It contains tree(s) in newick format, each tree on one line. Note that the taxa sets of all   trees must be the same.-j   Verbose mode for output messages.-G   Use this option to remove the outgroups (given in option -g) in the estimated tree. If this option is not used, the outgroups    will be kept and the root position in estimated on the branch defined by the outgroups.-l nullBlen   A branch in the input tree is considered informative if its length is greater this value. By default it is 0.5/seq_length. Only    informative branches are forced to be bigger than a minimum branch length (see option -u for more information about this).-m samplingNumberOutlier   The number of dated nodes to be sampled when detecting outlier nodes. This should be smaller than the number of dated nodes,   and is 10 by default.-n datasetNumber   The number of trees that you want to read and analyse.-o outputFile   The base name of the output files to write the results and the time-scale trees.-p partitionFile   The file that defines the partition of branches into multiple subsets in the case that you know each subset has a different rate.   In the partition file, each line contains the name of the group, the prior proportion of the group rate compared to the main rate   (selecting an appropriate value for this helps to converge faster), and a list of subtrees whose branches are supposed to have the    same substitution rate. All branches that are not assigned to any subtree form a group having another rate.   A subtree is defined between {} its first node corresponds to the root of the subtree, and the following nodes (if there any)    correspond to the tips of the subtree. If the first node is a tip label then it takes the mrca of all tips as the root of the subtree.   If the tips of the subtree are not defined (so there's only the defined root), then by    default this subtree is extended down to the tips of the full tree. For example the input tree is    ((A0.12,D0.12)n10.3,((B0.3,C0.5)n20.4,(E0.5,(F0.2,G0.3)n30.33)n40.22)n50.2)root;   and you have the following partition file         group1 1 {n1} {n5 n4}         group2 1 {n3}   then there are 3 rates the first one includes the branches (n1,A), (n1,D), (n5,n4), (n5,n2), (n2,B), (n2,C); the second one    includes the branches (n3,F), (n3,G), and the last one includes all the remaining branches. If the internal nodes don't have labels,   then they can be defined by mrca of at least two tips, for example n1 is mrca(A,D)-q standardDeviationRelaxedClock   This value is involved in calculating confidence intervals to simulate a lognormal relaxed clock. We multiply the simulated branch lengths   with a lognormal distribution with mean 1, and standard deviation q. By default q is 0.2. The bigger q is, the more your tree is relaxed   and give you bigger confidence intervals.-r rootingMethod   This option is used to specify the rooting method to estimate the position of the root for unrooted trees, or   re-estimate the root for rooted trees. The principle is to search for the position of the root that minimizes   the objective function.   Use -r l if your tree is rooted, and you want to re-estimate the root locally around the given root.   Use -r a if you want to estimate the root on all branches (ignoring the given root if the tree is rooted).       In this case, if the constrained mode is chosen (option -c), method ""a"" first estimates the root without using the constraints.       After that, it uses the constrained mode to improve locally the position of the root around this pre-estimated root.   Use -r as if you want to estimate to root using constrained mode on all branches.   Use -r k if you want to re-estimate the root position on the same branche of the given root.       If combined with option -g, the root will be estimated on the branche defined by the outgroups.-R round_time   This value is used to round the minimum branch length of the time scaled tree. The purpose of this is to make the minimum branch length   a meaningful time unit, such as day, week, year ... By default this value is 365, so if the input dates are year, the minimum branch   length is rounded to day. The rounding formula is round(R*minblen)/R.-s sequenceLength   This option is used to specify the sequence length when estimating confidence intervals (option -f). It is used to generate    integer branch lengths (number of substitutions) by multiplying this with the estimated branch lengths. By default it is 1000.-S minSupport   Together with collapsing internal short branches (see option -l), users can also collapse internal branches having weak support values (if   provided in the input tree) by using this option. The program will collapse all internal branches having support <= the specifed value.-t rateLowerBound   This option corresponds to the lower bound for the estimating rate. It is 1e-10 by default.-u minBlen   By default without this option, lsd2 forces every branch of the time scaled tree to be greater than 1/(seq_length*rate) where rate is   an pre-estimated median rate. This value is rounded to the number of days or weeks or years, depending on the rounding parameter -R.   By using option -u, the program will not estimate the minimum branch length but use the specified value instead.-U minExBlen   Similar to option -u but applies for external branches if specified. If it's not specified then the minimum branch length of external   branches is set the same as the one of internal branch.-v variance   Use this option to specify the way you want to apply variances for the branch lengths. Variances are used to recompense big errors on   long estimated branch lengths. The variance of the branch Bi is Vi = (Bi b) where b is specified by option -b.   If variance=0, then we don't use variance. If variance=1, then LSD uses the input branch lengths to calculate variances.   If variance=2, then LSD runs twice where the second time it calculates the variances based on the estimated branch   lengths of the first run. By default variance=1.-V    Get the actual version.-w givenRte   This option is used to specify the name of the file containing the substitution rates.   In this case, the program will use the given rates to estimate the dates of the nodes.   This file should have the following format        RATE1        RATE2        ...  where RATEi is the rate of the tree i in the inputTreesFile.-z tipsDate   To specify the tips date if they are all equal. If the tips date is not a number, but a string (ex 2020-01-10, or b(2019,2020))   then it should be put between the quotes.",96.0,Full list of LSD2 options,12.0,Phylogenetic Dating
775.0,Counts files,97.0,Counts files,13.0,Polymorphism-aware models
776.0,"The input of PoMo is allele frequency data. Especially, when populations have many individuals it is preferable to count the number of bases at each position compared to providing data for each chromosome in a FASTA file. Thereby file size is decreased and parsed faster.",97.0,Counts files,13.0,Polymorphism-aware models
777.0,Counts files contain,97.0,Counts files,13.0,Polymorphism-aware models
778.0,"One headerline that specifies the file as counts file and states the number of populations (leaves on the tree) as well as the number of sites (separated by white space).A second headerline with white space separated headings CRHOM (chromosome), POS (position) and sequence names.Many lines with counts of A, C, G and T bases and their respective positions.",97.0,Counts files,13.0,Polymorphism-aware models
779.0,Comments,97.0,Counts files,13.0,Polymorphism-aware models
780.0,Lines before the first headerline starting with  are treated as comments.,97.0,Counts files,13.0,Polymorphism-aware models
781.0,Example,97.0,Counts files,13.0,Polymorphism-aware models
782.0,"COUNTSFILE  NPOP 5   NSITES NCHROM  POS  Sheep    BlackSheep  RedSheep  Wolf     RedWolf1      1    0,0,1,0  0,0,1,0     0,0,1,0   0,0,5,0  0,0,0,11      2    0,0,0,1  0,0,0,1     0,0,0,1   0,0,0,5  0,0,0,1...9      8373 0,0,0,1  1,0,0,0     0,1,0,0   0,1,4,0  0,0,1,0...Y      9999 0,0,0,1  0,1,0,0     0,1,0,0   0,5,0,0  0,0,1,0",97.0,Counts files,13.0,Polymorphism-aware models
783.0,The download also includes an example counts file called example.cf. This file is a subset of the great ape data that has been analyzed in one of our publications. It includes twelve great ape population with one to 23 inividuals each (two to 56 chromosomes).,97.0,Counts files,13.0,Polymorphism-aware models
784.0,Conversion scripts,97.0,Counts files,13.0,Polymorphism-aware models
785.0,"If you do not want to create counts files with your own scripts, you can use the python script that we provide. For detailed instructions, please refer to the GitHub repository of the counts file library cflib.",97.0,Counts files,13.0,Polymorphism-aware models
786.0,First running example,98.0,First running example,13.0,Polymorphism-aware models
787.0,You can now start to reconstruct a maximum-likelihood tree from this alignment by entering (assuming that example.cf is in the same folder),98.0,First running example,13.0,Polymorphism-aware models
788.0,iqtree -s example.cf -m HKY P,98.0,First running example,13.0,Polymorphism-aware models
789.0,"or, e.g.,",98.0,First running example,13.0,Polymorphism-aware models
790.0,iqtree -nt 4 -s example.cf -m HKY P,98.0,First running example,13.0,Polymorphism-aware models
791.0,"if you use the multicore (OMP) version. -s specifies of the alignment file and -m the model (HKY substitution model with polymorphisms; PoMo), similar to the standard   usage. At the end of the run   writes the same output files as in the standard version (see tutorial).",98.0,First running example,13.0,Polymorphism-aware models
792.0,"example.cf.iqtree the main report file that is self-readable. You should look at this file to see the computational results. It also contains a textual representation of the final tree.example.cf.treefile the ML tree in NEWICK format, which can be visualized by any supported tree viewer programs like FigTree or iTOL.example.cf.log log file of the entire run (also printed on the screen). To report bugs, please send this log file and the original alignment file to the authors.",98.0,First running example,13.0,Polymorphism-aware models
793.0,"The default prefix of all output files is the alignment file name. However, you can always change the prefix using the -pre option, e.g.",98.0,First running example,13.0,Polymorphism-aware models
794.0,iqtree -s example.cf -pre myprefix,98.0,First running example,13.0,Polymorphism-aware models
795.0,This prevents output files to be overwritten when you perform multiple analyses on the same alignment within the same folder.,98.0,First running example,13.0,Polymorphism-aware models
796.0,Substitution models,99.0,Substitution models,13.0,Polymorphism-aware models
797.0,"Different DNA substitution models can be selected with the -m option. E.g., to select the GTR model, run   with",99.0,Substitution models,13.0,Polymorphism-aware models
798.0,iqtree -s example.cf -m GTR P,99.0,Substitution models,13.0,Polymorphism-aware models
799.0,"TIP For a quick overview of all available models in  , run the command iqtree -h and scroll to the heading POLYMORPHISM AWARE MODELS (PoMo).",99.0,Substitution models,13.0,Polymorphism-aware models
800.0,Virtual population size,100.0,Virtual population size,13.0,Polymorphism-aware models
801.0,"PoMo describes the evolution of populations along a phylogeny by means of a virtual population of constant size N, which defaults to nine (for details, see Schrempf et al., 2016). This is a good and stable default value. If only very few chromosomes have been sequenced per population (e.g., two to four), N should be lowered to the average number of chromosomes per population. If enough data is available and calculations are not too time consuming, we advise to increase N up to a maximum of 19. You can choose odd values from three to 19 as well as 2 and 10. E.g., to set N to 19",100.0,Virtual population size,13.0,Polymorphism-aware models
802.0,iqtree -s example.cf -m HKY P N19,100.0,Virtual population size,13.0,Polymorphism-aware models
803.0,Level of polymorphism,101.0,Level of polymorphism,13.0,Polymorphism-aware models
804.0,"As of version 1.6,   with PoMo also allows fixation of the level of heterozygosity, which is also called Watterson’s theta or 4Nu. When analyzing population data, the amount of polymorphism is inferred during maximization of the likelihood. However, in some situations it may be useful to set the level of polymorphism to the observed value in the data (empirical value)",101.0,Level of polymorphism,13.0,Polymorphism-aware models
805.0,iqtree -s example.cf -m HKY P{EMP},101.0,Level of polymorphism,13.0,Polymorphism-aware models
806.0,"or to set the level of polymorphism by hand, e.g.,",101.0,Level of polymorphism,13.0,Polymorphism-aware models
807.0,iqtree -s example.cf -m HKY P{0.0025},101.0,Level of polymorphism,13.0,Polymorphism-aware models
808.0,"Together with the ability to set model parameters, the model can be fully specified, e.g.",101.0,Level of polymorphism,13.0,Polymorphism-aware models
809.0,iqtree -s example.cf -m HKY{6.0} P{0.0025},101.0,Level of polymorphism,13.0,Polymorphism-aware models
810.0,"This sets the transition to transversion ratio to a value of 6.0 and the level of polymorphism to a value of 0.0025. In this case,   only performs a tree search because the model is fully specified.",101.0,Level of polymorphism,13.0,Polymorphism-aware models
811.0,Sampling method,102.0,Sampling method,13.0,Polymorphism-aware models
812.0,"For advanced users. PoMo offers different methods to read in the data (Schrempf et al., 2016). Briefly, each population and site are treated as follows",102.0,Sampling method,13.0,Polymorphism-aware models
813.0,"Weighted binomial (default,  WB) assign the likelihood of each PoMo state to its probability of leading to the observed data, assuming it is binomially sampled. Example iqtree -s example.cf -m HKY P WBWeighted hypergeometric ( WH) assign the likelihood of each PoMo state to its probability of leading to the observed data, assuming it is hypergeometrically sampled. Example iqtree -s example.cf -m HKY P WHSampled randomly draw N samples with replacement from the given data. The N picked samples constitute a PoMo state which will be assigned a likelihood of 1. All other PoMo states have likelihood 0. Example iqtree -s example.cf -m HKY P S",102.0,Sampling method,13.0,Polymorphism-aware models
814.0,"We expect a slight overestimation of the heterozygosity for weighted binomial sampling. This is because monomorphic (fixed) states can be reached from polymorphic states during the sampling step, while polymorphic states cannot be reached from monomorphic states (sampling does not involve mutation). I.e., only when the level of heterozygosity at the leaves is overestimated, the sampling step leads to the correct amount of heterozygosity observed in the data.",102.0,Sampling method,13.0,Polymorphism-aware models
815.0,"If you wish to avoid this effect, use weighted hypergeometric sampling. However, we have observed that weighted binomial sampling is more stable.",102.0,Sampling method,13.0,Polymorphism-aware models
816.0,State frequency type,103.0,State frequency type,13.0,Polymorphism-aware models
817.0,"Similar to standard models, the state frequency type can be selected with  F model string modifiers. The default is to set the state frequencies (i.e., the frequencies of the nucleotides A, C, G and T) to the observed values in the data (empirical value). To estimate the allele frequencies together with the rate parameters during maximization of the likelihood, use",103.0,State frequency type,13.0,Polymorphism-aware models
818.0,iqtree -s example.cf -m GTR P FO,103.0,State frequency type,13.0,Polymorphism-aware models
819.0,Rate heterogeneity,104.0,Rate heterogeneity,13.0,Polymorphism-aware models
820.0,"Recently, PoMo allows inference with different rate categories. As of version 1.6, only discrete Gamma rate heterogeneity is supported. Please be aware, that for biological and mathematical reasons (we cannot simply scale the full transition matrix but have to separate the mutational component from genetic drift), the run time scales linearly with the number of rate categories. In the future, we plan to work on decreasing run time as well as implement more rate heterogeneity types. To use a discrete Gamma model with 4 rate categories, use",104.0,Rate heterogeneity,13.0,Polymorphism-aware models
821.0,iqtree -s example.cf -m HKY P G4,104.0,Rate heterogeneity,13.0,Polymorphism-aware models
822.0,Bootstrap branch support,105.0,Bootstrap branch support,13.0,Polymorphism-aware models
823.0,"Bootstrapping works as expected with PoMo. The standard non-parametric bootstrap is invoked by the -b option, e.g., for 100 replicates",105.0,Bootstrap branch support,13.0,Polymorphism-aware models
824.0,iqtree -s example.cf -m HKY P -b 100,105.0,Bootstrap branch support,13.0,Polymorphism-aware models
825.0,"To overcome the computational burden required by the non-parametric bootstrap,   introduces an ultra fast bootstrap approximation (UFBoot) that is orders of magnitude faster than the standard procedure and provides relatively unbiased branch support values. To run UFBoot, use the option -bb, e.g., for 1000 replicates",105.0,Bootstrap branch support,13.0,Polymorphism-aware models
826.0,iqtree -s example.cf -m HKY P -bb 1000,105.0,Bootstrap branch support,13.0,Polymorphism-aware models
827.0,"For a detailed description, please refer to the bootstrap tutorial.",105.0,Bootstrap branch support,13.0,Polymorphism-aware models
828.0,Interpretation of branch lengths,106.0,Interpretation of branch lengths,13.0,Polymorphism-aware models
829.0,"PoMo estimates the branch length in number of mutations and frequency shifts (drift) per site. The number of drift events compared to the number of mutations becomes higher if the virtual population size is increased. To get the branch length measured in number of substitutions per site which enables a comparison to the branch length estimated by standard DNA substitution models, it has to be divided by N^2. PoMo also outputs the total tree length measured in number of substitutions per site in example.cf.iqtree. An example of the relevant section",106.0,Interpretation of branch lengths,13.0,Polymorphism-aware models
830.0,NOTE The branch lengths of PoMo measure mutations and frequency shifts.To compare PoMo branch lengths to DNA substitution models use the tree lengthmeasured in substitutions per site.Total tree length (sum of branch lengths) - measured in number of mutations and frequency shifts per site 0.71200751 - measured in number of substitutions per site (divided by N^2) 0.00879022Sum of internal branch lengths- measured in mutations and frequency shifts per site 0.01767814 (2.48285810% of tree length)- measured in substitutions per site 0.01767814 (2.48285810% of tree length),106.0,Interpretation of branch lengths,13.0,Polymorphism-aware models
831.0,Inferring unrooted tree with outgroup,107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
832.0,"We first demonstrate the outgroup approach to root the Bovidae family of five sampled species (Yak, Cow, Goat, Sheep and Tibetan antelope) using two outgroup species (Pig and Whale). Please download",107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
833.0,"An input DNA alignment file for these 7 species.An input partition file that defines 52 genes in this alignment. This is a subset of the mammal dataset (Wu et al., 2018).",107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
834.0,"Choosing a “good” outgroup is an entire topic on its own. In generally, the outgroup must contain taxa that do not belong to the ingroup but are evolutionarily close enough to the ingroup taxa.",107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
835.0,"To infer an unrooted tree, run",107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
836.0,iqtree2 -s bovidae_outgroup.phy -p bovidae.nex -B 1000 -T AUTO --prefix rev_dna_outg,107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
837.0,"that will invoke the ultrafast bootstrap with 1000 replicates (-B 1000), detect the optimal number of threads (-T AUTO) and write all output files with the prefix rev_dna_outg.",107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
838.0,The input alignment contains protein-coding genes. We can ask   to translate the alignment into protein sequences using the standard genetic code (-st NT2AA) and perform an amino-acid analysis on the translated alignment with,107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
839.0,iqtree2 -s bovidae_outgroup.phy -p bovidae.nex -B 1000 -T AUTO -st NT2AA --prefix rev_aa_outg,107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
840.0,where setting the prefix to rev_aa_outg avoids file overwriting with the previous run. The resulting tree may now look like (extracted from rev_aa_outg.iqtree),107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
842.0,You can open rev_aa_outg.treefile in a tree viewer software (e.g. FigTree) and re-root the tree on the branch separating the outgroup (Wild_pig and Minke_whale) from the remaining ingroup to obtain an outgroup-rooted tree.,107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
843.0,"Finally, if you want you can also perform a non-partition analysis by removing the option -p.",107.0,Inferring unrooted tree with outgroup,14.0,Rooting phylogenetic trees
844.0,Inferring rooted trees without outgroup,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
845.0,We will now infer a rooted tree using non-reversible models. Please download,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
846.0,"An input DNA alignment file for 5 ingroup species (Yak, Cow, Goat, Sheep and Tibetan antelope). This is a sub-alignment of the alignment above. We can re-use the same partition file.",108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
847.0,"To speed up the analysis, we will perform two steps. The first step is the same as the run above to infer an unrooted tree using reversible models",108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
848.0,iqtree2 -s bovidae.phy -p bovidae.nex -B 1000 -T AUTO --prefix rev_dna,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
849.0,"This run will also write the best partitioning scheme to rev_dna.best_scheme.nex file. In the second step, we will re-use this best scheme but replace the substitution model with the most general non-reversible DNA model, 12.12 or UNREST (see this doc) to obtain a rooted tree",108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
850.0,iqtree2 -s bovidae.phy -p rev_dna.best_scheme.nex --model-joint 12.12 -B 1000 -T AUTO --prefix nonrev_dna,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
851.0,The option --model-joint 12.12 tells   use a linked substitution model 12.12 across all partitions. This is to avoid potential over-parameterization as this is very parameter-rich model with 12 parameters.,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
852.0,The resulting tree extracted from .iqtree file might look like this,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
854.0,(You can better visualize the .treefile in a tree viewer software).,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
855.0,This run will write an additional tree file nonrev_dna.rootstrap.nex with rootstrap support values (see box below for definition) annotated on every branch of the tree. If you open this file in FigTree it may look like this (click on “Branch Labels” and choose rootstrap for “Display” as shown in the figure),108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
856.0,"It shows that the tree might be rooted in the branch leading to Cow with a rootstrap support of 72%, which is rather low. The 2nd best branch separating Cow and Yak from the rest has a rootstrap support of 17.9%. So with this dataset the DNA model cannot reliably tell where the root position is, but at least provides some candidates.",108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
857.0,"Rootstrap To compute rootstrap supports, we conduct a bootstrap analysis to obtain a number of rooted bootstrap trees using non-reversible models. We define the rootstrap support for each branch in the maximum likelihood (ML) tree, as the proportion of rooted bootstrap trees that have the root on that branch. The rootstrap support values are computed for all the branches including external branches. The sum of the rootstrap support values along the tree are always smaller than or equal to one. A sum that is smaller than one can occur when one or more bootstrap replicates are rooted on a branch that does not occur in the ML tree.",108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
858.0,We will now try the amino-acid model to see if that helps. We again use -st NT2AA option to conveniently perform this analysis,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
859.0, step 1 infer unrooted tree with reversible modelsiqtree2 -s bovidae.phy -p bovidae.nex -B 1000 -T AUTO -st NT2AA --prefix rev_aa step 2 infer rooted tree with linked non-reversible modelsiqtree2 -s bovidae.phy -p rev_aa.best_scheme.nex --model-joint NONREV -B 1000 -T AUTO -st NT2AA --prefix nonrev_aa,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
860.0,The option --model-joint NONREV tells   to use the most general amino-acid model NONREV and to link the NONREV model parameters across all partitions NONREV has 379 parameters and linking them across partitions will avoid over-parameterization. The tree extracted from nonrev_aa.iqtree file now may look like,108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
862.0,"Interestingly, the amino-acid model suggests a different root position compared with the DNA model. But this position agrees with the outgroup rooting approach. And the tree nonrev_aa.rootstrap.nex with rootstrap supports look like",108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
863.0,"That means, the branch separating Yak and Cow from the rest receives a very high rootstrap support of 99.9%. Therefore, the amino-acid model seems to have a much higher power to detect the root, compared with the DNA model.",108.0,Inferring rooted trees without outgroup,14.0,Rooting phylogenetic trees
864.0,Testing root positions,109.0,Testing root positions,14.0,Rooting phylogenetic trees
865.0,"The rootstrap introduced above is one way to measure our confidence in the root placement, but it is not a statistical test. Alternatively, we can apply the tree topology tests to compare the log-likelihoods of the trees being rooted on every branch of the ML tree.   v2.1.3 provides a convenient option --root-test that will re-root the tree on every branch and perform the test for you. So you can run",109.0,Testing root positions,14.0,Rooting phylogenetic trees
866.0,iqtree2 -s bovidae.phy -p rev_aa.best_scheme.nex --model-joint NONREV -st NT2AA --root-test -zb 1000 -au -te nonrev_aa.treefile --prefix nonrev_aa_test,109.0,Testing root positions,14.0,Rooting phylogenetic trees
867.0,-zb 1000 -au is to perform several tree topology tests including the approximately-unbiased (AU) test for the tree found above (-te nonrev_aa.treefile). This run will write a file nonrev_aa_test.roottest.csv which might look like,109.0,Testing root positions,14.0,Rooting phylogenetic trees
868.0," Test results for rooting positions on every branch This file can be read in MS Excel or in R with command    dat=read.csv('nonrev_aa_test.roottest.csv',comment.char='') Columns are comma-separated with following meanings    ID      Branch ID    logL    Log-likelihood of the tree rooted at this branch    deltaL  logL difference from the maximal logl    bp-RELL bootstrap proportion using RELL method (Kishino et al. 1990)    p-KH    p-value of one sided Kishino-Hasegawa test (1989)    p-SH    p-value of Shimodaira-Hasegawa test (2000)    c-ELW   Expected Likelihood Weight (Strimmer & Rambaut 2002)    p-AU    p-value of approximately unbiased (AU) test (Shimodaira, 2002)ID,logL,deltaL,bp-RELL,p-KH,p-SH,c-ELW,p-AU1,-90388.66044,0,0.983,0.96,1,0.9695602131,0.99755951058,-90401.6833,13.02286164,0.005,0.04,0.19,0.01262108065,0.005580891015,-90401.68371,13.0232665,0.01,0.04,0.19,0.01262245766,0.0063744559393,-90410.10499,21.44455589,0.002,0.016,0.104,0.002397842346,0.0010143597812,-90410.1084,21.44796542,0,0.016,0.104,0.002389013519,0.00089997259396,-90413.04441,24.38397245,0,0.005,0.059,0.0002047272296,0.00049750924397,-90413.04797,24.38753181,0,0.005,0.059,0.0002046654974,0.0005061888325",109.0,Testing root positions,14.0,Rooting phylogenetic trees
869.0,"The branches are sorted by log-likelihoods in descending order. The last column (p-AU) shows the p-values of the AU test. The branch ID 1 has an AU p-value of 0.9975595105, whereas all other branches has p-values < 0.01. To associate branch ID you can return to the FigTree window for nonrev_aa.rootstrap.nex file and select “Display” to “id” in the “Branch Labels” tab.",109.0,Testing root positions,14.0,Rooting phylogenetic trees
870.0,"The conclusion from this analysis we can reject all rooting positions on branches other than branch ID 1, which agrees with the rootstrap measure.",109.0,Testing root positions,14.0,Rooting phylogenetic trees
871.0,TIP These options --root-test -zb 1000 -au can be combined with the rootstrap run in the previous section to calculate the rootstrap support values and the rooting test p-values in one single analysis.,109.0,Testing root positions,14.0,Rooting phylogenetic trees
872.0,DNA models,110.0,DNA models,15.0,Substitution models
873.0,Base substitution rates,110.0,DNA models,15.0,Substitution models
874.0,  includes all common DNA models (ordered by complexity),110.0,DNA models,15.0,Substitution models
875.0,"ModeldfExplanationCodeJC or JC690Equal substitution rates and equal base frequencies (Jukes and Cantor, 1969).000000F813Equal rates but unequal base freq. (Felsenstein, 1981).000000K80 or K2P1Unequal transition/transversion rates and equal base freq. (Kimura, 1980).010010HKY or HKY854Unequal transition/transversion rates and unequal base freq. (Hasegawa, Kishino and Yano, 1985).010010TN or TN935Like HKY but unequal purine/pyrimidine rates (Tamura and Nei, 1993).010020TNe2Like TN but equal base freq.010020K81 or K3P2Three substitution types model and equal base freq. (Kimura, 1981).012210K81u5Like K81 but unequal base freq.012210TPM22AC=AT, AG=CT, CG=GT and equal base freq.010212TPM2u5Like TPM2 but unequal base freq.010212TPM32AC=CG, AG=CT, AT=GT and equal base freq.012012TPM3u5Like TPM3 but unequal base freq.012012TIM6Transition model, AC=GT, AT=CG and unequal base freq.012230TIMe3Like TIM but equal base freq.012230TIM26AC=AT, CG=GT and unequal base freq.010232TIM2e3Like TIM2 but equal base freq.010232TIM36AC=CG, AT=GT and unequal base freq.012032TIM3e3Like TIM3 but equal base freq.012032TVM7Transversion model, AG=CT and unequal base freq.012314TVMe4Like TVM but equal base freq.012314SYM5Symmetric model with unequal rates but equal base freq. (Zharkikh, 1994).012345GTR8General time reversible model with unequal rates and unequal base freq. (Tavare, 1986).012345",110.0,DNA models,15.0,Substitution models
876.0,"The last column Code is a 6-digit code defining the equality constraints for 6 relative substitution rates A-C, A-G, A-T, C-G, C-T and G-T. 010010 means that A-G rate is equal to C-T rate (corresponding to 1 in the code) and the remaining four substitution rates are equal (corresponding to 0 in the code). Thus, 010010 is equivalent to K80 or HKY model (depending on whether base frequencies are equal or not). 012345 is equivalent to GTR or SYM model as there is no restriction defined by such 6-digit code.",110.0,DNA models,15.0,Substitution models
877.0,"Moreover,   supports arbitrarily restricted DNA model via a 6-digit code, e.g. with option -m 012012 G.",110.0,DNA models,15.0,Substitution models
878.0,"NOTE The digits in the codes do not necessarily have to have the same order as above. That means ‘101101’ describes the same matrix as ‘010010’. The last rate, which corresponds to G-T, (and all rates with the same digit) is always set equal to 1.0 for convenience because the rates are relative.",110.0,DNA models,15.0,Substitution models
879.0,"If users want to fix model parameters, append the model name with a curly bracket {, followed by the comma-separated rate parameters, and a closing curly bracket }. For example, GTR{1.0,2.0,1.5,3.7,2.8} specifies 6 substitution rates A-C=1.0, A-G=2.0, A-T=1.5, C-G=3.7, C-T=2.8 and G-T=1.0.",110.0,DNA models,15.0,Substitution models
880.0,"Another example is for model TIM2 that has the 6-digit code 010232. Thus, TIM2{4.39,5.30,12.1} means that A-C=A-T=4.39 (coded 0), A-G=5.30 (coded 1), C-T=12.1 (coded 3) and C-G=G-T=1.0 (coded 2). This is, in turn, equivalent to specifying GTR{4.39,5.30,4.39,1.0,12.1}.",110.0,DNA models,15.0,Substitution models
881.0,Base frequencies,110.0,DNA models,15.0,Substitution models
882.0,Users can specify three different kinds of base frequencies,110.0,DNA models,15.0,Substitution models
883.0,FreqTypeExplanation FEmpirical base frequencies. This is the default if the model has unequal base freq. FQEqual base frequencies. FOOptimized base frequencies by maximum-likelihood.,110.0,DNA models,15.0,Substitution models
884.0,"For example, GTR FO optimizes base frequencies by ML whereas GTR F (default) counts base frequencies directly from the alignment.",110.0,DNA models,15.0,Substitution models
885.0,"Finally, users can fix base frequencies with e.g. GTR F{0.1,0.2,0.3,0.4} to fix the corresponding frequencies of A, C, G and T (must sum up to 1.0).",110.0,DNA models,15.0,Substitution models
886.0,Lie Markov models,110.0,DNA models,15.0,Substitution models
887.0,"Starting with version 1.6,   supports a series of Lie Markov models (Woodhams et al., 2015), many of which are non-reversible models. Lie Markov models have a consistent property, which is lacking in other common models such as GTR. The following table shows the list of all Lie Markov models (the number before . in the name shows the number of parameters of the model)",110.0,DNA models,15.0,Substitution models
888.0,ModelRev?FreqNote1.1Yes0equiv. to JC2.2bYes0equiv. to K2P3.3aYes0equiv. to K3P3.3bNo0 3.3cYes0equiv. to TNe3.4Yes1 4.4aYes3equiv. to F814.4bYes1 4.5aNo1 4.5bNo1 5.6aNo0 5.6bNo3 5.7aNo2 5.7bNo0 5.7cNo0 5.11aNo2 5.11bNo0 5.11cNo0 5.16No1 6.6No1equiv. to STRSYM (strand symmetric model)6.7aNo3F81 K3P6.7bNo3 6.8aNo3 6.8bNo1 6.17aNo1 6.17bNo1 8.8No3 8.10aNo3 8.10bNo1 8.16No3 8.17No3 8.18No3 9.20aNo2 9.20bNo0Doubly stochastic10.12No3 10.34No3 12.12No3equiv. to UNREST (unrestricted model),110.0,DNA models,15.0,Substitution models
889.0,Column Rev? shows whether the model is reversible or not. Column Freq shows the number of free base frequencies. 0 means equal base frequency; 1 means f(A)=f(G) and f(C)=f(T); 2 means f(A) f(G)=0.5=f(C) f(T); 3 means unconstrained frequencies.,110.0,DNA models,15.0,Substitution models
890.0,All Lie Markov models can have one of the following prefices,110.0,DNA models,15.0,Substitution models
891.0,PrefixMeaningRYpurine-pyrimidine pairing (default)WSweak-strong pairingMKaMino-Keto pairing,110.0,DNA models,15.0,Substitution models
892.0,Protein models,111.0,Protein models,15.0,Substitution models
893.0,Amino-acid exchange rate matrices,111.0,Protein models,15.0,Substitution models
894.0,  supports all common empirical amino-acid exchange rate matrices (alphabetical order),111.0,Protein models,15.0,Substitution models
895.0,"ModelRegionExplanationBlosum62nuclearBLOcks SUbstitution Matrix (Henikoff and Henikoff, 1992). Note that BLOSUM62 is not recommended for phylogenetic analysis as it was designed mainly for sequence alignments.cpREVchloroplastchloroplast matrix (Adachi et al., 2000).DayhoffnuclearGeneral matrix (Dayhoff et al., 1978).DCMutnuclearRevised Dayhoff matrix (Kosiol and Goldman, 2005).FLUviralInfluenza virus (Dang et al., 2010).HIVbviralHIV between-patient matrix HIV-Bm (Nickle et al., 2007).HIVwviralHIV within-patient matrix HIV-Wm (Nickle et al., 2007).JTTnuclearGeneral matrix (Jones et al., 1992).JTTDCMutnuclearRevised JTT matrix (Kosiol and Goldman, 2005).LGnuclearGeneral matrix (Le and Gascuel, 2008).mtARTmitochondrialMitochondrial Arthropoda (Abascal et al., 2007).mtMAMmitochondrialMitochondrial Mammalia (Yang et al., 1998).mtREVmitochondrialMitochondrial Vertebrate (Adachi and Hasegawa, 1996).mtZOAmitochondrialMitochondrial Metazoa (Animals) (Rota-Stabelli et al., 2009).mtMetmitochondrialMitochondrial Metazoa (Vinh et al., 2017).mtVermitochondrialMitochondrial Vertebrate (Vinh et al., 2017).mtInvmitochondrialMitochondrial Inverterbrate (Vinh et al., 2017).PoissonnoneEqual amino-acid exchange rates and frequencies.PMBnuclearProbability Matrix from Blocks, revised BLOSUM matrix (Veerassamy et al., 2004).rtREVviralRetrovirus (Dimmic et al., 2002).VTnuclearGeneral ‘Variable Time’ matrix (Mueller and Vingron, 2000).WAGnuclearGeneral matrix (Whelan and Goldman, 2001).GTR20generalGeneral time reversible models with 190 rate parameters. WARNING Be careful when using this parameter-rich model as parameter estimates might not be stable, especially when not having enough phylogenetic information (e.g. not long enough alignments).",111.0,Protein models,15.0,Substitution models
896.0,Protein mixture models,111.0,Protein models,15.0,Substitution models
897.0,  also supports a series of protein mixture models,111.0,Protein models,15.0,Substitution models
898.0,"ModelExplanationC10 to C6010, 20, 30, 40, 50, 60-profile mixture models (Le et al., 2008a) as variants of the CAT model (Lartillot and Philippe, 2004) for ML. Note that these models assume Poisson AA replacement and implicitly include a Gamma rate heterogeneity among sites.EX2Two-matrix model for exposed/buried AA sites (Le et al., 2008b).EX3Three-matrix model for highly exposed/intermediate/buried AA sites (Le et al., 2008b).EHOThree-matrix model for extended/helix/other sites (Le et al., 2008b).UL2, UL3Unsupervised-learning variants of EX2 and EX3, respectively.EX_EHOSix-matrix model combining EX2 and EHO (Le and Gascuel, 2010).LG4MFour-matrix model fused with Gamma rate heterogeneity (Le et al., 2012).LG4XFour-matrix model fused with FreeRate heterogeneity (Le et al., 2012).CF4Five-profile mixture model (Wang et al., 2008).",111.0,Protein models,15.0,Substitution models
899.0,One can even combine a protein matrix with a profile mixture model like,111.0,Protein models,15.0,Substitution models
900.0,LG C20 Applying LG matrix instead of Poisson for all 20 classes of AA profiles and a Gamma rate heterogeneity.LG C20 F Applying LG matrix for 20 classes plus the 21th class of empirical AA profile (counted from the current data) and Gamma rate heterogeneity.JTT CF4 G Applying JTT matrix for all 5 classes of AA profiles and Gamma rate heteorogeneity.,111.0,Protein models,15.0,Substitution models
901.0,"Moreover, one can override the Gamma rate by FreeRate heterogeneity",111.0,Protein models,15.0,Substitution models
902.0,LG C20 R4 Like LG C20 but replace Gamma by FreeRate heterogeneity.,111.0,Protein models,15.0,Substitution models
903.0,User-defined empirical protein models,111.0,Protein models,15.0,Substitution models
904.0,"If the matrix name does not match any of the above listed models,   assumes that it is a file containing AA exchange rates and frequencies in PAML format. It contains the lower diagonal part of the matrix and 20 AA frequencies, e.g.",111.0,Protein models,15.0,Substitution models
905.0,0.425093 0.276818 0.751878 0.395144 0.123954 5.076149 2.489084 0.534551 0.528768 0.062556 0.969894 2.807908 1.695752 0.523386 0.084808 1.038545 0.363970 0.541712 5.243870 0.003499 4.128591 2.066040 0.390192 1.437645 0.844926 0.569265 0.267959 0.348847 0.358858 2.426601 4.509238 0.927114 0.640543 4.813505 0.423881 0.311484 0.149830 0.126991 0.191503 0.010690 0.320627 0.072854 0.044265 0.008705 0.108882 0.395337 0.301848 0.068427 0.015076 0.594007 0.582457 0.069673 0.044261 0.366317 4.145067 0.536518 6.326067 2.145078 0.282959 0.013266 3.234294 1.807177 0.296636 0.697264 0.159069 0.137500 1.124035 0.484133 0.371004 0.025548 0.893680 1.672569 0.173735 0.139538 0.442472 4.273607 6.312358 0.656604 0.253701 0.052722 0.089525 0.017416 1.105251 0.035855 0.018811 0.089586 0.682139 1.112727 2.592692 0.023918 1.798853 1.177651 0.332533 0.161787 0.394456 0.075382 0.624294 0.419409 0.196961 0.508851 0.078281 0.249060 0.390322 0.099849 0.094464 4.727182 0.858151 4.008358 1.240275 2.784478 1.223828 0.611973 1.739990 0.990012 0.064105 0.182287 0.748683 0.346960 0.361819 1.338132 2.139501 0.578987 2.000679 0.425860 1.143480 1.080136 0.604545 0.129836 0.584262 1.033739 0.302936 1.136863 2.020366 0.165001 0.571468 6.472279 0.180717 0.593607 0.045376 0.029890 0.670128 0.236199 0.077852 0.268491 0.597054 0.111660 0.619632 0.049906 0.696175 2.457121 0.095131 0.248862 0.140825 0.218959 0.314440 0.612025 0.135107 1.165532 0.257336 0.120037 0.054679 5.306834 0.232523 0.299648 0.131932 0.481306 7.803902 0.089613 0.400547 0.245841 3.151815 2.547870 0.170887 0.083688 0.037967 1.959291 0.210332 0.245034 0.076701 0.119013 10.649107 1.702745 0.185202 1.898718 0.654683 0.296501 0.098369 2.188158 0.189510 0.249313 0.079066 0.055941 0.041977 0.053052 0.012937 0.040767 0.071586 0.057337 0.022355 0.062157 0.099081 0.064600 0.022951 0.042302 0.044040 0.061197 0.053287 0.012066 0.034155 0.069147 ,111.0,Protein models,15.0,Substitution models
906.0,(This is an example of an LG matrix taken from PAML package). Note that the amino-acid order in this file is,111.0,Protein models,15.0,Substitution models
907.0, A   R   N   D   C   Q   E   G   H   I   L   K   M   F   P   S   T   W   Y   VAla Arg Asn Asp Cys Gln Glu Gly His Ile Leu Lys Met Phe Pro Ser Thr Trp Tyr Val,111.0,Protein models,15.0,Substitution models
908.0,Amino-acid frequencies,111.0,Protein models,15.0,Substitution models
909.0,"By default, AA frequencies are given by the model. Users can change this with",111.0,Protein models,15.0,Substitution models
910.0,FreqTypeExplanation Fempirical AA frequencies from the data. FOML optimized AA frequencies from the data. FQEqual AA frequencies.,111.0,Protein models,15.0,Substitution models
911.0,"Users can also specify AA frequencies with, e.g.",111.0,Protein models,15.0,Substitution models
912.0," F{0.079066,0.055941,0.041977,0.053052,0.012937,0.040767,0.071586,0.057337,0.022355,0.062157,0.099081,0.064600,0.022951,0.042302,0.044040,0.061197,0.053287,0.012066,0.034155,0.069147}",111.0,Protein models,15.0,Substitution models
913.0,(Example corresponds to the AA frequencies of the LG matrix).,111.0,Protein models,15.0,Substitution models
914.0,Codon models,112.0,Codon models,15.0,Substitution models
915.0,"To apply a codon model one should use the option -st CODON to tell   that the alignment contains protein coding sequences (otherwise,   thinks that it contains DNA sequences and will apply DNA models). This implicitly applies the standard genetic code. You can change to an other genetic code by appending the appropriate ID to the CODON keyword",112.0,Codon models,15.0,Substitution models
916.0,"CodeGenetic code meaningCODON1The Standard Code (same as -st CODON)CODON2The Vertebrate Mitochondrial CodeCODON3The Yeast Mitochondrial CodeCODON4The Mold, Protozoan, and Coelenterate Mitochondrial Code and the Mycoplasma/Spiroplasma CodeCODON5The Invertebrate Mitochondrial CodeCODON6The Ciliate, Dasycladacean and Hexamita Nuclear CodeCODON9The Echinoderm and Flatworm Mitochondrial CodeCODON10The Euplotid Nuclear CodeCODON11The Bacterial, Archaeal and Plant Plastid CodeCODON12The Alternative Yeast Nuclear CodeCODON13The Ascidian Mitochondrial CodeCODON14The Alternative Flatworm Mitochondrial CodeCODON16Chlorophycean Mitochondrial CodeCODON21Trematode Mitochondrial CodeCODON22Scenedesmus obliquus Mitochondrial CodeCODON23Thraustochytrium Mitochondrial CodeCODON24Pterobranchia Mitochondrial CodeCODON25Candidate Division SR1 and Gracilibacteria Code",112.0,Codon models,15.0,Substitution models
917.0,(The IDs follow the specification at http//www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi).,112.0,Codon models,15.0,Substitution models
918.0,Codon substitution rates,112.0,Codon models,15.0,Substitution models
919.0,  supports several codon models,112.0,Codon models,15.0,Substitution models
920.0,"ModelExplanationMGNonsynonymous/synonymous (dn/ds) rate ratio (Muse and Gaut, 1994).MGKLike MG with additional transition/transversion (ts/tv) rate ratio.MG1KTS or MGKAP2Like MG with a transition rate (Kosiol et al., 2007).MG1KTV or MGKAP3Like MG with a transversion rate (Kosiol et al., 2007).MG2K or MGKAP4Like MG with a transition rate and a transversion rate (Kosiol et al., 2007).GYNonsynonymous/synonymous and transition/transversion rate ratios (Goldman and Yang, 1994).GY1KTS or GYKAP2Like GY with a transition rate (Kosiol et al., 2007).GY1KTV or GYKAP3Like GY with a transversion rate (Kosiol et al., 2007).GY2K or GYKAP4Like GY with a transition rate and a transversion rate (Kosiol et al., 2007).ECMK07 or KOSI07Empirical codon model (Kosiol et al., 2007).ECMrestRestricted version of ECMK07 that allows only one nucleotide exchange.ECMS05 or SCHN05Empirical codon model (Schneider et al., 2005).",112.0,Codon models,15.0,Substitution models
921.0,"The last three models (ECMK07, ECMrest or ECMS05) are called empirical codon models, whereas the others are called mechanistic codon models.",112.0,Codon models,15.0,Substitution models
922.0,"Moreover,   supports combined empirical-mechanistic codon models using an underscore separator (_). For example",112.0,Codon models,15.0,Substitution models
923.0,"ECMK07_GY2K The combined ECMK07 and GY2K model, with the rate entries being multiplication of the two corresponding rate matrices.",112.0,Codon models,15.0,Substitution models
924.0,"Thus, there can be many such combinations.",112.0,Codon models,15.0,Substitution models
925.0,"Starting with version 1.5.6 If the model name does not match any of the above listed models,   assumes that it is a file containing lower diagonal part of non-stop codon exchange rate matrix, non-stop codon frequencies and a list of non-stop codons. The rest of the file will be ignored. Example files (ECMrest.dat and ECMunrest.dat) can be downloaded from the supplementary material (Kosiol et al., 2007).",112.0,Codon models,15.0,Substitution models
926.0,"NOTE Branch lengths under codon models are interpreted as number of nucleotide substitutions per codon site. Thus, they are typically 3 times longer than under DNA models.",112.0,Codon models,15.0,Substitution models
927.0,Codon frequencies,112.0,Codon models,15.0,Substitution models
928.0,  supports the following codon frequencies,112.0,Codon models,15.0,Substitution models
929.0,FreqTypeExplanation FEmpirical codon frequencies counted from the data. FQEqual codon frequencies. F1X4Unequal nucleotide frequencies but equal nt frequencies over three codon positions. F3X4Unequal nucleotide frequencies and unequal nt frequencies over three codon positions.,112.0,Codon models,15.0,Substitution models
930.0,"If not specified, the default codon frequency will be  F3X4 for MG-type models,  F for GY-type models and given by the model for empirical codon models.",112.0,Codon models,15.0,Substitution models
931.0,Binary and morphological models,113.0,Binary and morphological models,15.0,Substitution models
932.0,"The binary alignments should contain state 0 and 1, whereas for morphological data, the valid states are 0 to 9 and A to Z.",113.0,Binary and morphological models,15.0,Substitution models
933.0,ModelExplanationJC2Jukes-Cantor type model for binary data.GTR2General time reversible model for binary data.MKJukes-Cantor type model for morphological data.ORDEREDAllowing exchange of neighboring states only.,113.0,Binary and morphological models,15.0,Substitution models
934.0,"Except for GTR2 that has unequal state frequencies, all other models have equal state frequencies.",113.0,Binary and morphological models,15.0,Substitution models
935.0,"TIP If morphological alignments do not contain constant sites (typically the case), then an ascertainment bias correction model ( ASC) should be applied to correct the branch lengths for the absence of constant sites.",113.0,Binary and morphological models,15.0,Substitution models
936.0,Ascertainment bias correction,114.0,Ascertainment bias correction,15.0,Substitution models
937.0,"An ascertainment bias correction ( ASC) model (Lewis, 2001) should be applied if the alignment does not contain constant sites (such as morphological or SNPs data). For example",114.0,Ascertainment bias correction,15.0,Substitution models
938.0,MK ASC For morphological data.GTR ASC For SNPs data.,114.0,Ascertainment bias correction,15.0,Substitution models
939.0," ASC will correct the likelihood conditioned on variable sites. Without  ASC, the branch lengths might be overestimated.",114.0,Ascertainment bias correction,15.0,Substitution models
940.0,Rate heterogeneity across sites,115.0,Rate heterogeneity across sites,15.0,Substitution models
941.0,  supports all common rate heterogeneity across sites models,115.0,Rate heterogeneity across sites,15.0,Substitution models
942.0,"RateTypeExplanation Iallowing for a proportion of invariable sites. Gdiscrete Gamma model (Yang, 1994) with default 4 rate categories. The number of categories can be changed with e.g.  G8. I Ginvariable site plus discrete Gamma model (Gu et al., 1995). RFreeRate model (Yang, 1995; Soubrier et al., 2012) that generalizes the  G model by relaxing the assumption of Gamma-distributed rates. The number of categories can be specified with e.g.  R6 (default 4 categories if not specified). The FreeRate model typically fits data better than the  G model and is recommended for analysis of large data sets. I Rinvariable site plus FreeRate model.",115.0,Rate heterogeneity across sites,15.0,Substitution models
943.0,"TIP The new ModelFinder (-m MFP option) tests the FreeRate model, whereas the standard procedure (-m TEST) does not.",115.0,Rate heterogeneity across sites,15.0,Substitution models
944.0,"Users can fix the parameters of the model. For example,  I{0.2} will fix the proportion of invariable sites (pinvar) to 0.2;  G{0.9} will fix the Gamma shape parameter (alpha) to 0.9;  I{0.2} G{0.9} will fix both pinvar and alpha. To fix the FreeRate model parameters, use the syntax  Rk{w1,r1,...,wk,rk} (replacing k with the number of categories). Here, w1, ..., wk are the weights and r1, ..., rk the rates for each category.",115.0,Rate heterogeneity across sites,15.0,Substitution models
945.0,"NOTE For the  G model   implements the mean approximation approach (Yang, 1994). The same is done in RAxML and PhyML. However, some programs like TREE-PUZZLE implement the median approximation approach, which makes the resulting log-likelihood not comparable.   can change to this approach via the -gmedian option.",115.0,Rate heterogeneity across sites,15.0,Substitution models
946.0,Tree Inference,116.0,Tree Inference,16.0,Web server tutorial
947.0,"Tree Inference provides the most frequently used features of   and allows users to carry out phylogenetic analysis on a multiple sequence alignment (MSA). In the most basic case, no more than an MSA file is required to submit the job. Without further input,   will run with the default parameters and auto-detect the sequence type as well as the best-fitting substitution model. Additionally, Ultrafast Bootstrap (Hoang et al., 2018) and the SH-aLRT branch test (Guindon et al., 2010) will be performed.",116.0,Tree Inference,16.0,Web server tutorial
948.0,"You can either try out the web server with an example alignment by ticking the corresponding box or upload your own alignment file. By clicking on ‘Browse’ a dialog will open where you can select your MSA; the file formats Phylip, Fasta, Nexus, Clustal and MSF are supported.",116.0,Tree Inference,16.0,Web server tutorial
949.0,"After that you can submit the job. If you provide an email address, a notification will be sent to you once the job is finished. In case you don’t specify an email address, you will receive a link in the next step; you can bookmark this link to retrieve your results after the job is finished.",116.0,Tree Inference,16.0,Web server tutorial
950.0,Model Selection,117.0,Model Selection,16.0,Web server tutorial
951.0,"  supports a wide range of substitution models for DNA, protein, codon, binary and morphological alignments. In case you do not know which model is appropriate for your data,   can automatically determine the best-fit model for your alignment. Use the Model Selection tab if you only want to find the best-fit model without doing tree reconstruction.",117.0,Model Selection,16.0,Web server tutorial
952.0,"Like with Tree Inference, the only obligatory input is a multiple sequence alignment. You can either upload your own alignment file or use the example alignment to try out the web server and then submit the job.",117.0,Model Selection,16.0,Web server tutorial
953.0,Analysis Results,118.0,Analysis Results,16.0,Web server tutorial
954.0,"In the tab Analysis Results you can monitor your jobs. With our example file, a run will only take a few seconds, depending on the server load. For your own alignments the CPU time limit is 24 hours. If you provided an email address when submitting the job, you will get an email once it is finished.",118.0,Analysis Results,16.0,Web server tutorial
955.0,"Once a job is finished, you can select it by checking the corresponding box and then download the selected jobs as a zip file. This zip file will contain the results of your run, including the Run Log and the Full Result which are also accessible in the webserver.",118.0,Analysis Results,16.0,Web server tutorial
956.0,"SuffixExplanation.iqtreeFull result of the run, this is the main report file.logRun log.treefileMaximum likelihood tree in NEWICK format, can be visualized with treeviewer programs.svgGraphical tree representation in SVG format, done with ete view.pdfGraphical tree representation in PDF format, done with ete view.contreeConsensus tree with assigned branch supports where branch lengths are optimized on the original alignment; printed if Ultrafast Bootstrap is selected.ckp.gzCheckpoint file; included if a job was stopped because of RAM/CPU limits",118.0,Analysis Results,16.0,Web server tutorial
957.0,"NOTE Jobs which require more than 24 hours or 1GB RAM will be stopped. In such a case, you can download the stopped job and resume the run from the last checkpoint on your local PC as described here.",118.0,Analysis Results,16.0,Web server tutorial
