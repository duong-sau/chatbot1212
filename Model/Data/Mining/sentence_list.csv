intent,intent_group,intent_group_index,intent_index,sentence,sentence_index
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,Partitioned analysis for multi-gene alignments,1.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,If you used partition model in a publication please cite:,2.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"O. Chernomor, A. von Haeseler, and B.Q. Minh (2016) Terrace aware data structure for phylogenomic inference from supermatrices. Syst. Biol., 65:997-1008. https://doi.org/10.1093/sysbio/syw037",3.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"In the partition model, you can specify a substitution model for each gene/character set. IQ-TREE will then estimate the model parameters separately for every partition. Moreover, IQ-TREE provides edge-linked or edge-unlinked branch lengths between partitions:",4.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"-q partition_file: all partitions share the same set of branch lengths (like -q option of RAxML).-p partition_file (-spp in version 1.x): like above but allowing each partition to have its own evolution rate.-Q partition_file (-sp in version 1.x): each partition has its own set of branch lengths (like combination of -q and -M options in RAxML) to account for, e.g. heterotachy (Lopez et al., 2002).",5.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,NOTE: -p is recommended for typical analysis. -q is unrealistic and -Q is very parameter-rich. One can also perform all three analyses and compare e.g. the BIC scores to determine the best-fit partition model.,6.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,IQ-TREE supports RAxML-style and NEXUS partition input file. The RAxML-style partition file may look like:,7.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"DNA, part1 = 1-100
DNA, part2 = 101-384
",8.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"If your partition file is called example.partitions, the partition analysis can be run with:",9.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"iqtree -s example.phy -p example.partitions -m GTR+I+G
# for version 1.x change -p to -spp
",10.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"Note that using RAxML-style partition file, all partitions will use the same rate heterogeneity model given in -m option (+I+G in this example). If you want to specify, say, +G for the first partition and +I+G for the second partition, then you need to create the more flexible NEXUS partition file. This file contains a SETS block with CharSet and CharPartition commands to specify individual genes and the partition, respectively. For example:",11.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"#nexus
begin sets;
    charset part1 = 1-100;
    charset part2 = 101-384;
    charpartition mine = HKY+G:part1, GTR+I+G:part2;
end;
",12.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"If your NEXUS file is called example.nex, then you can use the option -p to input the file as following:",13.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"iqtree -s example.phy -p example.nex
# for version 1.x change -p to -spp
",14.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"Here, IQ-TREE partitions the alignment example.phy into 2 sub-alignments named part1 and part2 containing sites (columns) 1-100 and 101-384, respectively. Moreover, IQ-TREE applies the subtitution models HKY+G and GTR+I+G to part1 and part2, respectively. Substitution model parameters and trees with branch lengths can be found in the result file example.nex.iqtree.",15.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"Moreover, the CharSet command allows to specify non-consecutive sites with e.g.:",16.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"charset part1 = 1-100 200-384;
",17.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"That means, part1 contains sites 1-100 and 200-384 of the alignment. Another example is:",18.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"charset part1 = 1-100\3;
",19.0
Partitioned analysis for multi-gene alignments,Advanced tutorial,1.0,1.0,"for extracting sites 1,4,7,…,100 from the alignment. This is useful for getting codon positions from the protein-coding alignment.",20.0
Partitioned analysis with mixed data,Advanced tutorial,1.0,2.0,Partitioned analysis with mixed data,21.0
Partitioned analysis with mixed data,Advanced tutorial,1.0,2.0,"IQ-TREE also allows combining sub-alignments from different alignment files, which is helpful if you want to combine mixed data (e.g. DNA and protein) in a single analysis. Here is an example for mixing DNA, protein and codon models:",22.0
Partitioned analysis with mixed data,Advanced tutorial,1.0,2.0,"#nexus
begin sets;
    charset part1 = dna.phy: 1-100 201-300;
    charset part2 = dna.phy: 101-200;
    charset part3 = prot.phy: 1-400;
    charset part4 = prot.phy: 401-600;
    charset part5 = codon.phy:CODON, *;
    charpartition mine = HKY:part1, GTR+G:part2, LG+G:part3, WAG+I+G:part4, GY:part5;
end;
",23.0
Partitioned analysis with mixed data,Advanced tutorial,1.0,2.0,"Here, part1 and part2 contain sub-alignments from alignment file dna.phy, whereas part3 and part4 are loaded from alignment file prot.phy and part5 from codon.phy. The : is needed to separate the alignment file name and site specification. Note that, for convenience * in part5 specification means that part5 corresponds to the entire alignment codon.phy.",24.0
Partitioned analysis with mixed data,Advanced tutorial,1.0,2.0,"TIP: For part5 the CODON keyword is specified so that IQ-TREE will apply a codon model. Moreover, this implicitly assumes the standard genetic code. If you want to use another genetic code, append CODON with the code ID described here",25.0
Partitioned analysis with mixed data,Advanced tutorial,1.0,2.0,"Because the alignment file names are now specified in this NEXUS file, you can omit the -s option:",26.0
Partitioned analysis with mixed data,Advanced tutorial,1.0,2.0,"iqtree -p example.nex
# for version 1.x change -p to -spp
",27.0
Partitioned analysis with mixed data,Advanced tutorial,1.0,2.0,"Note that aln.phy and prot.phy does not need to contain the same set of sequences. For instance, if some sequence occurs in aln.phy but not in prot.phy, IQ-TREE will treat the corresponding parts of sequence in prot.phy as missing data. For your convenience IQ-TREE writes the concatenated alignment into the file example.nex.conaln.",28.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,Choosing the right partitioning scheme,29.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"ModelFinder implements a greedy strategy (Lanfear et al., 2012) that starts with the full partition model and subsequentially merges two genes until the model fit does not increase any further:",30.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m MFP+MERGE
# for version 1.x change -p to -spp
",31.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"Note that this command considers the FreeRate heterogeneity model (see model selection tutorial). If you want to resemble PartitionFinder by just considering the invariable site and Gamma rate heterogeneity (thus saving computation times), then run:",32.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m TESTMERGE
# for version 1.x change -p to -spp
",33.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"After ModelFinder found the best partition, IQ-TREE will immediately start the tree reconstruction under the best-fit partition model. Sometimes you only want to find the best-fit partition model without doing tree reconstruction, then run:",34.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m MF+MERGE
# for version 1.x change -p to -spp
",35.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,To resemble PartitionFinder and save time:,36.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m TESTMERGEONLY
# for version 1.x change -p to -spp
",37.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"To reduce the computational burden IQ-TREE implements the relaxed hierarchical clustering algorithm (Lanfear et al., 2014), which is invoked via -rcluster option:",38.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,"iqtree -s example.phy -p example.nex -m MF+MERGE -rcluster 10
# for version 1.x change -p to -spp
",39.0
Choosing the right partitioning scheme,Advanced tutorial,1.0,3.0,to only examine the top 10% partition merging schemes (similar to the --rcluster-percent 10 option in PartitionFinder).,40.0
Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,Ultrafast bootstrapping with partition model,41.0
Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"IQ-TREE can perform the ultrafast bootstrap with partition models by e.g.,",42.0
Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"iqtree -s example.phy -p example.nex -B 1000
# for version 1.x change -p to -spp and -B to -bb
",43.0
Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"Here, IQ-TREE will resample the sites within partitions (i.e., the bootstrap replicates are generated per partition separately and then concatenated together). The same holds true if you do the standard nonparametric bootstrap.",44.0
Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"IQ-TREE supports the partition-resampling strategy as suggested by (Nei et al., 2001):",45.0
Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"iqtree -s example.phy -p example.nex -B 1000 --sampling GENE
# for version 1.x change -p to -spp and -B to -bb and --sampling to -bsam
",46.0
Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"to resample partitions instead of sites. Moreover, IQ-TREE allows an even more complicated strategy: resampling partitions and then sites within resampled partitions (Gadagkar et al., 2005; Seo et al., 2005). This may help to reduce false positives (i.e. wrong branch receiving 100% support):",47.0
Ultrafast bootstrapping with partition model,Advanced tutorial,1.0,4.0,"iqtree -s example.phy -p example.nex -B 1000 --sampling GENESITE
# for version 1.x change -p to -spp and -B to -bb and --sampling to -bsam
",48.0
Constrained tree search,Advanced tutorial,1.0,5.0,Constrained tree search,49.0
Constrained tree search,Advanced tutorial,1.0,5.0,"IQ-TREE supports constrained tree search via -g option, so that the resulting tree must obey a constraint tree topology. The constraint tree can be multifurcating and need not to contain all species. To illustrate, let’s return to the first running example, where we want to force Human grouping with Seal whereas Cow with Whale. If you use the following constraint tree (NEWICK format):",50.0
Constrained tree search,Advanced tutorial,1.0,5.0,"((Human,Seal),(Cow,Whale));
",51.0
Constrained tree search,Advanced tutorial,1.0,5.0,Save this to a file example.constr0 and run:,52.0
Constrained tree search,Advanced tutorial,1.0,5.0,"iqtree -s example.phy -m TIM2+I+G -g example.constr0 --prefix example.constr0
# for version 1.x change --prefix to -pre
",53.0
Constrained tree search,Advanced tutorial,1.0,5.0,(We use a prefix in order not to overwrite output files of the previous run). The resulting part of the tree extracted from example.constr0.iqtree looks exactly like a normal unconstrained tree search:,54.0
Constrained tree search,Advanced tutorial,1.0,5.0,"        +--------------Human
     +--|
     |  |  +------Seal
     |  +--|
     |     |  +-----Cow
     |     +--|
     |        +-------Whale
+----|
|    |         +---Mouse
|    +---------|
|              +------Rat
",55.0
Constrained tree search,Advanced tutorial,1.0,5.0,"This is the correct behavior: although Human and Seal are not monophyletic, this tree indeed satisfies the constraint, because the induced subtree separates (Human,Seal) from (Cow,Whale). This comes from the fact that the tree is unrooted. If you want them to be sister groups, then you need to include outgroup taxa into the constraint tree. For example:",56.0
Constrained tree search,Advanced tutorial,1.0,5.0,"((Human,Seal),(Cow,Whale),Mouse);
",57.0
Constrained tree search,Advanced tutorial,1.0,5.0,Save this to example.constr1 and run:,58.0
Constrained tree search,Advanced tutorial,1.0,5.0,"iqtree -s example.phy -m TIM2+I+G -g example.constr1 --prefix example.constr1
# for version 1.x change --prefix to -pre
",59.0
Constrained tree search,Advanced tutorial,1.0,5.0,The resulting part of the tree is then:,60.0
Constrained tree search,Advanced tutorial,1.0,5.0,"           +---------------Human
        +--|
        |  +------Seal
     +--|
     |  |  +-----Cow
     |  +--|
     |     +-------Whale
+----|
|    |         +---Mouse
|    +---------|
|              +------Rat
",61.0
Constrained tree search,Advanced tutorial,1.0,5.0,which shows the desired effect.,62.0
Constrained tree search,Advanced tutorial,1.0,5.0,"NOTE: While this option helps to enforce the tree based on prior knowledge, it is advised to always perform tree topology tests to make sure that the resulting constrained tree is NOT significantly worse than an unconstrained tree! See tree topology tests and testing constrained tree below for a guide how to check this.",63.0
Tree topology tests,Advanced tutorial,1.0,6.0,Tree topology tests,64.0
Tree topology tests,Advanced tutorial,1.0,6.0,IQ-TREE can compute log-likelihoods of a set of trees passed via the -z option:,65.0
Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -m GTR+G
",66.0
Tree topology tests,Advanced tutorial,1.0,6.0,"assuming that example.treels is an existing file containing a set of trees in NEWICK format. IQ-TREE first reconstructs an ML tree. Then, it will compute the log-likelihood of the trees in example.treels based on the estimated parameters done for the ML tree. example.phy.iqtree will have a section called USER TREES that lists the tree IDs and the corresponding log-likelihoods. The trees with optimized branch lengths can be found in example.phy.treels.trees If you only want to evaluate the trees without reconstructing the ML tree, you can run:",67.0
Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -n 0
",68.0
Tree topology tests,Advanced tutorial,1.0,6.0,"Here, the number of search iterations is set to 0 (-n 0), such that model parameters are quickly estimated from an initial parsimony tree, which is normally accurate enough for our purpose. If you, however, prefer to estimate model parameters based on a tree (e.g. reconstructed previously), use -te <treefile> option.",69.0
Tree topology tests,Advanced tutorial,1.0,6.0,"IQ-TREE also supports several tree topology tests using the RELL approximation (Kishino et al., 1990). This includes bootstrap proportion (BP), Kishino-Hasegawa test (Kishino and Hasegawa, 1989), Shimodaira-Hasegawa test (Shimodaira and Hasegawa, 1999), expected likelihood weights (Strimmer and Rambaut, 2002):",70.0
Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -n 0 -zb 1000
",71.0
Tree topology tests,Advanced tutorial,1.0,6.0,"Here, -zb specifies the number of RELL replicates, where 1000 is the recommended minimum number. The USER TREES section of example.phy.iqtree will list the results of BP, KH, SH, and ELW methods.",72.0
Tree topology tests,Advanced tutorial,1.0,6.0,"If you also want to perform the weighted KH and weighted SH tests, simply add -zw option:",73.0
Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -n 0 -zb 1000 -zw
",74.0
Tree topology tests,Advanced tutorial,1.0,6.0,"Starting with version 1.4.0 IQ-TREE supports approximately unbiased (AU) test (Shimodaira, 2002) via -au option:",75.0
Tree topology tests,Advanced tutorial,1.0,6.0,"iqtree -s example.phy -z example.treels -n 0 -zb 1000 -zw -au
",76.0
Tree topology tests,Advanced tutorial,1.0,6.0,This will perform all above tests plus the AU test.,77.0
Tree topology tests,Advanced tutorial,1.0,6.0,"Finally, note that IQ-TREE will automatically detect duplicated tree topologies and omit them during the evaluation.",78.0
Tree topology tests,Advanced tutorial,1.0,6.0,"HINTS:The KH, SH and AU tests return p-values, thus a tree is rejected if its p-value < 0.05 (marked with a - sign).bp-RELL and c-ELW return posterior weights which are not p-value. The weights sum up to 1 across the trees tested.The KH test (Kishino and Hasegawa, 1989) was designed to test 2 trees and thus has no correction for multiple testing. The SH test (Shimodaira and Hasegawa, 1999) fixes this problem.However, the SH test becomes too conservative (i.e., rejecting fewer trees than expected) when testing many trees. The AU test (Shimodaira, 2002) fixes this problem and is thus recommended as replacement for both KH and SH tests.",79.0
Testing constrained tree,Advanced tutorial,1.0,7.0,Testing constrained tree,80.0
Testing constrained tree,Advanced tutorial,1.0,7.0,"We now illustrate an example to use the AU test (see above) to test trees from unconstrained versus constrained search, which is helpful to know if a constrained search is sensible or not. Thus:",81.0
Testing constrained tree,Advanced tutorial,1.0,7.0,"Perform an unconstrained search: iqtree -s example.phy -m TIM2+I+G --prefix example.unconstr
 # for version 1.x change --prefix to -pre
Perform a constrained search, where example.constr1 file contains: ((Human,Seal),(Cow,Whale),Mouse);: iqtree -s example.phy -m TIM2+I+G -g example.constr1 --prefix example.constr1
 # for version 1.x change --prefix to -pre
Perform another constrained search, where example.constr2 file contains ((Human,Cow,Whale),Seal,Mouse);: iqtree -s example.phy -m TIM2+I+G -g example.constr2 --prefix example.constr2
 # for version 1.x change --prefix to -pre
Perform the last constrained search, where example.constr3 file contains ((Human,Mouse),(Cow,Rat),Opossum);: iqtree -s example.phy -m TIM2+I+G -g example.constr3 --prefix example.constr3
 # for version 1.x change --prefix to -pre
Concatenate all trees into a file: # for Linux or macOS
 cat example.unconstr.treefile example.constr1.treefile example.constr2.treefile example.constr3.treefile > example.treels
    
 # for Windows
 type example.unconstr.treefile example.constr1.treefile example.constr2.treefile example.constr3.treefile > example.treels
Test the set of trees: iqtree -s example.phy -m TIM2+I+G -z example.treels -n 0 -zb 1000 -au
",82.0
Testing constrained tree,Advanced tutorial,1.0,7.0,Now look at the resulting .iqtree file:,83.0
Testing constrained tree,Advanced tutorial,1.0,7.0,"USER TREES
----------

See example.phy.trees for trees with branch lengths.

Tree      logL    deltaL  bp-RELL    p-KH     p-SH    c-ELW     p-AU
-------------------------------------------------------------------------
  1   -21152.617   0.000  0.7110 + 0.7400 + 1.0000 + 0.6954 + 0.7939 + 
  2   -21156.802   4.185  0.2220 + 0.2600 + 0.5910 + 0.2288 + 0.3079 + 
  3   -21158.579   5.962  0.0670 + 0.1330 + 0.5130 + 0.0758 + 0.1452 + 
  4   -21339.596 186.980  0.0000 - 0.0000 - 0.0000 - 0.0000 - 0.0000 - 

deltaL  : logL difference from the maximal logl in the set.
bp-RELL : bootstrap proportion using RELL method (Kishino et al. 1990).
p-KH    : p-value of one sided Kishino-Hasegawa test (1989).
p-SH    : p-value of Shimodaira-Hasegawa test (2000).
c-ELW   : Expected Likelihood Weight (Strimmer & Rambaut 2002).
p-AU    : p-value of approximately unbiased (AU) test (Shimodaira, 2002).

Plus signs denote the 95% confidence sets.
Minus signs denote significant exclusion.
All tests performed 1000 resamplings using the RELL method.
",84.0
Testing constrained tree,Advanced tutorial,1.0,7.0,"One sees that the AU test does not reject the first 3 trees (denoted by + sign below the p-AU column), whereas the last tree is significantly excluded (- sign). All other tests also agree with this. Therefore, groupings of (Human,Mouse) and (Cow,Rat) do not make sense. Whereas the phylogenetic position of Seal based on 3 first trees is still undecidable. This is in agreement with the SH-aLRT and ultrafast bootstrap supports done in the Tutorial.",85.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,Consensus construction and bootstrap value assignment,86.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,"IQ-TREE can construct an extended majority-rule consensus tree from a set of trees written in NEWICK or NEXUS format (e.g., produced by MrBayes):",87.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,"iqtree -con mytrees
",88.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,"To build a majority-rule consensus tree, simply set the minimum support threshold to 0.5:",89.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,"iqtree -con mytrees -minsup 0.5
",90.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,"If you want to specify a burn-in (the number of beginning trees to ignore from the trees file), use -bi option:",91.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,"iqtree -con mytrees -minsup 0.5 -bi 100
",92.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,to skip the first 100 trees in the file.,93.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,IQ-TREE can also compute a consensus network and print it into a NEXUS file by:,94.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,"iqtree -net mytrees
",95.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,"Finally, a useful feature is to read in an input tree and a set of trees, then IQ-TREE can assign the support value onto the input tree (number of times each branch in the input tree occurs in the set of trees). This option is useful if you want to compute the support values for an ML tree based on alternative topologies.",96.0
Consensus construction and bootstrap value assignment,Advanced tutorial,1.0,8.0,"iqtree -sup input_tree set_of_trees
",97.0
User-defined substitution models,Advanced tutorial,1.0,9.0,User-defined substitution models,98.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"Users can specify any DNA model using a 6-letter code that defines which rates should be equal. For example, 010010 corresponds to the HKY model and 012345 to the GTR model. In fact, IQ-TREE uses this specification internally to simplify the coding. The 6-letter code is specified via the -m option, e.g.:",99.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"iqtree -s example.phy -m 010010+G
",100.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"Moreover, with the -m option one can input a file which contains the 6 rates (A-C, A-G, A-T, C-G, C-T, G-T) and 4 base frequencies (A, C, G, T). For example:",101.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"iqtree -s example.phy -m mymodel+G
",102.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"where mymodel is a file containing the 10 entries described above, in the correct order. The entries can be seperated by either empty space(s) or newline character. One can even specify the rates within -m option by e.g.:",103.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"iqtree -s example.phy -m 'TN{2.0,3.0}+G8{0.5}+I{0.15}'
",104.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"That means, we use Tamura-Nei model with fixed transition-transversion rate ratio of 2.0 and purine/pyrimidine rate ratio of 3.0. Moreover, we use 8-category Gamma-distributed site rates with the shape parameter (alpha) equal to 0.5 and a proportion of invariable sites p-inv=0.15.",105.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"By default IQ-TREE computes empirical state frequencies from the alignment by counting, but one can also estimate the frequencies by maximum-likelihood with +Fo in the model name:",106.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"iqtree -s example.phy -m GTR+G+Fo
",107.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"For amino-acid alignments, IQ-TREE use the empirical frequencies specified in the model. If you want frequencies as counted from the alignment, use +F, for example:",108.0
User-defined substitution models,Advanced tutorial,1.0,9.0,"iqtree -s myprotein_alignment -m WAG+G+F
",109.0
User-defined substitution models,Advanced tutorial,1.0,9.0,Note that all model specifications above can be used in the partition model NEXUS file.,110.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,Inferring site-specific rates,111.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"IQ-TREE allows to infer site-specific evolutionary rates if a site-rate heterogeneity model such as Gamma or FreeRate is the best model. Here, IQ-TREE will estimate model parameters and then apply an empirical Bayesian approach to assign site-rates as the mean over rate categories, weighted by the posterior probability of the site falling into each category. This approach is provided in IQ-TREE because such empirical Bayesian approach was shown to be most accurate (Mayrose et al., 2004). An example run:",112.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"iqtree -s example.phy --rate
# for version 1.x change --rate to -wsr
",113.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,IQ-TREE will write an output file example.phy.rate that looks like:,114.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"Site    Rate    Category        Categorized_rate
1       0.26625 2       0.24393
2       0.99345 3       0.81124
3       2.69275 4       2.91367
4       0.25822 2       0.24393
5       0.25822 2       0.24393
6       0.42589 2       0.24393
7       0.30194 2       0.24393
8       0.72790 3       0.81124
9       0.25822 2       0.24393
10      0.09177 1       0.03116
",115.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"The 1st column is site index of the alignment (starting from 1), the 2nd column Rate shows the mean site-specific rate as explained above, and the 3rd and 4th columns show the category index and rate of the Gamma rate category with the highest probability for this site (1 for slow and 4 for fast rate).",116.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"The above run will perform a full tree search. To speed up you can use -n 0 to only use a parsimony tree for site rate estimates. Or if you have already infered an ML tree, you can specify it to improve the rate estimate:",117.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"iqtree -s example.phy -t ml.treefile -n 0 --rate 
# for version 1.x change --rate to -wsr
",118.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,where -t is the option to input a fixed tree topology and ml.treefile is the ML tree reconstructed previously.,119.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"If you already know the best-fit model for the alignment, you can use specify it via -m option to omit model selection and hence speed it up:",120.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"iqtree -s example.phy -m GTR+R10 -n 0 --rate 
# for version 1.x change --rate to -wsr
",121.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"Finally, IQ-TREE 2 allows to estimate rates by maximum likelihood via --mlrate option:",122.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"iqtree -s example.phy -n 0 --mlrate 
",123.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,This will print an output file example.phy.mlrate that looks like:,124.0
Inferring site-specific rates,Advanced tutorial,1.0,10.0,"# Site-specific subtitution rates determined by maximum likelihood
# This file can be read in MS Excel or in R with command:
#   tab=read.table('example.phy.mlrate',header=TRUE)
# Columns are tab-separated with following meaning:
#   Site:   Alignment site ID
#   Rate:   Site rate estimated by maximum likelihood
Site    Rate
1       2.51550
2       12.89129
3       34.31350
4       2.44313
5       2.44313
6       4.41889
7       2.69577
8       9.27503
9       2.44313
10      0.00001
",125.0
Where to go from here?,Advanced tutorial,1.0,11.0,Where to go from here?,126.0
Where to go from here?,Advanced tutorial,1.0,11.0,See Command Reference for a complete list of all options available in IQ-TREE.,127.0
Input data,Beginner’s tutorial,2.0,12.0,Input data,128.0
Input data,Beginner’s tutorial,2.0,12.0,"IQ-TREE takes as input a multiple sequence alignment and will reconstruct an evolutionary tree that is best explained by the input data. If you have raw (unaligned) sequences, you need to first run an alignment program like MAFFT or ClustalW to align the sequences, before feeding them into IQ-TREE.",129.0
Input data,Beginner’s tutorial,2.0,12.0,The input alignment can be in various common formats. For example the PHYLIP format which may look like:,130.0
Input data,Beginner’s tutorial,2.0,12.0,"7 28
Frog       AAATTTGGTCCTGTGATTCAGCAGTGAT
Turtle     CTTCCACACCCCAGGACTCAGCAGTGAT
Bird       CTACCACACCCCAGGACTCAGCAGTAAT
Human      CTACCACACCCCAGGAAACAGCAGTGAT
Cow        CTACCACACCCCAGGAAACAGCAGTGAC
Whale      CTACCACGCCCCAGGACACAGCAGTGAT
Mouse      CTACCACACCCCAGGACTCAGCAGTGAT
",131.0
Input data,Beginner’s tutorial,2.0,12.0,"This tiny alignment contains 7 DNA sequences from several animals with the sequence length of 28 nucleotides. IQ-TREE also supports other file formats such as FASTA, NEXUS, CLUSTALW. The FASTA file for the above example may look like this:",132.0
Input data,Beginner’s tutorial,2.0,12.0,">Frog       
AAATTTGGTCCTGTGATTCAGCAGTGAT
>Turtle     
CTTCCACACCCCAGGACTCAGCAGTGAT
>Bird       
CTACCACACCCCAGGACTCAGCAGTAAT
>Human      
CTACCACACCCCAGGAAACAGCAGTGAT
>Cow        
CTACCACACCCCAGGAAACAGCAGTGAC
>Whale      
CTACCACGCCCCAGGACACAGCAGTGAT
>Mouse      
CTACCACACCCCAGGACTCAGCAGTGAT
",133.0
Input data,Beginner’s tutorial,2.0,12.0,"TIP: From version 2 you can input a directory of alignment files. IQ-TREE 2 will load and concatenate all alignments within the directory, eliminating the need for users to manually perform this step.",134.0
First running example,Beginner’s tutorial,2.0,13.0,First running example,135.0
First running example,Beginner’s tutorial,2.0,13.0,From the download there is an example alignment called example.phy in PHYLIP format. This example contains parts of the mitochondrial DNA sequences of several animals (Source: Phylogenetic Handbook).,136.0
First running example,Beginner’s tutorial,2.0,13.0,You can now start to reconstruct a maximum-likelihood tree from this alignment by entering (assuming that you are now in the same folder with example.phy):,137.0
First running example,Beginner’s tutorial,2.0,13.0,"iqtree -s example.phy
",138.0
First running example,Beginner’s tutorial,2.0,13.0,-s is the option to specify the name of the alignment file that is always required by IQ-TREE to work. At the end of the run IQ-TREE will write several output files including:,139.0
First running example,Beginner’s tutorial,2.0,13.0,"example.phy.iqtree: the main report file that is self-readable. You should look at this file to see the computational results. It also contains a textual representation of the final tree (see below).example.phy.treefile: the ML tree in NEWICK format, which can be visualized by any supported tree viewer programs like FigTree or iTOL.example.phy.log: log file of the entire run (also printed on the screen). To report bugs, please send this log file and the original alignment file to the authors.",140.0
First running example,Beginner’s tutorial,2.0,13.0,For this example data the resulting maximum-likelihood tree may look like this (extracted from .iqtree file):,141.0
First running example,Beginner’s tutorial,2.0,13.0,"NOTE: Tree is UNROOTED although outgroup taxon 'LngfishAu' is drawn at root

+--------------LngfishAu
|
|        +--------------LngfishSA
+--------|
|        +--------------LngfishAf
|
|      +-------------------Frog
+------|
       |               +-----------------Turtle
       |         +-----|
       |         |     |      +-----------------------Sphenodon
       |         |     |   +--|
       |         |     |   |  +--------------------------Lizard
       |         |     +---|
       |         |         |      +---------------------Crocodile
       |         |         +------|
       |         |                +------------------Bird
       +---------|
                 |                  +----------------Human
                 |               +--|
                 |               |  |  +--------Seal
                 |               |  +--|
                 |               |     |   +-------Cow
                 |               |     +---|
                 |               |         +---------Whale
                 |          +----|
                 |          |    |         +------Mouse
                 |          |    +---------|
                 |          |              +--------Rat
                 +----------|
                            |   +----------------Platypus
                            +---|
                                +-------------Opossum
",142.0
First running example,Beginner’s tutorial,2.0,13.0,"This makes sense as the mammals (Human to Opossum) form a clade, whereas the reptiles (Turtle to Crocodile) and Bird form a separate sister clade. Here the tree is drawn at the outgroup Lungfish which is more accient than other species in this example. However, please note that IQ-TREE always produces an unrooted tree as it knows nothing about this biological background; IQ-TREE simply draws the tree this way as LngfishAu is the first sequence occuring in the alignment.",143.0
First running example,Beginner’s tutorial,2.0,13.0,"During the example run above, IQ-TREE periodically wrote to disk a checkpoint file example.phy.ckp.gz (gzip-compressed to save space). This checkpoint file is used to resume an interrupted run, which is handy if you have a very large data sets or time limit on a cluster system. If the run did not finish, invoking IQ-TREE again with the very same command line will recover the analysis from the last stopped point, thus saving all computation time done before.",144.0
First running example,Beginner’s tutorial,2.0,13.0,"If the run successfully completed, running again will issue an error message:",145.0
First running example,Beginner’s tutorial,2.0,13.0,"ERROR: Checkpoint (example.phy.ckp.gz) indicates that a previous run successfully finished
Use `-redo` option if you really want to redo the analysis and overwrite all output files.
",146.0
First running example,Beginner’s tutorial,2.0,13.0,"This prevents lost of data if you accidentally re-run IQ-TREE. However, if you really want to re-run the analysis and overwrite all previous output files, use -redo option:",147.0
First running example,Beginner’s tutorial,2.0,13.0,"iqtree -s example.phy -redo
",148.0
First running example,Beginner’s tutorial,2.0,13.0,"Finally, the default prefix of all output files is the alignment file name. You can change the prefix with:",149.0
First running example,Beginner’s tutorial,2.0,13.0,"iqtree -s example.phy --prefix myprefix
# for version 1.x change --prefix to -pre
",150.0
First running example,Beginner’s tutorial,2.0,13.0,This prevents output files being overwritten when you perform multiple analyses on the same alignment within the same folder.,151.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,Choosing the right substitution model,152.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,NOTE: If you use model selection please cite the following paper:,153.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"S. Kalyaanamoorthy, B.Q. Minh, T.K.F. Wong, A. von Haeseler, and L.S. Jermiin (2017) ModelFinder: fast model selection for accurate phylogenetic estimates. Nat. Methods, 14:587–589. DOI: 10.1038/nmeth.4285",154.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"IQ-TREE supports a wide range of substitution models for DNA, protein, codon, binary and morphological alignments. If you do not know which model is appropriate for your data, you can use ModelFinder to determine the best-fit model:",155.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"iqtree -s example.phy -m MFP
# change -m MFP to -m TEST to resemble jModelTest/ProtTest
",156.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"-m is the option to specify the model name to use during the analysis. The special MFP key word stands for ModelFinder Plus, which tells IQ-TREE to perform ModelFinder and the remaining analysis using the selected model. ModelFinder computes the log-likelihoods of an initial parsimony tree for many different models and the Akaike information criterion (AIC), corrected Akaike information criterion (AICc), and the Bayesian information criterion (BIC). Then ModelFinder chooses the model that minimizes the BIC score (you can also change to AIC or AICc by adding the option -AIC or -AICc, respectively).",157.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"TIP: Starting with version 1.5.4, -m MFP is the default behavior. Thus, this run is equivalent to iqtree -s example.phy.",158.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"Here, IQ-TREE will write an additional file:",159.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,example.phy.model: log-likelihoods for all models tested. It serves as a checkpoint file to recover an interrupted model selection.,160.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"If you now look at example.phy.iqtree you will see that IQ-TREE selected TIM2+I+G4 as the best-fit model for this example data. Thus, for additional analyses you do not have to perform the model test again and can use the selected model:",161.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"iqtree -s example.phy -m TIM2+I+G
",162.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"Sometimes you only want to find the best-fit model without doing tree reconstruction, then run:",163.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"iqtree -s example.phy -m MF
# change -m MF to -m TESTONLY to resemble jModelTest/ProtTest
",164.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"By default, the maximum number of categories is limitted to 10 due to computational reasons. If your sequence alignment is long enough, then you can increase this upper limit with the cmax option:",165.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"iqtree -s example.phy -m MF -cmax 15
",166.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,will test +R2 to +R15 instead of at most +R10.,167.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"To reduce computational burden, one can use the option -mset to restrict the testing procedure to a subset of base models instead of testing the entire set of all available models. For example, -mset WAG,LG will test only models like WAG+... or LG+.... Another useful option in this respect is -msub for AA data sets. With -msub nuclear only general AA models are included, whereas with -msub viral only AA models for viruses are included.",168.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"If you have enough computational resource, you can perform a thorough and more accurate analysis that invokes a full tree search for each model considered via the -mtree option:",169.0
Choosing the right substitution model,Beginner’s tutorial,2.0,14.0,"iqtree -s example.phy -m MF -mtree
",170.0
Using codon models,Beginner’s tutorial,2.0,15.0,Using codon models,171.0
Using codon models,Beginner’s tutorial,2.0,15.0,"IQ-TREE supports a number of codon models. You need to input a protein-coding DNA alignment and specify codon data by option -st CODON (Otherwise, IQ-TREE applies DNA model because it detects that your alignment has DNA sequences):",172.0
Using codon models,Beginner’s tutorial,2.0,15.0,"iqtree -s coding_gene.phy -st CODON 
",173.0
Using codon models,Beginner’s tutorial,2.0,15.0,"If your alignment length is not divisible by 3, IQ-TREE will stop with an error message. IQ-TREE will group sites 1,2,3 into codon site 1; sites 4,5,6 to codon site 2; etc. Moreover, any codon, which has at least one gap/unknown/ambiguous nucleotide, will be treated as unknown codon character.",174.0
Using codon models,Beginner’s tutorial,2.0,15.0,"Note that the above command assumes the standard genetic code. If your sequences follow ‘The Invertebrate Mitochondrial Code’ (see the full list of supported genetic code here), then run:",175.0
Using codon models,Beginner’s tutorial,2.0,15.0,"iqtree -s coding_gene.phy -st CODON5 
",176.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"Binary, morphological and SNP data",177.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"Binary alignments contain sequences with characters 0 and 1, which can be in any common formats supported by IQ-TREE, for example, in PHYLIP format:",178.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"4 6
S1   010101
S2   110011
S3   0--100
S4   10--10
",179.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,Morphological alignments have an extended characeter alphabet of 0-9 and A-Z (for states 10-31). For example (PHYLIP format):,180.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"4 10
S1   0123401234
S2   03---20432
S3   3202-04--0
S4   4230120340
",181.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,IQ-TREE will automatically determine the sequence type and the alphabet size. To run IQ-TREE on such alignments:,182.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"iqtree -s morphology.phy
",183.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,or,184.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"iqtree -s morphology.phy -st MORPH
",185.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"IQ-TREE implements to two morphological ML models: MK and ORDERED. Morphological data typically do not have constant (uninformative) sites. In such cases, you should apply ascertainment bias correction model by e.g.:",186.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"iqtree -s morphology.phy -st MORPH -m MK+ASC
",187.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,You can again select the best-fit binary/morphological model:,188.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"iqtree -s morphology.phy -st MORPH
",189.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"For SNP data (DNA) that typically do not contain constant sites, you can explicitly tell the model to include ascertainment bias correction:",190.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"iqtree -s SNP_data.phy -m GTR+ASC
",191.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,You can explicitly tell model testing to only include +ASC model with:,192.0
"Binary, morphological and SNP data",Beginner’s tutorial,2.0,16.0,"iqtree -s SNP_data.phy -m MFP+ASC
",193.0
Assessing branch supports with ultrafast bootstrap approximation,Beginner’s tutorial,2.0,17.0,Assessing branch supports with ultrafast bootstrap approximation,194.0
Assessing branch supports with ultrafast bootstrap approximation,Beginner’s tutorial,2.0,17.0,"To overcome the computational burden required by the nonparametric bootstrap, IQ-TREE introduces an ultrafast bootstrap approximation (UFBoot) (Minh et al., 2013; Hoang et al., 2018) that is orders of magnitude faster than the standard procedure and provides relatively unbiased branch support values. Citation for UFBoot:",195.0
Assessing branch supports with ultrafast bootstrap approximation,Beginner’s tutorial,2.0,17.0,"D.T. Hoang, O. Chernomor, A. von Haeseler, B.Q. Minh, and L.S. Vinh (2018) UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol., 35:518–522. https://doi.org/10.1093/molbev/msx281",196.0
Assessing branch supports with ultrafast bootstrap approximation,Beginner’s tutorial,2.0,17.0,To run UFBoot:,197.0
Assessing branch supports with ultrafast bootstrap approximation,Beginner’s tutorial,2.0,17.0,"iqtree -s example.phy -m TIM2+I+G -B 1000
# for version 1.x change -B to -bb
",198.0
Assessing branch supports with ultrafast bootstrap approximation,Beginner’s tutorial,2.0,17.0,"-B specifies the number of bootstrap replicates where 1000 is the minimum number recommended. The section MAXIMUM LIKELIHOOD TREE in example.phy.iqtree shows a textual representation of the maximum likelihood tree with branch support values in percentage. The NEWICK format of the tree is printed to the file example.phy.treefile. In addition, IQ-TREE writes the following files:",199.0
Assessing branch supports with ultrafast bootstrap approximation,Beginner’s tutorial,2.0,17.0,"example.phy.contree: the consensus tree with assigned branch supports where branch lengths are optimized on the original alignment.example.phy.splits.nex: support values in percentage for all splits (bipartitions), computed as the occurence frequencies in the bootstrap trees. This file can be viewed with the program SplitsTree to explore the conflicting signals in the data. So it is more informative than consensus tree, e.g. you can see how highly supported the second best conflicting split is, which had no chance to enter the consensus tree.example.phy.splits (if using -wsplits option): This file contains the same information as example.phy.splits.nex but in star-dot format.",200.0
Assessing branch supports with ultrafast bootstrap approximation,Beginner’s tutorial,2.0,17.0,NOTE: UFBoot support values have a different interpretation to the standard bootstrap. Refer to FAQ: UFBoot support values interpretation for more information.,201.0
Reducing impact of severe model violations with UFBoot,Beginner’s tutorial,2.0,18.0,Reducing impact of severe model violations with UFBoot,202.0
Reducing impact of severe model violations with UFBoot,Beginner’s tutorial,2.0,18.0,Starting with IQ-TREE version 1.6 we provide a new option -bnni to reduce the risk of overestimating branch supports with UFBoot due to severe model violations. With this option UFBoot will further optimize each bootstrap tree using a hill-climbing nearest neighbor interchange (NNI) search based directly on the corresponding bootstrap alignment.,203.0
Reducing impact of severe model violations with UFBoot,Beginner’s tutorial,2.0,18.0,"Thus, if severe model violations are present in the data set at hand, users are advised to append -bnni to the regular UFBoot command:",204.0
Reducing impact of severe model violations with UFBoot,Beginner’s tutorial,2.0,18.0,"iqtree -s example.phy -m TIM2+I+G -B 1000 -bnni
# for version 1.x change -B to -bb
",205.0
Assessing branch supports with standard nonparametric bootstrap,Beginner’s tutorial,2.0,19.0,Assessing branch supports with standard nonparametric bootstrap,206.0
Assessing branch supports with standard nonparametric bootstrap,Beginner’s tutorial,2.0,19.0,The standard nonparametric bootstrap is invoked by the -b option:,207.0
Assessing branch supports with standard nonparametric bootstrap,Beginner’s tutorial,2.0,19.0,"iqtree -s example.phy -m TIM2+I+G -b 100
",208.0
Assessing branch supports with standard nonparametric bootstrap,Beginner’s tutorial,2.0,19.0,-b specifies the number of bootstrap replicates where 100 is the minimum recommended number. The output files are similar to those produced by the UFBoot procedure.,209.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,Assessing branch supports with single branch tests,210.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,"IQ-TREE provides an implementation of the SH-like approximate likelihood ratio test (Guindon et al., 2010). To perform this test, run:",211.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,"iqtree -s example.phy -m TIM2+I+G -alrt 1000
",212.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,-alrt specifies the number of bootstrap replicates for SH-aLRT where 1000 is the minimum number recommended.,213.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,"IQ-TREE also supports other tests such as the aBayes test (Anisimova et al., 2011) and the local bootstrap test (Adachi and Hasegawa, 1996b). See single branch tests for more details.",214.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,You can also perform both SH-aLRT and the ultrafast bootstrap within one single run:,215.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,"iqtree -s example.phy -m TIM2+I+G -alrt 1000 -B 1000
# for version 1.x change -B to -bb
",216.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,"The branches of the resulting .treefile will be assigned with both SH-aLRT and UFBoot support values, which are readable by any tree viewer program like FigTree, Dendroscope or ETE. You can also look at the textual tree figure in .iqtree file:",217.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,"NOTE: Tree is UNROOTED although outgroup taxon 'LngfishAu' is drawn at root
Numbers in parentheses are SH-aLRT support (%) / ultrafast bootstrap support (%)

+-------------LngfishAu
|
|       +--------------LngfishSA
+-------| (100/100)
|       +------------LngfishAf
|
|      +--------------------Frog
+------| (99.8/100)
       |                     +-----------------Turtle
       |                  +--| (85/72)
       |                  |  |    +------------------------Crocodile
       |                  |  +----| (96.5/97)
       |                  |       +------------------Bird
       |               +--| (39/51)
       |               |  +---------------------------Sphenodon
       |         +-----| (98.2/99)
       |         |     +-------------------------------Lizard
       +---------| (100/100)
                 |                   +--------------Human
                 |                +--| (92.3/93)
                 |                |  |  +------Seal
                 |                |  +--| (68.3/75)
                 |                |     |  +-----Cow
                 |                |     +--| (99.7/100)
                 |                |        +-------Whale
                 |           +----| (99.1/100)
                 |           |    |         +---Mouse
                 |           |    +---------| (100/100)
                 |           |              +------Rat
                 +-----------| (100/100)
                             |  +--------------Platypus
                             +--| (93/98)
                                +-----------Opossum
",218.0
Assessing branch supports with single branch tests,Beginner’s tutorial,2.0,20.0,"From this figure, the branching patterns within reptiles are poorly supported (e.g. Sphenodon with SH-aLRT: 39%, UFBoot: 51% and Turtle with SH-aLRT: 85%, UFBoot: 72%) as well as the phylogenetic position of Seal within mammals (SH-aLRT: 68.3%, UFBoot: 75%). Other branches appear to be well supported.",219.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,Utilizing multi-core CPUs,220.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,IQ-TREE can utilize multiple CPU cores to speed up the analysis. A complement option -T (or -nt for version 1.x) allows specifying the number of CPU cores to use. For example:,221.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,"iqtree -s example.phy -m TIM2+I+G -T 2
# for version 1.x change -T to -nt
",222.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,"Here, IQ-TREE will use 2 CPU cores to perform the analysis.",223.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,Note that the parallel efficiency is only good for long alignments. A good practice is to use -T AUTO to determine the best number of cores:,224.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,"iqtree -s example.phy -m TIM2+I+G -T AUTO
# for version 1.x change -T to -nt
",225.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,Then while running IQ-TREE may print something like this on to the screen:,226.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,"Measuring multi-threading efficiency up to 8 CPU cores
Threads: 1 / Time: 8.001 sec / Speedup: 1.000 / Efficiency: 100% / LogL: -22217
Threads: 2 / Time: 4.346 sec / Speedup: 1.841 / Efficiency: 92% / LogL: -22217
Threads: 3 / Time: 3.381 sec / Speedup: 2.367 / Efficiency: 79% / LogL: -22217
Threads: 4 / Time: 4.385 sec / Speedup: 1.825 / Efficiency: 46% / LogL: -22217
BEST NUMBER OF THREADS: 3
",227.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,"Therefore, I would only use 3 cores for this example data. For later analysis with your same data set, you can stick to the determined number.",228.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,Depending on the compute system it might be required to set an upper limit of CPU cores that can automatically be assigned. Use the -ntmax option to do so. For instance,229.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,"iqtree -s example.phy -m TIM2+I+G -T AUTO -ntmax 8
# for version 1.x change -T to -nt
",230.0
Utilizing multi-core CPUs,Beginner’s tutorial,2.0,21.0,"does the same as above, but only allows to use up to 8 CPU cores. By default all cores of the current machine would be used as maximum.",231.0
Where to go from here?,Beginner’s tutorial,2.0,22.0,Where to go from here?,232.0
Where to go from here?,Beginner’s tutorial,2.0,22.0,"Once confident enough you can go on with a more advanced tutorial, which covers topics like phylogenomic (multi-gene) analyses using partition models or mixture models.",233.0
General requirements,Compilation guide,3.0,23.0,General requirements,234.0
General requirements,Compilation guide,3.0,23.0,"A C++ compiler such as GCC (version >= 4.8), Clang, MS Visual Studio and Intel C++ compiler.CMake version >= 2.8.10.Boost library for IQ-TREE version 2. Boost library is typically available under Linux. Under MacOS you use Homebrew and run brew install boost to install the Boost library. By default IQ-TREE will detect the path to the installed Boost library.Eigen3 library (for IQ-TREE version >= 1.6). Under MacOS you use Homebrew and run brew install eigen to install the Boost library. By default IQ-TREE will detect the path to the installed Eigen3 library. If this failed, you have to manually specify -DEIGEN3_INCLUDE_DIR=<installed_eigen3_dir> to the cmake command (see below).OpenMP library, which is used to compile the multicore version. This should typically be the case with gcc under Linux. Under MacOS you use Homebrew and run brew install libomp to install the OpenMP library.(Optional) Install git if you want to clone source code from IQ-TREE GitHub repository.",235.0
Downloading source code,Compilation guide,3.0,24.0,Downloading source code,236.0
Downloading source code,Compilation guide,3.0,24.0,Choose the source code (zip or tar.gz) of the IQ-TREE release you want to use from:,237.0
Downloading source code,Compilation guide,3.0,24.0,https://github.com/iqtree/iqtree2/releases,238.0
Downloading source code,Compilation guide,3.0,24.0,For IQ-TREE version 1 please use:,239.0
Downloading source code,Compilation guide,3.0,24.0,https://github.com/Cibiv/IQ-TREE/releases/,240.0
Downloading source code,Compilation guide,3.0,24.0,"Alternatively, if you have git installed, you can also clone the source code from GitHub with:",241.0
Downloading source code,Compilation guide,3.0,24.0,"git clone https://github.com/iqtree/iqtree2.git
",242.0
Downloading source code,Compilation guide,3.0,24.0,For IQ-TREE version 1 please clone:,243.0
Downloading source code,Compilation guide,3.0,24.0,"git clone https://github.com/Cibiv/IQ-TREE.git
",244.0
Downloading source code,Compilation guide,3.0,24.0,"Please find below separate compilation guide fors Linux, Mac OS X, and Windows as well as for 32-bit version or for MPI version.",245.0
Compiling under Linux,Compilation guide,3.0,25.0,Compiling under Linux,246.0
Compiling under Linux,Compilation guide,3.0,25.0,TIP: Ready made IQ-TREE packages are provided for Debian and Arch Linux (AUR).,247.0
Compiling under Linux,Compilation guide,3.0,25.0,"Open a Terminal.Change to the source code folder: cd PATH_TO_EXTRACTED_SOURCE_CODE
Create a subfolder, say, build and go into this subfolder: mkdir build
 cd build
Configure source code with CMake: cmake ..
If cmake failed with message about Eigen3 not found, then install Eigen3 library and run cmake again. If this still failed, you have to manually specify the downloaded directory of Eigen3 with: cmake -DEIGEN3_INCLUDE_DIR=<eigen3_dir> ..
Compile source code with make: make -j
j option tells it to use all CPU cores to speed up the compilation. Without this option, make uses only one core, which might be slow.",248.0
Compiling under Linux,Compilation guide,3.0,25.0,This creates an executable iqtree2 (iqtree for version 1). It can be copied to your system search path so that IQ-TREE can be called from the Terminal simply with the command line iqtree2.,249.0
Compiling under Linux,Compilation guide,3.0,25.0,"TIP: The above guide typically compiles IQ-TREE with gcc. If you have Clang installed and want to compile with Clang, the compilation will be similar to Mac OS X like below.",250.0
Compiling under Mac OS X,Compilation guide,3.0,26.0,Compiling under Mac OS X,251.0
Compiling under Mac OS X,Compilation guide,3.0,26.0,TIP: A ready made IQ-TREE package is provided by * Homebrew by simply running brew install homebrew/science/iqtree2.,252.0
Compiling under Mac OS X,Compilation guide,3.0,26.0,"Make sure that Clang compiler is installed, which is typically the case if you installed Xcode and the associated command line tools.If you installed cmake with HomebrewFind the path to the CMake executable, which is typically /Applications/CMake.app/Contents/bin/cmake. For later convenience, please create a symbolic link cmake to this cmake executable, so that cmake can be invoked from the Terminal by simply entering cmake.",253.0
Compiling under Mac OS X,Compilation guide,3.0,26.0,"The steps to compile IQ-TREE are similar to Linux (see above), except that you need to specify clang as compiler when configuring source code with CMake (step 4):",254.0
Compiling under Mac OS X,Compilation guide,3.0,26.0,"cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ ..
",255.0
Compiling under Mac OS X,Compilation guide,3.0,26.0,(please change cmake to absolute path like /Applications/CMake.app/Contents/bin/cmake).,256.0
Compiling under Mac OS X,Compilation guide,3.0,26.0,"To compile the multicore version, the default installed Clang unfortunately does not support OpenMP (which might change in the near future). However, the latest Clang 3.7 supports OpenMP, which can be downloaded from http://clang.llvm.org. After that you can run CMake with:",257.0
Compiling under Mac OS X,Compilation guide,3.0,26.0,"cmake -DIQTREE_FLAGS=omp -DCMAKE_C_COMPILER=clang-3.7 -DCMAKE_CXX_COMPILER=clang++-3.7 ..
",258.0
Compiling under Mac OS X,Compilation guide,3.0,26.0,(assuming that clang-3.7 and clang++-3.7 points to the installed Clang 3.7).,259.0
Compiling under Windows,Compilation guide,3.0,27.0,Compiling under Windows,260.0
Compiling under Windows,Compilation guide,3.0,27.0,Please first install TDM-GCC (a GCC version for Windows) from http://tdm-gcc.tdragon.net.Then install Clang for Windows from http://clang.llvm.org.,261.0
Compiling under Windows,Compilation guide,3.0,27.0,"WARNING: Although IQ-TREE can also be built with TDM-GCC, the executable does not run properly due to stack alignment issue and the libgomp library causes downgraded performance for the OpenMP version. Thus, it is recommended to compile IQ-TREE with Clang.",262.0
Compiling under Windows,Compilation guide,3.0,27.0,"Open Command Prompt.Change to the source code folder: cd PATH_TO_EXTRACTED_SOURCE_CODE
Please note that Windows uses back-slash (\) instead of slash (/) as path name separator.Create a subfolder, say, build and go into this subfolder: mkdir build
 cd build
Configure source code with CMake: cmake -G ""MinGW Makefiles"" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_FLAGS=--target=x86_64-pc-windows-gnu -DCMAKE_CXX_FLAGS=--target=x86_64-pc-windows-gnu -DCMAKE_MAKE_PROGRAM=mingw32-make ..
To build the multicore version please add -DIQTREE_FLAGS=omp to the cmake command. Note that the make program shipped with TDM-GCC is called mingw32-make, thus needed to specify like above. You can also copy mingw32-make to make to simplify this step.Compile source code with: mingw32-make
or mingw32-make -j4
to use 4 cores for compilation instead of only 1.",263.0
Compiling 32-bit version,Compilation guide,3.0,28.0,Compiling 32-bit version,264.0
Compiling 32-bit version,Compilation guide,3.0,28.0,"NOTE: Typically a 64-bit IQ-TREE version is built and recommended! The 32-bit version has several restriction like maximal RAM usage of 2GB and no AVX support, thus not suitable to analyze large data sets.",265.0
Compiling 32-bit version,Compilation guide,3.0,28.0,"To compile the 32-bit version instead, simply add m32 into IQTREE_FLAGS of the cmake command:",266.0
Compiling 32-bit version,Compilation guide,3.0,28.0,"cmake -DIQTREE_FLAGS=m32 .. 
",267.0
Compiling 32-bit version,Compilation guide,3.0,28.0,"To build the 32-bit multicore version, run:",268.0
Compiling 32-bit version,Compilation guide,3.0,28.0,"cmake -DIQTREE_FLAGS=omp-m32 ..
",269.0
Compiling 32-bit version,Compilation guide,3.0,28.0,For Windows you need to change Clang target with:,270.0
Compiling 32-bit version,Compilation guide,3.0,28.0,"cmake -G ""MinGW Makefiles"" -DCMAKE_C_FLAGS=--target=i686-pc-windows-gnu -DCMAKE_CXX_FLAGS=--target=i686-pc-windows-gnu -DCMAKE_MAKE_PROGRAM=mingw32-make ..
",271.0
Compiling MPI version,Compilation guide,3.0,29.0,Compiling MPI version,272.0
Compiling MPI version,Compilation guide,3.0,29.0,Requirements:,273.0
Compiling MPI version,Compilation guide,3.0,29.0,"Download source code of IQ-TREE version 1.5.1 or later.Install an MPI library (e.g., OpenMPI) if not available in your system. For Mac OS X, the easiest is to install Homebrew package manager, and then install OpenMPI library from the command line with:  brew install openmpi
",274.0
Compiling MPI version,Compilation guide,3.0,29.0,Then simply run CMake and make by:,275.0
Compiling MPI version,Compilation guide,3.0,29.0,"cmake -DIQTREE_FLAGS=mpi ..
make -j4
",276.0
Compiling MPI version,Compilation guide,3.0,29.0,"IQ-TREE will automatically detect and setup the MPI paths and library. Alternatively, you can also use the MPI C/C++ compiler wrappers (typically named mpicc and mpicxx), for example:",277.0
Compiling MPI version,Compilation guide,3.0,29.0,"cmake -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx ..
make -j4
",278.0
Compiling MPI version,Compilation guide,3.0,29.0,The executable is named iqtree-mpi. One can then run mpirun to start the MPI version with e.g. 2 processes:,279.0
Compiling MPI version,Compilation guide,3.0,29.0,"mpirun -np 2 iqtree-mpi -s alignment ...
",280.0
Compiling MPI version,Compilation guide,3.0,29.0,"If you want to compile the hybrid MPI/OpenMP version, simply run:",281.0
Compiling MPI version,Compilation guide,3.0,29.0,"cmake -DIQTREE_FLAGS=omp-mpi ..
make -j4
",282.0
Compiling MPI version,Compilation guide,3.0,29.0,"The resulting executable is then named iqtree-mpi (iqtree-omp-mpi for IQ-TREE versions <= 1.5.X). This can be used to start an MPI run with e.g. 4 processes and 2 cores each (i.e., a total of 8 cores will be used):",283.0
Compiling MPI version,Compilation guide,3.0,29.0,"# For IQ-TREE version <= 1.5.X
mpirun -np 4 iqtree-omp-mpi -nt 2 -s alignment ...

# For IQ-TREE version >= 1.6.0
mpirun -np 4 iqtree-mpi -nt 2 -s alignment ...
",284.0
Compiling MPI version,Compilation guide,3.0,29.0,"NOTE: Please be aware that OpenMP and OpenMPI are different! OpenMP is the standard to implement shared-memory multithreading program, that we use to provide the multicore IQ-TREE version. Whereas OpenMPI is a message passing interface (MPI) library for distributed memory parallel system, that is used to compile iqtree-mpi. Thus, one cannot run iqtree with mpirun!",285.0
Compiling Xeon Phi Knights Landing version,Compilation guide,3.0,30.0,Compiling Xeon Phi Knights Landing version,286.0
Compiling Xeon Phi Knights Landing version,Compilation guide,3.0,30.0,"Starting with version 1.6, IQ-TREE supports Xeon Phi Knights Landing (AVX-512 instruction set). To build this version the following requirements must be met:",287.0
Compiling Xeon Phi Knights Landing version,Compilation guide,3.0,30.0,"A C++ compiler, which supports AVX-512 instruction set: GCC 5.1, Clang 3.7, or Intel compiler 14.0.",288.0
Compiling Xeon Phi Knights Landing version,Compilation guide,3.0,30.0,The compilation steps are the same except that you need to add -DIQTREE_FLAGS=KNL to the cmake command:,289.0
Compiling Xeon Phi Knights Landing version,Compilation guide,3.0,30.0,"cmake -DIQTREE_FLAGS=KNL ..
make -j4
",290.0
Compiling Xeon Phi Knights Landing version,Compilation guide,3.0,30.0,"The compiled iqtree binary will automatically choose the proper computational kernel for the running computer. Thus, it works as normal and will speed up on Knights Landing CPUs. Run ./iqtree to make sure that the binary was compiled correctly:",291.0
Compiling Xeon Phi Knights Landing version,Compilation guide,3.0,30.0,"IQ-TREE multicore Xeon Phi KNL version 1.6.beta for Linux 64-bit built May  7 2017
",292.0
About precompiled binaries,Compilation guide,3.0,31.0,About precompiled binaries,293.0
About precompiled binaries,Compilation guide,3.0,31.0,"To provide the pre-compiled IQ-TREE binaries at http://www.iqtree.org, we used Clang 3.9.0 for Windows and Clang 4.0 for Linux and macOS. We recommend to use Clang instead of GCC as Clang-compiled binaries run about 5-10% faster than GCC-compiled ones.",294.0
About precompiled binaries,Compilation guide,3.0,31.0,Linux binaries were statically compiled with Ubuntu 16.4 using libc++ library. The static-linked binaries will thus run on most Linux distributions. The CMake command is (assuming that clang-4 and clang++-4 point to the installed Clang):,295.0
About precompiled binaries,Compilation guide,3.0,31.0,"# 64-bit version
cmake -DIQTREE_FLAGS=static-libcxx -DCMAKE_C_COMPILER=clang-4 -DCMAKE_CXX_COMPILER=clang++-4 <source_dir>

# 32-bit version
cmake -DIQTREE_FLAGS=static-m32 -DCMAKE_C_COMPILER=clang-4 -DCMAKE_CXX_COMPILER=clang++-4 <source_dir>
",296.0
About precompiled binaries,Compilation guide,3.0,31.0,"macOS binaries were compiled under macOS Sierra, but the binaries are backward compatible with Mac OS X 10.7 Lion:",297.0
About precompiled binaries,Compilation guide,3.0,31.0,"cmake -DCMAKE_C_COMPILER=clang-4 -DCMAKE_CXX_COMPILER=clang++-4 <source_dir>
",298.0
About precompiled binaries,Compilation guide,3.0,31.0,"Windows binaries were statically compiled under Windows 7 using Clang 3.9.0 in combination with TDM-GCC 5.1.0, which provides the neccessary libraries for Clang.",299.0
About precompiled binaries,Compilation guide,3.0,31.0,"# 64-bit version
cmake -G ""MinGW Makefiles"" -DIQTREE_FLAGS=static -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_FLAGS=--target=x86_64-pc-windows-gnu -DCMAKE_CXX_FLAGS=--target=x86_64-pc-windows-gnu -DCMAKE_MAKE_PROGRAM=mingw32-make ..

#32-bit version
cmake -G ""MinGW Makefiles"" -DIQTREE_FLAGS=static -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_FLAGS=--target=i686-pc-windows-gnu -DCMAKE_CXX_FLAGS=--target=i686-pc-windows-gnu -DCMAKE_MAKE_PROGRAM=mingw32-make ..
",300.0
Setup an Xcode project in MacOS,Compilation guide,3.0,32.0,Setup an Xcode project in MacOS,301.0
Setup an Xcode project in MacOS,Compilation guide,3.0,32.0,"Many developers in MacOS use Xcode to develop the code. To generate an XCode project for IQ-TREE, you need to run:",302.0
Setup an Xcode project in MacOS,Compilation guide,3.0,32.0,"mkdir build-xcode
cd build-xcode
cmake -G Xcode <IQTREE_SOURCE_DIR>
",303.0
Setup an Xcode project in MacOS,Compilation guide,3.0,32.0,"This will generate a a subfolder build-xcode/iqtree.xcodeproj, which you can open in Xcode now.",304.0
Partition models,Complex models,4.0,33.0,Partition models,305.0
Partition models,Complex models,4.0,33.0,"Partition models are intended for phylogenomic (e.g., multi-gene) alignments, which allow each partition to have its own substitution models and evolutionary rates. IQ-TREE supports three types of partition models:",306.0
Partition models,Complex models,4.0,33.0,"Edge-equal partition model with equal branch lengths: All partitions share the same set of branch lengths.Edge-proportional partition model with proportional branch lengths: Like above but each partition has its own partition specific rate, that rescales all its branch lengths. This model accomodates different evolutionary rates between partitions (e.g. between 1st, 2nd, and 3rd codon positions).Edge-unlinked partition model: Each partition has its own set of branch lengths. This is the most parameter-rich partition model, that accounts for e.g., heterotachy (Lopez et al., 2002).",307.0
Partition models,Complex models,4.0,33.0,"TIP: The edge-equal partition model is typically unrealistic as it does not account for different evolutionary speeds between partitions, whereas the edge-unlinked partition model can be overfitting if there are many short partitions. Therefore, the edge-proportional partition model is recommended for a typical analysis.",308.0
Partition models,Complex models,4.0,33.0,Partition file format,309.0
Partition models,Complex models,4.0,33.0,To apply partition models users must first prepare a partition file in RAxML-style or NEXUS format. The RAxML-style is defined by the RAxML software and may look like:,310.0
Partition models,Complex models,4.0,33.0,"DNA, part1 = 1-100
DNA, part2 = 101-384
",311.0
Partition models,Complex models,4.0,33.0,"This means two DNA partitions of an alignment, where one groups aligment sites 1-100 into part1 and 101-384 into part2.",312.0
Partition models,Complex models,4.0,33.0,"The NEXUS format is more complex but more powerful. For example, the above partition scheme may look like:",313.0
Partition models,Complex models,4.0,33.0,"#nexus
begin sets;
    charset part1 = 1-100;
    charset part2 = 101-384;
    charpartition mine = HKY+G:part1, GTR+I+G:part2;
end;
",314.0
Partition models,Complex models,4.0,33.0,"The first line contains the keyword #nexus to indicate a NEXUS file. It has a sets block, which contains two character sets (charset command) named part1 and part2. Furthermore, with the charpartition command we set the model HKY+G for part1 and GTR+I+G for part2. This is not possible with the RAxML-style format (i.e., one cannot specify +G rate model for one partition and +I+G rate model for the other partition).",315.0
Partition models,Complex models,4.0,33.0,TIP: IQ-TREE fully supports mixed rate heterogeneity types types between partitions (see above example).,316.0
Partition models,Complex models,4.0,33.0,"One can also specify non-consecutive sites of a partition, e.g. under RAxML-style format:",317.0
Partition models,Complex models,4.0,33.0,"DNA, part1 = 1-100, 250-384
DNA, part2 = 101-249\3, 102-249\3
DNA, part3 = 103-249\3
",318.0
Partition models,Complex models,4.0,33.0,or under NEXUS format:,319.0
Partition models,Complex models,4.0,33.0,"#nexus
begin sets;
    charset part1 = 1-100 250-384;
    charset part2 = 101-249\3 102-249\3;
    charset part3 = 103-249\3;
end;
",320.0
Partition models,Complex models,4.0,33.0,"This means, part2 contains sites 101, 102, 104, 105, 107, …, 246, 248, 249; whereas part3 contains sites 103, 106, …, 247. This is useful to specify partitions corresponding to 1st, 2nd and 3rd codon positions.",321.0
Partition models,Complex models,4.0,33.0,"Moreover, the NEXUS file allows each partition to come from a separate alignment file (not possible under RAxML-style format) with e.g.:",322.0
Partition models,Complex models,4.0,33.0,"#nexus
begin sets;
    charset part1 = aln1.phy: 1-100\3 201-300;
    charset part2 = aln1.phy: 101-200;
    charset part3 = aln2.phy: *;
    charpartition mine = HKY:part1, GTR+G:part2, WAG+I+G:part3;
end;
",323.0
Partition models,Complex models,4.0,33.0,"Here, part1 and part2 correspond to sub-alignments of aln1.phy file and part3 is the entire alignment file aln2.phy. Note that aln2.phy is a protein alignment in this example.",324.0
Partition models,Complex models,4.0,33.0,TIP: IQ-TREE fully supports mixed data types between partitions.,325.0
Partition models,Complex models,4.0,33.0,"If you want to specify codon model for a partition, use the CODON keyword (otherwise, the partition may be detected as DNA):",326.0
Partition models,Complex models,4.0,33.0,"#nexus
begin sets;
    charset part1 = aln1.phy:CODON, 1-300;
    charset part2 = aln1.phy: 301-400;
    charset part3 = aln2.phy: *;
    charpartition mine = GY:part1, GTR+G:part2, WAG+I+G:part3;
end;
",327.0
Partition models,Complex models,4.0,33.0,"Note that this assumes part1 has standard genetic code. If not, append CODON with the right genetic code ID.",328.0
Partition models,Complex models,4.0,33.0,Partitioned analysis,329.0
Partition models,Complex models,4.0,33.0,"Having prepared a partition file, one is ready to start a partitioned analysis with -q (edge-equal), -spp (edge-proportional) or -sp (edge-unlinked) option. See this tutorial for more details.",330.0
Mixture models,Complex models,4.0,34.0,Mixture models,331.0
Mixture models,Complex models,4.0,34.0,What is the difference between partition and mixture models?,332.0
Mixture models,Complex models,4.0,34.0,"Mixture models, like partition models, allow more than one substitution model along the sequences. However, while a partition model assigns each alignment site a given specific model, mixture models do not need this information. A mixture model will compute for each site its probability (or weight) of belonging to each of the mixture classes (also called categories or components). Since the site-to-class assignment is unknown, the site likelihood under mixture models is the weighted sum of site likelihoods per mixture class.",333.0
Mixture models,Complex models,4.0,34.0,"For example, the discrete Gamma rate heterogeneity is a simple mixture model type. It has several rate categories with equal weight. IQ-TREE also supports a number of predefined protein mixture models such as the profile mixture models C10 to C60 (The ML variants of Bayesian CAT models).",334.0
Mixture models,Complex models,4.0,34.0,"Here, we discuss several possibilities to define new mixture models in IQ-TREE.",335.0
Mixture models,Complex models,4.0,34.0,Defining mixture models,336.0
Mixture models,Complex models,4.0,34.0,"To start with, the following command:",337.0
Mixture models,Complex models,4.0,34.0,"iqtree -s example.phy -m ""MIX{JC,HKY}""
",338.0
Mixture models,Complex models,4.0,34.0,"specifies a mixture model (via the MIX keyword in the model string) with two components. The components (1) JC model, and (2) HKY model, are given in curly brackets and separated with a comma. IQ-TREE will then estimate the parameters of both mixture components as well as their weights: the proportion of sites belonging to each component.",339.0
Mixture models,Complex models,4.0,34.0,"NOTE: Do not forget the double-quotes around model string! They prevent interpretation of the curly brackets by the command line shell, i.e., MIX{JC,HKY} would otherwise be interpreted as MIXJC MIXHKY.",340.0
Mixture models,Complex models,4.0,34.0,"Mixture models can be combined with rate heterogeneity, e.g.:",341.0
Mixture models,Complex models,4.0,34.0,"iqtree -s example.phy -m ""MIX{JC,HKY}+G4""
",342.0
Mixture models,Complex models,4.0,34.0,"Here, we specify two mixture components and four Gamma rate categories. Effectively, this means that there are eight mixture components. Each site has a probability belonging to either JC or HKY and to one of the four rate categories.",343.0
Mixture models,Complex models,4.0,34.0,Profile mixture models,344.0
Mixture models,Complex models,4.0,34.0,"Sometimes one only wants to model the changes in nucleotide or amino-acid frequencies along the sequences while keeping the substitution rate matrix the same. This can be specified in IQ-TREE via FMIX{...} model syntax. For convenience the mixture components can be defined in a NEXUS file like this (example corresponds to the CF4 model of (Wang et al., 2008)):",345.0
Mixture models,Complex models,4.0,34.0,"#nexus
begin models;
    frequency Fclass1 = 0.02549352 0.01296012 0.005545202 0.006005566 0.01002193 0.01112289 0.008811948 0.001796161 0.004312188 0.2108274 0.2730413 0.01335451 0.07862202 0.03859909 0.005058205 0.008209453 0.03210019 0.002668138 0.01379098 0.2376598;
    frequency Fclass2 = 0.09596966 0.008786096 0.02805857 0.01880183 0.005026264 0.006454635 0.01582725 0.7215719 0.003379354 0.002257725 0.003013483 0.01343441 0.001511657 0.002107865 0.006751404 0.04798539 0.01141559 0.000523736 0.002188483 0.004934972;
    frequency Fclass3 = 0.01726065 0.005467988 0.01092937 0.3627871 0.001046402 0.01984758 0.5149206 0.004145081 0.002563289 0.002955213 0.005286931 0.01558693 0.002693098 0.002075771 0.003006167 0.01263069 0.01082144 0.000253451 0.001144787 0.004573568;
    frequency Fclass4 = 0.1263139 0.09564027 0.07050061 0.03316681 0.02095119 0.05473468 0.02790523 0.009007538 0.03441334 0.005855319 0.008061884 0.1078084 0.009019514 0.05018693 0.07948 0.09447839 0.09258897 0.01390669 0.05367769 0.01230413;

    frequency CF4model = FMIX{empirical,Fclass1,Fclass2,Fclass3,Fclass4};
end;
",346.0
Mixture models,Complex models,4.0,34.0,NOTE: The amino-acid order in this file is: A R N D C Q E G H I L K M F P S T W Y V.,347.0
Mixture models,Complex models,4.0,34.0,"Here, the NEXUS file contains a models block to define new models. More explicitly, we define four AA profiles Fclass1 to Fclass4, each containing 20 AA frequencies. Then, the frequency mixture is defined with",348.0
Mixture models,Complex models,4.0,34.0,"FMIX{empirical,Fclass1,Fclass2,Fclass3,Fclass4}
",349.0
Mixture models,Complex models,4.0,34.0,"This means, we have five components: the first corresponds to empirical AA frequencies to be inferred from the data and the remaining four components are specified in this NEXUS file. Please save this to a file, say, mymodels.nex. One can now start the analysis with:",350.0
Mixture models,Complex models,4.0,34.0,"iqtree -s some_protein.aln -mdef mymodels.nex -m JTT+CF4model+G
",351.0
Mixture models,Complex models,4.0,34.0,"The -mdef option specifies the NEXUS file containing user-defined models. Here, the JTT matrix is applied for all alignment sites and one varies the AA profiles along the alignment. One can use the NEXUS syntax to define all other profile mixture models such as C10 to C60.",352.0
Mixture models,Complex models,4.0,34.0,NEXUS model file,353.0
Mixture models,Complex models,4.0,34.0,"In fact, IQ-TREE uses this NEXUS model file internally to define all protein mixture models. In addition to defining state frequencies, one can specify the entire model with rate matrix and state frequencies together. For example, the LG4M model (Le et al., 2012) can be defined by:",354.0
Mixture models,Complex models,4.0,34.0,"#nexus
begin models;
    model LG4M1 =
        0.269343
        0.254612 0.150988
        0.236821 0.031863 0.659648
        ....;
    ....
    model LG4M4 = ....;
    
    model LG4M = MIX{LG4M1,LG4M2,LG4M3,LG4M4}*G4;
end;
",355.0
Mixture models,Complex models,4.0,34.0,"Here, we first define the four matrices LG4M1, LG4M2, LG4M3 and LG4M4 in PAML format (see protein models). Then LG4M is defined as mixture model with these four components fused with Gamma rate heterogeneity (via *G4 syntax instead of +G4). This means that, in total, we have 4 mixture components instead of 16. The first component LG4M1 is rescaled by the rate of the lowest Gamma rate category. The fourth component LG4M4 corresponds to the highest rate.",356.0
Mixture models,Complex models,4.0,34.0,Note that both frequency and model commands can be embedded into a single model file.,357.0
Site-specific frequency models,Complex models,4.0,35.0,Site-specific frequency models,358.0
Site-specific frequency models,Complex models,4.0,35.0,"Starting with version 1.5.0, IQ-TREE provides a new posterior mean site frequency (PMSF) model as a rapid approximation to the time and memory consuming profile mixture models C10 to C60 (Le et al., 2008a; a variant of PhyloBayes’ CAT model). The PMSF are the amino-acid profiles for each alignment site computed from an input mixture model and a guide tree. The PMSF model is much faster and requires much less RAM than C10 to C60 (see table below), regardless of the number of mixture classes. Our extensive simulations and empirical phylogenomic data analyses demonstrate that the PMSF models can effectively ameliorate long branch attraction artefacts.",359.0
Site-specific frequency models,Complex models,4.0,35.0,If you use this model in a publication please cite:,360.0
Site-specific frequency models,Complex models,4.0,35.0,"H.C. Wang, B.Q. Minh, S. Susko and A.J. Roger (2018) Modeling site heterogeneity with posterior mean site frequency profiles accelerates accurate phylogenomic estimation. Syst. Biol., 67:216-235. https://doi.org/10.1093/sysbio/syx068",361.0
Site-specific frequency models,Complex models,4.0,35.0,"Here is an example of computation time and RAM usage for an Obazoa data set (68 sequences, 43615 amino-acid sites) from Brown et al. (2013) using 16 CPU cores:",362.0
Site-specific frequency models,Complex models,4.0,35.0,ModelsCPU timeWall-clock timeRAM usageLG+F+G43h:38m:23s3h:37m:23s1.8 GBLG+C20+F+G584h:25m:29s46h:39m:06s38.8 GBLG+C60+F+G1502h:25m:31s125h:15m:29s112.8 GBLG+PMSF+G73h:30m:37s5h:7m:27s2.2 GB,363.0
Site-specific frequency models,Complex models,4.0,35.0,Example usages,364.0
Site-specific frequency models,Complex models,4.0,35.0,"To use the PMSF model you have to provide a guide tree, which, for example, can be obtained by a quicker analysis under the simpler LG+F+G model. The guide tree can then be specified via -ft option, for example:",365.0
Site-specific frequency models,Complex models,4.0,35.0,"iqtree -s <alignment> -m LG+C20+F+G -ft <guide_tree>
",366.0
Site-specific frequency models,Complex models,4.0,35.0,"Here, IQ-TREE will perform two phases. In the first phase, IQ-TREE estimates mixture model parameters given the guide tree and then infers the site-specific frequency profile (printed to .sitefreq file). In the second phase, IQ-TREE will conduct typical analysis using the inferred frequency model instead of the mixture model to save RAM and running time. Note that without -ft option, IQ-TREE will conduct the analysis under the specified mixture model.",367.0
Site-specific frequency models,Complex models,4.0,35.0,"The PMSF model allows one, for the first time, to conduct nonparametric bootstrap under such complex models, for example (with 100 bootstrap replicates):",368.0
Site-specific frequency models,Complex models,4.0,35.0,"iqtree -s <alignment> -m LG+C20+F+G -ft <guide_tree> -b 100
",369.0
Site-specific frequency models,Complex models,4.0,35.0,"Please note that the first phase still consumes as much RAM as the mixture model. To overcome this, you can perform the first phase in a high-memory server and the second phase in a normal PC as follows:",370.0
Site-specific frequency models,Complex models,4.0,35.0,"iqtree -s <alignment> -m LG+C20+F+G -ft <guide_tree> -n 0
",371.0
Site-specific frequency models,Complex models,4.0,35.0,This will stop the analysis after the first phase and also write a .sitefreq file. You can now copy this .sitefreq file to another low-memory machine and run with the same alignment:,372.0
Site-specific frequency models,Complex models,4.0,35.0,"iqtree -s <alignment> -m LG+C20+F+G -fs <file.sitefreq> -b 100
",373.0
Site-specific frequency models,Complex models,4.0,35.0,This will omit the first phase and thus need much less RAM.,374.0
Site-specific frequency models,Complex models,4.0,35.0,"Finally, note that for long (phylogenomic) alignments you can utilize the multicore IQ-TREE version to further save the computing times with, say, 24 cores by:",375.0
Site-specific frequency models,Complex models,4.0,35.0,"# For IQ-TREE version <= 1.5.X
iqtree-omp -nt 24 -s <alignment> -m LG+C20+F+G -fs <file.sitefreq>

# For IQ-TREE version >= 1.6.0
iqtree -nt 24 -s <alignment> -m LG+C20+F+G -fs <file.sitefreq>
",376.0
Site-specific frequency models,Complex models,4.0,35.0,See also the list of relevant command line options.,377.0
Heterotachy models,Complex models,4.0,36.0,Heterotachy models,378.0
Heterotachy models,Complex models,4.0,36.0,"Sequence data that have evolved under heterotachy, i.e., rate variation across sites and lineages (Lopez, Casane, and Philippe, 2002), are known to mislead phylogenetic inference (Kolaczkowski and Thornton, 2004). To address this issue we introduce the General Heterogeneous evolution On a Single Topology (GHOST) model. More specifically, GHOST is an edge-unlinked mixture model consisting of several site classes, each having a separate set of model parameters and edge lengths on the same tree topology. Thus, GHOST naturally accounts for heterotachous evolution. In contrast to an edge-unlinked partition model, the GHOST model does not require the a priori data partitioning, a possible source of model misspecification.",379.0
Heterotachy models,Complex models,4.0,36.0,"Extensive simulations show that the GHOST model can accurately recover the tree topology, branch lengths, substitution rate and base frequency parameters from heterotachously-evolved sequences. Moreover, we compare the GHOST model to the partition model and show that, owing to the minimization of model constraints, the GHOST model is able to offer unique biological insights when applied to empirical data.",380.0
Heterotachy models,Complex models,4.0,36.0,If you use this model in a publication please cite:,381.0
Heterotachy models,Complex models,4.0,36.0,"S.M. Crotty, B.Q. Minh, N.G. Bean, B.R. Holland, J. Tuke, L.S. Jermiin and A. von Haeseler (2019) GHOST: Recovering historical signal from heterotachously-evolved sequence alignments. Syst. Biol., in press. https://doi.org/10.1093/sysbio/syz051",382.0
Heterotachy models,Complex models,4.0,36.0,Quick usages,383.0
Heterotachy models,Complex models,4.0,36.0,"Make sure that you have IQ-TREE version 1.6.0 or later. The GHOST model with k mixture classes is executed by adding +Hk to the model option (-m). For example if one wants to fit a GHOST model with 4 classes in conjunction with the GTR model of DNA evolution to sequences contained in data.fst, one would use the following command:",384.0
Heterotachy models,Complex models,4.0,36.0,"iqtree -s data.fst -m GTR+H4
",385.0
Heterotachy models,Complex models,4.0,36.0,"By default the above command will link GTR parameters across all classes. If you want to unlink GTR parameters, so that IQ-TREE estimates them separately for each class, replace +H4 by *H4:",386.0
Heterotachy models,Complex models,4.0,36.0,"iqtree -s data.fst -m GTR*H4
",387.0
Heterotachy models,Complex models,4.0,36.0,Note that this infers one set of empirical base frequencies and apply those to all classes. If one wishes to infer separate base frequencies for each class then the +FO option is required:,388.0
Heterotachy models,Complex models,4.0,36.0,"iqtree -s data.fst -m GTR+FO*H4
",389.0
Heterotachy models,Complex models,4.0,36.0,The -wspm option will generate a .siteprob output file. This contains the probability of each site belonging to each class:,390.0
Heterotachy models,Complex models,4.0,36.0,"iqtree -s data.fst -m GTR+FO*H4 -wspm
",391.0
Inferring species tree,Concordance Factor,5.0,37.0,Inferring species tree,392.0
Inferring species tree,Concordance Factor,5.0,37.0,"First, you need to infer a reference tree (e.g. a species tree), on which the concordance factors will be annotated. The species tree can be reconstructed by a concatenation/supermatrix approach or a coalescent/reconciliation/supertree approach. Here, we will use the concatenation approach in IQ-TREE.",393.0
Inferring species tree,Concordance Factor,5.0,37.0,"As an example, you can apply an edge-linked proportional partition model with ultrafast bootstrap (1000 replicates; for comparison with concordance factors):",394.0
Inferring species tree,Concordance Factor,5.0,37.0,"iqtree -s ALN_FILE -p PARTITION_FILE --prefix concat -B 1000 -T AUTO
",395.0
Inferring species tree,Concordance Factor,5.0,37.0,"where ALN_FILE and PARTITION_FILE are your input files. -T AUTO is to detect the best number of CPU cores. Here we use a prefix concat, so that all output files (concat.*) do not interfere with analyses below. If --prefix is omitted, all output files will be PARTITION_FILE.*.",396.0
Inferring species tree,Concordance Factor,5.0,37.0,"Moreover, IQ-TREE 2 provides a new convenient feature: if you have a directory with many (locus) alignments, you can specify this directory directly with -p option:",397.0
Inferring species tree,Concordance Factor,5.0,37.0,"iqtree -p ALN_DIR --prefix concat -B 1000 -T AUTO
",398.0
Inferring species tree,Concordance Factor,5.0,37.0,IQ-TREE detects if -p argument is a directory and automatically load all alignment files and concatenate them into a supermatrix for the partition analysis.,399.0
Inferring gene/locus trees,Concordance Factor,5.0,38.0,Inferring gene/locus trees,400.0
Inferring gene/locus trees,Concordance Factor,5.0,38.0,"We now construct a set of gene/locus trees. One can manually do a for-loop, but IQ-TREE 2 provides a new convenient option -S to compute individual locus trees given a partition file or a directory:",401.0
Inferring gene/locus trees,Concordance Factor,5.0,38.0,"iqtree -s ALN_FILE -S PARTITION_FILE --prefix loci -T AUTO
# or
iqtree -S ALN_DIR --prefix loci -T AUTO
",402.0
Inferring gene/locus trees,Concordance Factor,5.0,38.0,"In the second case, IQ-TREE automatically detects that ALN_DIR is a directory and will load all alignment files within the directory. So -S takes the same argument as -p except that it performs model selection (ModelFinder) and tree inference separately for each partition/alignment. The output files are similar to those from a partitioned analysis, except that loci.treefile now contains a set of trees.",403.0
Gene concordance factor (gCF),Concordance Factor,5.0,39.0,Gene concordance factor (gCF),404.0
Gene concordance factor (gCF),Concordance Factor,5.0,39.0,"Given the species tree concat.treefile and the set of locus trees loci.treefile computed above, you can calculate gCF for each branch of the species tree as the fraction of decisive gene trees concordant with this branch:",405.0
Gene concordance factor (gCF),Concordance Factor,5.0,39.0,"iqtree -t concat.treefile --gcf loci.treefile --prefix concord
",406.0
Gene concordance factor (gCF),Concordance Factor,5.0,39.0,"Note that -t accepts any reference tree (e.g., by coalescent/reconciliation approach) and --gcf accepts any set of trees (e.g. locus trees and bootstrap trees), which may contain a subset of taxa from the reference tree. IQ-Tree will write three files:",407.0
Gene concordance factor (gCF),Concordance Factor,5.0,39.0,"concord.cf.tree: Newick tree with gCF assigned for each internal branch of the reference tree. If the reference tree already has some branch label (such as bootstrap support in this case), gCF will be appended to the existing label separated by a /.concord.cf.branch: Newick tree with internal branch IDs.concord.cf.stat: A tab-separated table with gCF and gDF (gene discordance factor) for every internal branch (rows of the table). The ID column can be linked with concord.cf.branch file. This file can be read in R to do some plot (see below).",408.0
Gene concordance factor (gCF),Concordance Factor,5.0,39.0,"If you omit --prefix, all output files will be written to concat.treefile.*.",409.0
Site concordance factor (sCF),Concordance Factor,5.0,40.0,Site concordance factor (sCF),410.0
Site concordance factor (sCF),Concordance Factor,5.0,40.0,"Given the species tree concat.treefile and the alignment, you can calculate sCF for each branch of the species tree as the fraction of decisive alignment sites supporting that branch:",411.0
Site concordance factor (sCF),Concordance Factor,5.0,40.0,"iqtree -t concat.treefile -s ALN_FILE --scf 100 --prefix concord -T 10
",412.0
Site concordance factor (sCF),Concordance Factor,5.0,40.0,"--scf specifies the number of quartets (randomly sampled around each internal branch) for computing sCF. We recommend at least 100 quartets for stable sCF values. Note that running this command several times may lead to slightly different sCF due to randomness. To make it reproducible, you need to use -seed option to provide a random number generator seed.",413.0
Site concordance factor (sCF),Concordance Factor,5.0,40.0,"Instead of -s, you can alternatively provide a directory or a partition file. IQ-Tree then computes sCF for the concatenated alignment:",414.0
Site concordance factor (sCF),Concordance Factor,5.0,40.0,"iqtree -t concat.treefile -p ALN_DIR --scf 100 --prefix concord -T 10
",415.0
Site concordance factor (sCF),Concordance Factor,5.0,40.0,"Finally, you can combine gCF and sCF within a single run:",416.0
Site concordance factor (sCF),Concordance Factor,5.0,40.0,"iqtree -t concat.treefile --gcf loci.treefile -p ALN_DIR --scf 100 --prefix concord -T 10
",417.0
Site concordance factor (sCF),Concordance Factor,5.0,40.0,"Here, each branch of concord.cf.tree will be assigned (or appended) with gCF/sCF values and concord.cf.stat will be written with both gCF and sCF values.",418.0
Putting it all together,Concordance Factor,5.0,41.0,Putting it all together,419.0
Putting it all together,Concordance Factor,5.0,41.0,"If you have separate alignments for each locus in a folder, then perform the following commands:",420.0
Putting it all together,Concordance Factor,5.0,41.0,"# infer a concatenation-based species tree with 1000 ultrafast bootstrap and an edge-linked partition model
iqtree -p ALN_DIR --prefix concat -B 1000 -T AUTO

# infer the locus trees
iqtree -S ALN_DIR --prefix loci -T AUTO

# compute concordance factors
iqtree -t concat.treefile --gcf loci.treefile -p ALN_DIR --scf 100 --prefix concord -T 10
",421.0
Putting it all together,Concordance Factor,5.0,41.0,If you have a single concatenated alignment with a partition file that defines loci:,422.0
Putting it all together,Concordance Factor,5.0,41.0,"# infer a concatenation-based species tree with 1000 ultrafast bootstrap and an edge-linked partition model
iqtree -s ALN_FILE -p PARTITION_FILE --prefix concat -B 1000 -T AUTO

# infer the locus trees
iqtree -s ALN_FILE -S PARTITION_FILE --prefix loci -T AUTO

# compute concordance factors
iqtree -t concat.treefile --gcf loci.treefile -s ALN_FILE --scf 100 --prefix concord -T 10
",423.0
Putting it all together,Concordance Factor,5.0,41.0,Note that you can adjust -T 10 if you have fewer/larger CPU cores.,424.0
Alignment class,Developer guide,6.0,42.0,Alignment class,425.0
Alignment class,Developer guide,6.0,42.0,"The Alignment class stores the data as a vector of Pattern. Each Pattern is in turn a string representing the characters across the sequences at an alignment site, with a frequency of occurrences in the Alignment (from header file pattern.h):",426.0
Alignment class,Developer guide,6.0,42.0,"/**
        Site-patterns in a multiple sequence alignment
*/
class Pattern : public string {
public:
        ...

        /**
                frequency appearance of the pattern
        */
        int frequency;
};
",427.0
Alignment class,Developer guide,6.0,42.0,"The rationale for storing the data this way (instead of storing a set of sequences) is that most computations are carried out along the site-patterns of the Alignment. Thus, it makes all operations more convenient and faster.",428.0
Alignment class,Developer guide,6.0,42.0,"As noted above, the Alignment class is defined as (from header file alignment.h):",429.0
Alignment class,Developer guide,6.0,42.0,"/**
    Multiple Sequence Alignment. Stored by a vector of site-patterns
*/
class Alignment : public vector<Pattern> {
public:
    /**
            constructor
            @param filename file name
            @param sequence_type type of the sequence, either ""BIN"", ""DNA"", ""AA"", or NULL
            @param intype (OUT) input format of the file
     */
    Alignment(char *filename, char *sequence_type, InputType &intype);

    ...
};
",430.0
Alignment class,Developer guide,6.0,42.0,"NOTE: Please follow the commenting style of the code when declaring new components (classes, functions or variables) like the example above. That way, the source code documentation can be generated with tools like Doxygen. See Doxygen commenting manual for more details.",431.0
Model of substitution,Developer guide,6.0,43.0,Model of substitution,432.0
Model of substitution,Developer guide,6.0,43.0,ModelSubst,433.0
Model of substitution,Developer guide,6.0,43.0,"ModelSubst is the base class for all substitution models implemented in IQ-TREE. It implements the basic Juke-Cantor-type model (equal substitution rates and equal state frequencies) that works for all data type. ModelSubst class declares a number of virtual methods, that need to be overriden when implementing a new model, for example (from header file model/modelsubst.h):",434.0
Model of substitution,Developer guide,6.0,43.0,"/**
    Substitution model abstract class
*/
class ModelSubst: public Optimization
{
public:
        /**
                constructor
                @param nstates number of states, e.g. 4 for DNA, 20 for proteins.
        */
    ModelSubst(int nstates);

        /**
                @return the number of dimensions
        */
        virtual int getNDim() { return 0; }

    ...
};
",435.0
Model of substitution,Developer guide,6.0,43.0,"As an example, the method getNDim() should return the number of free parameters of the model, which is 0 for the default JC-type model.",436.0
Model of substitution,Developer guide,6.0,43.0,ModelGTR,437.0
Model of substitution,Developer guide,6.0,43.0,ModelGTR class extends ModelSubst and implements the general time reversible model. ModelGTR is the base class for all models currently used in IQ-TREE. Some important ingredients of ModelGTR (from model/modelgtr.h):,438.0
Model of substitution,Developer guide,6.0,43.0,"/**
    General Time Reversible (GTR) model of substitution.
    This works for all kind of data, not only DNA
*/
class ModelGTR : public ModelSubst, public EigenDecomposition
{
public:
        /**
                constructor
                @param tree associated tree for the model
        */
    ModelGTR(PhyloTree *tree, bool count_rates = true);

        /**
                @return the number of dimensions
        */
        virtual int getNDim();
    ...

protected:
    /**
                rates between pairs of states of the unit rate matrix Q.
                In order A-C, A-G, A-T, C-G, C-T (rate G-T = 1 always)
        */
        double *rates;
    ....
};
",439.0
PhyloTree class (phylogenetic tree),Developer guide,6.0,44.0,PhyloTree class (phylogenetic tree),440.0
PhyloTree class (phylogenetic tree),Developer guide,6.0,44.0,PhyloTree is the base class for phylogenetic trees.,441.0
How do I get help?,Frequently asked questions,7.0,45.0,How do I get help?,442.0
How do I get help?,Frequently asked questions,7.0,45.0,If you have questions please follow the steps below:,443.0
How do I get help?,Frequently asked questions,7.0,45.0,"Continue to read the FAQ below, which may answer your questions already.If not, read the documentation http://www.iqtree.org/doc.If you still could not find the answer, search the IQ-TREE Google group. There is a “Search for topics” box at the top of the Google group web page.Finally, if no answer is found, post a question to the IQ-TREE group. The average response time is one to two working days.",444.0
How do I get help?,Frequently asked questions,7.0,45.0,"For other feedback and feature request, please post a topic to the IQ-TREE Google group. We welcome all suggestions to further improve IQ-TREE! For feature request, please also explain why you think such a new feature would be useful or how can it help for your work.",445.0
How do I report bug?,Frequently asked questions,7.0,46.0,How do I report bug?,446.0
How do I report bug?,Frequently asked questions,7.0,46.0,"For bug report, please send the following information to the IQ-TREE Google group:",447.0
How do I report bug?,Frequently asked questions,7.0,46.0,"A description of the behaviour, which you think might be unexpected or caused by a bug.The first 10 lines and last 10 lines of the .log file.(If possible) the assertion message printed on the screen, which may look like this: iqtree: ....cpp:140: ...: Assertion '...' failed.
",448.0
How do I report bug?,Frequently asked questions,7.0,46.0,"The development team will get back to you and may ask for the full .log file and input data files for debugging purpose, if necessary. In such case please only send your data files directly to the developers for confidential reason! Keep in mind that everyone can see all emails sent to the group!",449.0
How do I interpret ultrafast bootstrap (UFBoot) support values?,Frequently asked questions,7.0,47.0,How do I interpret ultrafast bootstrap (UFBoot) support values?,450.0
How do I interpret ultrafast bootstrap (UFBoot) support values?,Frequently asked questions,7.0,47.0,"The ultrafast bootstrap (UFBoot) feature (-bb option) was published in (Minh et al., 2013). One of the main conclusions is, that UFBoot support values are more unbiased: 95% support correspond roughly to a probability of 95% that a clade is true. So this has a different meaning than the normal bootstrap supports (where you start to believe in the clade if it has >80% BS support). For UFBoot, you should only start to believe in a clade if its support is >= 95%. Thus, the interpretations are different and you should not compare BS% with UFBoot% directly.",451.0
How do I interpret ultrafast bootstrap (UFBoot) support values?,Frequently asked questions,7.0,47.0,"Moreover, it is recommended to also perform the SH-aLRT test (Guindon et al., 2010) by adding -alrt 1000 into the IQ-TREE command line. Each branch will then be assigned with SH-aLRT and UFBoot supports. One would typically start to rely on the clade if its SH-aLRT >= 80% and UFboot >= 95%.",452.0
How does IQ-TREE treat gap/missing/ambiguous characters?,Frequently asked questions,7.0,48.0,How does IQ-TREE treat gap/missing/ambiguous characters?,453.0
How does IQ-TREE treat gap/missing/ambiguous characters?,Frequently asked questions,7.0,48.0,"Gaps (-) and missing characters (? or N for DNA alignments) are treated in the same way as unknown characters, which represent no information. The same treatment holds for many other ML software (e.g., RAxML, PhyML). More explicitly, for a site (column) of an alignment containing AC-AG-A (i.e. A for sequence 1, C for sequence 2, - for sequence 3, and so on), the site-likelihood of a tree T is equal to the site-likelihood of the subtree of T restricted to those sequences containing non-gap characters (ACAGA).",454.0
How does IQ-TREE treat gap/missing/ambiguous characters?,Frequently asked questions,7.0,48.0,Ambiguous characters that represent more than one character are also supported: each represented character will have equal likelihood. For DNA the following ambigous nucleotides are supported according to IUPAC nomenclature:,455.0
How does IQ-TREE treat gap/missing/ambiguous characters?,Frequently asked questions,7.0,48.0,"NucleotideMeaningRA or G (purine)YC or T (pyrimidine)WA or T (weak)SG or C (strong)MA or C (amino)KG or T (keto)BC, G or T (next letter after A)HA, C or T (next letter after G)DA, G or T (next letter after C)VA, G or C (next letter after T)?, -, ., ~, O, N, XA, G, C or T (unknown; all 4 nucleotides are equally likely)",456.0
How does IQ-TREE treat gap/missing/ambiguous characters?,Frequently asked questions,7.0,48.0,For protein the following ambiguous amino-acids are supported:,457.0
How does IQ-TREE treat gap/missing/ambiguous characters?,Frequently asked questions,7.0,48.0,"Amino-acidMeaningBN or DZQ or EJI or LUunknown AA (although it is the 21st AA)?, -, ., ~, * or Xunknown AA (all 20 AAs are equally likely)",458.0
Can I mix DNA and protein data in a partitioned analysis?,Frequently asked questions,7.0,49.0,Can I mix DNA and protein data in a partitioned analysis?,459.0
Can I mix DNA and protein data in a partitioned analysis?,Frequently asked questions,7.0,49.0,"Yes! You can specify this via a NEXUS partition file. In fact, you can mix any data types supported in IQ-TREE, including also codon, binary and morphological data. To do so, each data type should be stored in a separate alignment file (see also Partitioned analysis with mixed data). As an example, assuming dna.phy is a DNA alignment and and prot.phy is a protein alignment. Then a partition file mixing two types of data can be specified as follows:",460.0
Can I mix DNA and protein data in a partitioned analysis?,Frequently asked questions,7.0,49.0,"#nexus
begin sets;
    charset part1 = dna.phy: 1-100 201-300;
    charset part2 = dna.phy: 101-200;
    charset part3 = prot.phy: 1-150;
    charset part4 = prot.phy: 151-400;
    charpartition mine = HKY:part1, GTR+G:part2, WAG+I+G:part3, LG+G:part4;
end;
",461.0
Can I mix DNA and protein data in a partitioned analysis?,Frequently asked questions,7.0,49.0,"NOTE: The site count for each alignment should start from 1, and not continue from the last position of a previous alignment (e.g., see part3 and part4 declared above).",462.0
What is the interpretation of branch lengths when mixing codon and DNA data?,Frequently asked questions,7.0,50.0,What is the interpretation of branch lengths when mixing codon and DNA data?,463.0
What is the interpretation of branch lengths when mixing codon and DNA data?,Frequently asked questions,7.0,50.0,"When mixing codon and DNA data in a partitioned analysis, the branch lengths are interpreted as the number of nucleotide substitutions per nucleotide site! This is different from having only codon data, where branch lengths are the number of nucleotide substitutions per codon site (thus typically 3 times longer than under DNA models).",464.0
What is the interpretation of branch lengths when mixing codon and DNA data?,Frequently asked questions,7.0,50.0,"Note that if you mix codon, DNA and protein data, the branch lengths are then the number of character substitutions per site, where character is either nucleotide or amino-acid.",465.0
What is the purpose of composition test?,Frequently asked questions,7.0,51.0,What is the purpose of composition test?,466.0
What is the purpose of composition test?,Frequently asked questions,7.0,51.0,"At the beginning of each run, IQ-TREE performs a composition chi-square test for every sequence in the alignment. The purpose is to test for homogeneity of character composition (e.g., nucleotide for DNA, amino-acid for protein sequences). A sequence is denoted failed if its character composition significantly deviates from the average composition of the alignment.",467.0
What is the purpose of composition test?,Frequently asked questions,7.0,51.0,"More specifically, for each sequence, compute:",468.0
What is the purpose of composition test?,Frequently asked questions,7.0,51.0,"chi2 = \sum_{i=1}^k (O_i - E_i)^2 / E_i
",469.0
What is the purpose of composition test?,Frequently asked questions,7.0,51.0,"where k is the size of the alphabet (e.g. 4 for DNA, 20 for amino acids) and the values 1 to k correspond uniquely to one of the characters. O_i is the character frequency in the sequence tested. E_i is the overall character frequency from the entire alignment.",470.0
What is the purpose of composition test?,Frequently asked questions,7.0,51.0,Whether the character composition deviates significantly from the overall composition is done by testing the chi2 value using the chi2-distribution with k-1 degrees of freedom (df=3 for DNA or df=19 for amino acids). By and large it is a normal Chi^2 test.,471.0
What is the purpose of composition test?,Frequently asked questions,7.0,51.0,This test should be regarded as an explorative tool which might help to nail down problems in a dataset. One would typically not remove failing sequences by default. But if the tree shows unexpected topology the test might point in direction of the origin of the problem.,472.0
What is the purpose of composition test?,Frequently asked questions,7.0,51.0,"Furthermore, please keep in mind, this test is performed at the very beginning, where IQ-TREE does not know anything about the models yet. That means:",473.0
What is the purpose of composition test?,Frequently asked questions,7.0,51.0,"If you have partitioned (multi-gene) data, it might be more reasonable to test this separately for each partition in a partition analysis. Here, one might want to be able to decide whether some partitions should better be discarded if it is hard to find a composition representing the sequences in the partition. Or on the other hand if a sequence fails for many partitions and show very unexpected phylogenetic topologies, try without it.If you have (phylogenomic) protein data, you can also try several protein mixture models, which account for different amino-acid compositions along the sequences, for example, the C10 to C60 profile mixture models.Finally, it is recommended to always check the alignment (something one should always do anyway), especially if they have been collected and produced automatically.",474.0
What is the good number of CPU cores to use?,Frequently asked questions,7.0,52.0,What is the good number of CPU cores to use?,475.0
What is the good number of CPU cores to use?,Frequently asked questions,7.0,52.0,"Starting with version 1.5.1, you can use option -nt AUTO to automatically determine the best number of threads for your current data and computer.",476.0
What is the good number of CPU cores to use?,Frequently asked questions,7.0,52.0,"If you want to know more details: IQ-TREE can utilize multicore machines to speed up the analysis via -nt option. However, it does not mean that using more cores will always result in less running time: if your alignment is short, using too many cores may even slow down the analysis. This is because IQ-TREE parallelizes the likelihood computation along the alignment. Thus, the parallel efficiency is only increased with longer alignments.",477.0
What is the good number of CPU cores to use?,Frequently asked questions,7.0,52.0,If you want to restrict the number of CPU cores allocated by -nt AUTO use -ntmax to specify the maximal number of CPU cores allowed (DEFAULT: #CPU cores on the current machine).,478.0
How do I save time for standard bootstrap?,Frequently asked questions,7.0,53.0,How do I save time for standard bootstrap?,479.0
How do I save time for standard bootstrap?,Frequently asked questions,7.0,53.0,"The standard bootstrap is rather slow and may take weeks/months for large data sets. One way to speed up is to use the multicore version. However, this only works well for long alignments (see What is the good number of CPU cores to use?). Another way is to use many machines or a computing cluster and split the computation among the machines. To illustrate, you want to perform 100 bootstrap replicates and have 5 PCs, each has 4 CPU cores. Then you can:",480.0
How do I save time for standard bootstrap?,Frequently asked questions,7.0,53.0,"Perform 5 independent bootstrap runs (each with 20 replicates) on the 5 machines with 5 prefix outputs (such that output files are not overwritten). For example: # For old IQ-TREE versions <= 1.5.X, change iqtree to iqtree-omp
 iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot1
 iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot2
 iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot3
 iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot4
 iqtree -nt 4 -s input_alignment -bo 20 ... -pre boot5
Note that if you have access to a computing cluster, you may want to submit these jobs onto the cluster queue in parallel and with even more fined grained parallelization (e.g. one replicate per job).Once all 5 runs finished, combine the 5 .boottrees file into one file (e.g. by cat command under Linux): cat boot*.boottrees > alltrees
Construct a consensus tree from the combined bootstrap trees: iqtree -con -t alltrees
The consensus tree is then written to .contree file.Estimate branch lengths of the consensus tree using the original alignment: iqtree -s input_alignment -te alltrees.contree -pre alltrees.contree
You can also perform the analysis on the original alignment: # For old IQ-TREE versions <= 1.5.X, change iqtree to iqtree-omp
 iqtree -nt 4 -s input_alignment ...
and map the support values onto the obtained ML tree: iqtree -sup input_alignment.treefile -t alltrees 
The ML tree with assigned bootstrap supports is written to .suptree file.",481.0
Why does IQ-TREE complain about the use of +ASC model?,Frequently asked questions,7.0,54.0,Why does IQ-TREE complain about the use of +ASC model?,482.0
Why does IQ-TREE complain about the use of +ASC model?,Frequently asked questions,7.0,54.0,"When using ascertainment bias correction (ASC) model, sometimes you may get an error message:",483.0
Why does IQ-TREE complain about the use of +ASC model?,Frequently asked questions,7.0,54.0,ERROR: Invaid use of +ASC because of ... invariant sites in the alignment,484.0
Why does IQ-TREE complain about the use of +ASC model?,Frequently asked questions,7.0,54.0,or when performing model testing:,485.0
Why does IQ-TREE complain about the use of +ASC model?,Frequently asked questions,7.0,54.0,Skipped since +ASC is not applicable,486.0
Why does IQ-TREE complain about the use of +ASC model?,Frequently asked questions,7.0,54.0,"This is because your alignment contains invariant sites (columns), which violate the mathematical condition of the model. The invariant sites can be:",487.0
Why does IQ-TREE complain about the use of +ASC model?,Frequently asked questions,7.0,54.0,"Constant sites: containing a single character state over all sequences. For example, all sequences show an A (Adenine) at a particular site in a DNA alignment.Partially constant sites: containing a single character, gap or unknown character. For example, at a particular site some sequences show a G (Guanine), some sequences have - (gap) and the other have N.Ambiguously constant sites: For example, some sequences show a C (Cytosine), some show a Y (meaning C or T) and some show a - (gap).",488.0
Why does IQ-TREE complain about the use of +ASC model?,Frequently asked questions,7.0,54.0,All these sites must be removed from the alignment before a +ASC model can be applied.,489.0
Why does IQ-TREE complain about the use of +ASC model?,Frequently asked questions,7.0,54.0,"TIP: Starting with IQ-TREE version 1.5.0, an output alignment file with suffix .varsites is written in such cases, which contain only variable sites from the input alignment. The .varsites alignment can then be used with the +ASC model.",490.0
How does IQ-TREE treat identical sequences?,Frequently asked questions,7.0,55.0,How does IQ-TREE treat identical sequences?,491.0
How does IQ-TREE treat identical sequences?,Frequently asked questions,7.0,55.0,"Among a group of identical sequences, IQ-TREE will keep the first two and ignore the rest. If the sequence is the 2nd one, it will be “kept for subsequent analysis”. If it is the 3rd or more, it will be “ignored but added at the end”. The rationale for this is to still be able to calculate the bootstrap support for this group of identical sequences: it is not always 100%. Because by bootstrap resampling, on average only two third of the sites will be present in a bootstrap alignment (due to sampling with replacement), and suddenly another sequence not in this group may actually become identical to this group of sequences. In that case, the bootstrap value will be < 100%.",492.0
How does IQ-TREE treat identical sequences?,Frequently asked questions,7.0,55.0,"Therefore, the .uniqueseq.phy printed by IQ-TREE may still contain the identical sequences, but no more than two of each identical group.",493.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,What are the differences between alignment columns/sites and patterns?,494.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,"Columns are the columns/sites in the alignment and the number of columns is the length of the alignment. In the alignment there might be the same columns. Different columns are called patterns. While (parsimony) informative sites are patterns that have at least two different characters (nucleotides or amino acids) and each character should occur in at least two species. Essentially, informative sites have information for the grouping of species. These patterns are mainly important in the context of parsimony, where no evolutionary model is used. In maximum likelihood inference all patterns containing different characters are important for the estimation of tree topology and branch lengths, while constant/invariant sites (containing only the same character: only A’s or only G’s etc) are important for the correct estimation of the branch lengths. Therefore, should not be excluded from the alignment.",495.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,Example:,496.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,"            123456789
species_1   AACGTACGT
species_2   AACGATCGT
species_3   AACCGTCCT
species_4   AACCTACCT
",497.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,"sites/columns 1 and 2 are identical and contain only A’s - invariant site pattern, uninformativesites/columns 3 and 7 are identical and contain only C’s - invariant site pattern, uninformativesites/columns 4 and 8 are identical and contain 2 G’c and 2 C’s - informative site patternsites/columns 5, 6 and 9 occur only once, each site is a different pattern. 5th is uninformative, 6th is informative, 9th is invariant and uninformative",498.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,"Summing up, the alignment has 9 columns,",499.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,6 patterns,500.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,"A C G T A T
A C G A T T
A C C G T T
A C C T A T
",501.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,(2 informative),502.0
What are the differences between alignment columns/sites and patterns?,Frequently asked questions,7.0,56.0,"G A 
G T 
C T 
C A
",503.0
IQ-TREE web server,Getting started,8.0,57.0,IQ-TREE web server,504.0
IQ-TREE web server,Getting started,8.0,57.0,"The quickest is to try out the IQ-TREE web server, where you only need to upload an alignment, choose the options and start the analysis. There is a web server tutorial here.",505.0
IQ-TREE web server,Getting started,8.0,57.0,"If you want to use the command-line version, follow the instructions below.",506.0
Installation,Getting started,8.0,58.0,Installation,507.0
Installation,Getting started,8.0,58.0,"For reasons of performance, IQ-TREE is a command-line program, i.e., IQ-TREE needs to be run from a terminal/console (command prompt under Windows).",508.0
Installation,Getting started,8.0,58.0,Packages and bundles,509.0
Installation,Getting started,8.0,58.0,Ready made IQ-TREE packages are available for the following distributions/repositories (command to install iqtree):,510.0
Installation,Getting started,8.0,58.0,Debian Linux: sudo apt-get install iqtreeArch Linux (AUR)Anaconda: conda install -c bioconda iqtreeHomebrew: brew install brewsci/bio/iqtree2FreeBSD: pkg install iqtree,511.0
Installation,Getting started,8.0,58.0,Manual download,512.0
Installation,Getting started,8.0,58.0,"IQ-TREE for Windows, MacOSX and Linux can be downloaded here.",513.0
Installation,Getting started,8.0,58.0,"Extract the .zip (Windows, MacOSX) or .tar.gz (Linux) file to create a directory iqtree-X.Y.Z-OS, where X.Y.Z is the version number and OS is the operating system (Windows, MacOSX or Linux).You will find the executable in the bin sub-folder. Copy all files in bin folder to your system search path such that you can run IQ-TREE by entering iqtree from the Terminal.",514.0
Installation,Getting started,8.0,58.0,Now you need to open a Terminal (or Console) to run IQ-TREE. See below the guide for Windows users and Mac OS X users.,515.0
For Windows users,Getting started,8.0,59.0,For Windows users,516.0
For Windows users,Getting started,8.0,59.0,"Since IQ-TREE is a command-line program, clicking on iqtree.exe will not work. You have to open a Command Prompt for all analyses:",517.0
For Windows users,Getting started,8.0,59.0,"Click on “Start” menu (below left corner of Windows screen).Type in “cmd” and press “Enter”. It will open the Command Prompt window (see Figure below).Go into IQ-TREE folder you just extracted by entering e.g. (assuming you downloaded version 1.5.0): cd Downloads\iqtree-1.5.0-Windows
(assuming that IQ-TREE was downloaded into Downloads folder).Now you can try an example run by entering: bin\iqtree -s example.phy
(example.phy is the example PHYLIP alignment file also extracted in that folder).After a few seconds, IQ-TREE finishes and you may see something like this:",518.0
For Windows users,Getting started,8.0,59.0,Congratulations ;-) You have finished the first IQ-TREE analysis.,519.0
For Mac OS X users,Getting started,8.0,60.0,For Mac OS X users,520.0
For Mac OS X users,Getting started,8.0,60.0,"Open the “Terminal”, e.g., by clicking on the Spotlight icon (top-right corner), typing “terminal” and press “Enter”.Go into IQ-TREE folder by entering (assuming you downloaded version 1.5.0): cd Downloads/iqtree-1.5.0-MacOSX
(assuming that IQ-TREE was downloaded into Downloads folder).Now you can try an example run by entering bin/iqtree -s example.phy
(example.phy is the example PHYLIP alignment file also extracted in that folder).After a few seconds, IQ-TREE finishes and you may see something like this:",521.0
For Mac OS X users,Getting started,8.0,60.0,Congratulations ;-) You have finished the first IQ-TREE analysis.,522.0
Minimal command-line examples,Getting started,8.0,61.0,Minimal command-line examples,523.0
Minimal command-line examples,Getting started,8.0,61.0,"A few typically analyses are listed in the following. Note that it is assumed that iqtree executable was already copied into system search path. If not, please replace iqtree with actual path to executable.",524.0
Minimal command-line examples,Getting started,8.0,61.0,"Infer maximum-likelihood tree from a sequence alignment (example.phy) with the best-fit model automatically selected by ModelFinder:  iqtree -s example.phy
Infer maximum-likelihood tree using GTR+I+G model:  iqtree -s example.phy -m GTR+I+G
Perform ModelFinder without subsequent tree inference:  iqtree -s example.phy -m MF
Combine ModelFinder, tree search, SH-aLRT test and ultrafast bootstrap with 1000 replicates:  iqtree -s example.phy -B 1000 -alrt 1000
  # for version 1.x, change -B to -bb
Perform edge-linked proportional partition model (example.nex):  iqtree -s example.phy -p example.nex
  # for version 1.x change -p to -spp
Find best partition scheme by possibly merging partitions:  iqtree -s example.phy -p example.nex -m MF+MERGE
Find best partition scheme followed by tree inference and ultrafast bootstrap:  iqtree -s example.phy -p example.nex -m MFP+MERGE -B 1000
  # for version 1.x change -B to -bb
Use 4 CPU cores to speed up computation:  iqtree -s example.phy -T 4
  # for version 1.x change -T to -nt
Determine the best number of cores to use under GTR+R4 model:  iqtree -s example.phy -m GTR+R4 -T AUTO
  # for version 1.x change -T to -nt
Show all available options:  iqtree -h
",525.0
Where to go from here?,Getting started,8.0,62.0,Where to go from here?,526.0
Where to go from here?,Getting started,8.0,62.0,Please continue with the Beginner’s tutorial for further usages.,527.0
Why IQ-TREE?,Introduction,9.0,63.0,Why IQ-TREE?,528.0
Why IQ-TREE?,Introduction,9.0,63.0,"Thanks to the recent advent of next-generation sequencing techniques, the amount of phylogenomic/transcriptomic data have been rapidly accumulated. This extremely facilitates resolving many “deep phylogenetic” questions in the tree of life. At the same time it poses major computational challenges to analyze such big data, where most phylogenetic software cannot handle. Moreover, there is a need to develop more complex probabilistic models to adequately capture realistic aspects of genomic sequence evolution.",529.0
Why IQ-TREE?,Introduction,9.0,63.0,This trends motivated us to develop the IQ-TREE software with a strong emphasis on phylogenomic inference. Our goals are:,530.0
Why IQ-TREE?,Introduction,9.0,63.0,Accuracy: Proposing novel computational methods that perform better than existing approaches.Speed: Allowing fast analysis on big data sets and utilizing high performance computing platforms.Flexibility: Facilitating the inclusion of new (phylogenomic) models and sequence data types.Versatility: Implementing a broad range of commonly-used maximum likelihood analyses.,531.0
Why IQ-TREE?,Introduction,9.0,63.0,IQ-TREE has been developed since 2011 and freely available at http://www.iqtree.org/ as open-source software under the GNU-GPL license version 2. It is actively maintained by the core development team (see below) and a number of collabrators.,532.0
Why IQ-TREE?,Introduction,9.0,63.0,The name IQ-TREE comes from the fact that it is the successor of IQPNNI and TREE-PUZZLE software.,533.0
Key features,Introduction,9.0,64.0,Key features,534.0
Key features,Introduction,9.0,64.0,"Efficient search algorithm: Fast and effective stochastic algorithm to reconstruct phylogenetic trees by maximum likelihood. IQ-TREE compares favorably to RAxML and PhyML in terms of likelihood while requiring similar amount of computing time (Nguyen et al., 2015).Ultrafast bootstrap: An ultrafast bootstrap approximation (UFBoot) to assess branch supports. UFBoot is 10 to 40 times faster than RAxML rapid bootstrap and obtains less biased support values (Minh et al., 2013; Hoang et al., 2018).Ultrafast model selection: An ultrafast and automatic model selection (ModelFinder) which is 10 to 100 times faster than jModelTest and ProtTest. ModelFinder also finds best-fit partitioning scheme like PartitionFinder.Big Data Analysis: Supporting huge datasets with thousands of sequences or millions of alignment sites via checkpointing, safe numerical and low memory mode. Multicore CPUs and parallel MPI system are utilized to speedup analysis.Phylogenetic testing: Several fast branch tests like SH-aLRT and aBayes test (Anisimova et al., 2011) and tree topology tests like the approximately unbiased (AU) test (Shimodaira, 2002).",535.0
Key features,Introduction,9.0,64.0,The strength of IQ-TREE is the availability of a wide variety of phylogenetic models:,536.0
Key features,Introduction,9.0,64.0,"Common models: All common substitution models for DNA, protein, codon, binary and morphological data with rate heterogeneity among sites and ascertainment bias correction for e.g. SNP data.Partition models: Allowing individual models for different genomic loci (e.g. genes or codon positions), mixed data types, mixed rate heterogeneity types, linked or unlinked branch lengths between partitions.Mixture models: fully customizable mixture models and empirical protein mixture models and.Polymorphism-aware models: Accounting for incomplete lineage sorting to infer species tree from genome-wide population data (Schrempf et al., 2016).",537.0
Free web server,Introduction,9.0,65.0,Free web server,538.0
Free web server,Introduction,9.0,65.0,"For a quick start you can also try the IQ-TREE web server, which performs online computation using a dedicated computing cluster. It is very easy to use with as few as just 3 clicks! Try it out at",539.0
Free web server,Introduction,9.0,65.0,http://iqtree.cibiv.univie.ac.at,540.0
User support,Introduction,9.0,66.0,User support,541.0
User support,Introduction,9.0,66.0,"Please refer to the user documentation and frequently asked questions. If you have further questions, feedback, feature requests, and bug reports, please sign up the following Google group (if not done yet) and post a topic to the",542.0
User support,Introduction,9.0,66.0,https://groups.google.com/d/forum/iqtree,543.0
User support,Introduction,9.0,66.0,The average response time is two working days.,544.0
Documentation,Introduction,9.0,67.0,Documentation,545.0
Documentation,Introduction,9.0,67.0,IQ-TREE has an extensive documentation with several tutorials and manual:,546.0
Documentation,Introduction,9.0,67.0,Getting started guide: recommended for users who just downloaded IQ-TREE.Web Server Tutorial: A quick starting guide for the IQ-TREE Web Server.Beginner’s tutorial: recommended for users starting to use IQ-TREE.Advanced tutorial: recommended for more experienced users who want to explore more features of IQ-TREE.Command Reference: Comprehensive documentation of command-line options available in IQ-TREE.Substitution Models: All common substitution models and usages.Complex Models: Complex models such as partition and mixture models.Polymorphism Aware Models: Polymorphism-aware phylogenetic Models (PoMo) related documentation.Compilation guide: for advanced users who wants to compile IQ-TREE from source code.Frequently asked questions (FAQ): recommended to have a look before you post a question in the IQ-TREE group.,547.0
How to cite IQ-TREE?,Introduction,9.0,68.0,How to cite IQ-TREE?,548.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"To maintain IQ-TREE, support users and secure fundings, it is important for us that you cite the following papers, whenever the corresponding features were applied for your analysis.Example 1: We obtained branch supports with the ultrafast bootstrap (Hoang et al., 2018) implemented in the IQ-TREE software (Nguyen et al., 2015).Example 2: We inferred the maximum-likelihood tree using the edge-linked partition model in IQ-TREE (Chernomor et al., 2016; Nguyen et al., 2015).",549.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"If you performed the tests of symmetry, please cite:",550.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"S. Naser-Khdour, B.Q. Minh, W. Zhang, E.A. Stone, R. Lanfear (2019) The prevalence and pmpact of model violations in phylogenetic analysis, Genome Biol. Evol., in press. https://doi.org/10.1093/gbe/evz193",551.0
How to cite IQ-TREE?,Introduction,9.0,68.0,If you used the polymorphism-aware models please cite:,552.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"D. Schrempf, B.Q. Minh, A. von Haeseler, and C. Kosiol (2019) Polymorphism-aware species trees with advanced mutation models, bootstrap, and rate heterogeneity. Mol. Biol. Evol., 36:1294-1301. https://doi.org/10.1093/molbev/msz043",553.0
How to cite IQ-TREE?,Introduction,9.0,68.0,If you used the heterotachy model (GHOST) please cite:,554.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"S.M. Crotty, B.Q. Minh, N.G. Bean, B.R. Holland, J. Tuke, L.S. Jermiin, A. von Haeseler (2019) GHOST: Recovering historical signal from heterotachously-evolved sequence alignments. Syst. Biol., in press. https://doi.org/10.1093/sysbio/syz051",555.0
How to cite IQ-TREE?,Introduction,9.0,68.0,If you performed the ultrafast bootstrap (UFBoot) please cite:,556.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"D.T. Hoang, O. Chernomor, A. von Haeseler, B.Q. Minh, and L.S. Vinh (2018) UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol., 35:518–522. https://doi.org/10.1093/molbev/msx281",557.0
How to cite IQ-TREE?,Introduction,9.0,68.0,If you used posterior mean site frequency model please cite:,558.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"H.C. Wang, B.Q. Minh, S. Susko and A.J. Roger (2018) Modeling site heterogeneity with posterior mean site frequency profiles accelerates accurate phylogenomic estimation. Syst. Biol., 67:216-235. https://doi.org/10.1093/sysbio/syx068",559.0
How to cite IQ-TREE?,Introduction,9.0,68.0,If you used ModelFinder please cite:,560.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"S. Kalyaanamoorthy, B.Q. Minh, T.K.F. Wong, A. von Haeseler, and L.S. Jermiin (2017) ModelFinder: Fast Model Selection for Accurate Phylogenetic Estimates, Nature Methods, 14:587–589. https://doi.org/10.1038/nmeth.4285",561.0
How to cite IQ-TREE?,Introduction,9.0,68.0,If you performed tree reconstruction please cite:,562.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"L.-T. Nguyen, H.A. Schmidt, A. von Haeseler, and B.Q. Minh (2015) IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol., 32:268-274. https://doi.org/10.1093/molbev/msu300",563.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"If you used partition models e.g., for phylogenomic analysis please cite:",564.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"O. Chernomor, A. von Haeseler, and B.Q. Minh (2016) Terrace aware data structure for phylogenomic inference from supermatrices. Syst. Biol., 65:997-1008. https://doi.org/10.1093/sysbio/syw037",565.0
How to cite IQ-TREE?,Introduction,9.0,68.0,If you used the IQ-TREE web server please cite:,566.0
How to cite IQ-TREE?,Introduction,9.0,68.0,"J. Trifinopoulos, L.-T. Nguyen, A. von Haeseler, and B.Q. Minh (2016) W-IQ-TREE: a fast online phylogenetic tool for maximum likelihood analysis. Nucleic Acids Res., 44 (W1):W232-W235. https://doi.org/10.1093/nar/gkw256",567.0
Development team,Introduction,9.0,69.0,Development team,568.0
Development team,Introduction,9.0,69.0,IQ-TREE is actively developed by:,569.0
Development team,Introduction,9.0,69.0,"Bui Quang Minh, Team leader, Designs and implements software core, tree search, ultrafast bootstrap, model selection.",570.0
Development team,Introduction,9.0,69.0,"Robert Lanfear, Co-leader, Model selection.",571.0
Development team,Introduction,9.0,69.0,"Olga Chernomor, Developer, Implements partition models.",572.0
Development team,Introduction,9.0,69.0,"Heiko A. Schmidt, Developer, Integrates TREE-PUZZLE features.",573.0
Development team,Introduction,9.0,69.0,"Dominik Schrempf, Developer, Implements polymorphism-aware models (PoMo).",574.0
Development team,Introduction,9.0,69.0,"Michael Woodhams, Developer, Implements Lie Markov models.",575.0
Development team,Introduction,9.0,69.0,"Diep Thi Hoang, Developer, Improves ultrafast bootstrap.",576.0
Development team,Introduction,9.0,69.0,"Arndt von Haeseler, Advisor.",577.0
Development team,Introduction,9.0,69.0,Past members:,578.0
Development team,Introduction,9.0,69.0,"Lam Tung Nguyen, Developer, Implemented tree search algorithm.",579.0
Development team,Introduction,9.0,69.0,"Jana Trifinopoulos, Developer, Implemented web service.",580.0
Credits and acknowledgements,Introduction,9.0,70.0,Credits and acknowledgements,581.0
Credits and acknowledgements,Introduction,9.0,70.0,"Some parts of the code were taken from the following packages/libraries: Phylogenetic likelihood library, TREE-PUZZLE, BIONJ, Nexus Class Libary, Eigen library, SPRNG library, Zlib library, gzstream library, vectorclass library, GNU scientific library.",582.0
Credits and acknowledgements,Introduction,9.0,70.0,"IQ-TREE was funded by the Austrian Science Fund (grant no. I760-B17 from 2012-2015 and I 2508-B29 from 2016-2017), the University of Vienna (Initiativkolleg I059-N from 2012-2015), the Australian National University (2018-onwards), Chan-Zuckerberg Initiative (2020).",583.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,Inferring time tree with tip dates,584.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"This is a common scenario e.g. in virus datasets where you have sampling time for many sequences. You need first to prepare a date file, which comprises several lines, each with a taxon name (from your sequence alignment) and its date separated by spaces, tabs or blanks. Note that it is not required to have dates for all tips. For example, this date file is part of the new corona virus dataset:",585.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"hCoV-19/Wuhan-Hu-1         2019-12-31
hCoV-19/China/WF0028       2020-02
hCoV-19/USA/WA-S88         2020-03-01
hCoV-19/USA/CA-CDPH-UC1	   2020
hCoV-19/Italy/SPL1         2020-01-29
hCoV-19/Spain/Valencia5	   2020-02-27
hCoV-19/Australia/QLD01	   2020-01-28
hCoV-19/Vietnam/CM295      2020-03-06
hCoV-19/bat/Yunnan         2013-07-24
hCoV-19/pangolin/Guangdong 2019-02-01:2019-12-31
",586.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"The date information here can be uncertain. For example, hCoV-19/China/WF0028 was sampled in Feb 2020, hCoV-19/USA/CA-CDPH-UC1 was sampled in 2020, and hCoV-19/pangolin/Guangdong was sample between 1st Feb 2019 and 31st Dec 2019. For such data range you can use “NA” to mean that the lower or upper bound is missing, e.g.:",587.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"TaxonA  2018-02-01:NA
TaxonB  NA:2018-03-31
",588.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,which means that TaxonA was sampled after 1st Feb 2018 and TaxonB was sampled before 31st Mar 2018.,589.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,Now run IQ-TREE with:,590.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"iqtree -s ALN_FILE --date DATE_FILE
",591.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"where ALN_FILE is the sequence alignment and DATE_FILE is the date file. This single command line will perform three steps: (1) find the best-fit model using ModelFinder, (2) find the maximum likelihood (ML) tree with branch lengths in number of substitutions per site, and (3) rescale the branch lengths of the ML tree to build a time tree with dated ancestral node. As output IQ-TREE will additional print three files:",592.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"ALN_FILE.timetree.lsd: The report of LSD.ALN_FILE.timetree.nex: Time tree file in NEXUS format, that can be viewed nicely in FigTree (Click on “Node Labels” on the left tab and choose “Display” as “date” in FigTree, see figure below).ALN_FILE.timetree.nwk: Time tree file in NEWICK format.",593.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"This command will automatically detect the best root position (according to LSD criterion). However, if the root is incorrectly inferred, it may produce wrong dates. Therefore, it is advisable to provide outgroup taxa if possible. In this example, we have this information, so you can use -o option:",594.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"iqtree -s ALN_FILE --date DATE_FILE -o ""hCoV-19/bat/Yunnan,hCoV-19/pangolin/Guangdong""
",595.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,to instruct IQ-TREE that the root is on the branch separating bat and pangolin sequences from the rest.,596.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"Alternatively you can also append the dates into the sequence names of the alignment file using the | separator, such as (assuming a FASTA file here):",597.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,">hCoV-19/Wuhan-Hu-1|2019-12-31
......
>hCoV-19/China/WF0028|2020-02
......
>hCoV-19/USA/WA-S88|2020-03-01
......
>hCoV-19/USA/CA-CDPH-UC1|2020
......
>hCoV-19/Italy/SPL1|2020-01-29
......
>hCoV-19/Spain/Valencia5|2020-02-27
......
>hCoV-19/Australia/QLD01|2020-01-28
......
>hCoV-19/Vietnam/CM295|2020-03-06
......
>hCoV-19/bat/Yunnan|2013-07-24
......
>hCoV-19/pangolin/Guangdong|2019
......
",598.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,Then run IQ-TREE:,599.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,"iqtree -s ALN_FILE --date TAXNAME -o ""hCoV-19/bat/Yunnan,hCoV-19/pangolin/Guangdong""
",600.0
Inferring time tree with tip dates,Phylogenetic Dating,10.0,71.0,The special keyword TAXNAME for the --date option instructs IQ-TREE to automatically extract the dates from the taxon names.,601.0
Calibrating tree using ancestral dates,Phylogenetic Dating,10.0,72.0,Calibrating tree using ancestral dates,602.0
Calibrating tree using ancestral dates,Phylogenetic Dating,10.0,72.0,Another scenario is that we have sequences from present day and want to calibrate the dates of the ancestral nodes. This will only work if you have fossil date record of at least one ancestral node in the tree. Then you again need to prepare a date file which looks like:,603.0
Calibrating tree using ancestral dates,Phylogenetic Dating,10.0,72.0,"taxon1,taxon2	      -50
taxon3,taxon4,taxon5  -100
taxon6                -10
",604.0
Calibrating tree using ancestral dates,Phylogenetic Dating,10.0,72.0,"which, for example, mean that the most recent common ancestor (MRCA) of taxon1 and taxon2 was 50 mya (million year ago) and the MRCA of taxon3, taxon4, taxon5 was 100 mya. Note that no empty space should be added to the comma-separated list of taxa, as empty space is used as a separator between taxon list and dates.",605.0
Calibrating tree using ancestral dates,Phylogenetic Dating,10.0,72.0,Now run IQ-TREE:,606.0
Calibrating tree using ancestral dates,Phylogenetic Dating,10.0,72.0,"iqtree -s ALN_FILE --date DATE_FILE --date-tip 0
",607.0
Calibrating tree using ancestral dates,Phylogenetic Dating,10.0,72.0,"This means that except for taxon6, all other taxa have the date of 0 for presence.",608.0
Calibrating tree using ancestral dates,Phylogenetic Dating,10.0,72.0,"If you know the root date, then you can set it via --date-root option.",609.0
Dating an existing tree,Phylogenetic Dating,10.0,73.0,Dating an existing tree,610.0
Dating an existing tree,Phylogenetic Dating,10.0,73.0,"If you already have a tree, you can use option -te TREE_FILE to ask IQ-TREE to load and fix this tree topology:",611.0
Dating an existing tree,Phylogenetic Dating,10.0,73.0,"iqtree -s ALN_FILE --date DATE_FILE -te TREE_FILE
",612.0
Dating an existing tree,Phylogenetic Dating,10.0,73.0,"This will work with the scenarios above, i.e., IQ-TREE will date the user-defined tree instead of the ML tree. To further speed up the process: If you know the model already, you set can it via -m option; or in a partitioned analysis, you can provide a partition file with specified models.",613.0
Obtaining confidence intervals,Phylogenetic Dating,10.0,74.0,Obtaining confidence intervals,614.0
Obtaining confidence intervals,Phylogenetic Dating,10.0,74.0,"To infer the confidence interval of the estimated dates, use --date-ci option:",615.0
Obtaining confidence intervals,Phylogenetic Dating,10.0,74.0,"iqtree -s ALN_FILE --date DATE_FILE --date-ci 100
",616.0
Obtaining confidence intervals,Phylogenetic Dating,10.0,74.0,"which will resample branch lengths 100 times to infer the confidence intervals. Note that this is not bootstrap and the method is much faster but unpublished. Roughly speaking, it is based on a mixture of Poisson and lognormal distributions for a relaxed clock model. You can control the standard deviation of the lognormal distribution via --clock-sd option. The default is 0.2. If you set a higher value, the confidence interval will become wider.",617.0
Excluding outlier taxa/nodes,Phylogenetic Dating,10.0,75.0,Excluding outlier taxa/nodes,618.0
Excluding outlier taxa/nodes,Phylogenetic Dating,10.0,75.0,"Long branches may cause biased date estimates. To detect and exclude outlier taxa or nodes prior to dating, use --date-outlier option:",619.0
Excluding outlier taxa/nodes,Phylogenetic Dating,10.0,75.0,"iqtree -s ALN_FILE --date DATE_FILE --date-outlier 3
",620.0
Excluding outlier taxa/nodes,Phylogenetic Dating,10.0,75.0,"that specifies a z-score threshold to detect outliers. The higher this value is, the more outliers will be removed from the resulting time tree.",621.0
Full list of LSD2 options,Phylogenetic Dating,10.0,76.0,Full list of LSD2 options,622.0
Full list of LSD2 options,Phylogenetic Dating,10.0,76.0,"The main options in IQ-TREE provide easy access to the key LSD2 functions. If you would like more control of what LSD2 is doing, you can use the --date-options ""..."" command to pass any valid options to LSD2. For example, to control the way that LSD2 treats outliers, you can do this:",623.0
Full list of LSD2 options,Phylogenetic Dating,10.0,76.0,"iqtree -s ALN_FILE --date DATE_FILE --date-options ""-e 2""
",624.0
Full list of LSD2 options,Phylogenetic Dating,10.0,76.0,"A full list of the options for LSD2 can be obtained by downloading LSD2 and running lsd2 -h, the output of that command is reproduced here for convenience:",625.0
Full list of LSD2 options,Phylogenetic Dating,10.0,76.0,"LSD: LEAST-SQUARES METHODS TO ESTIMATE RATES AND DATES - v.1.8

DESCRIPTION
	This program estimates the rate and the dates of the input phylogenies given some temporal constraints.
	It minimizes the square errors of the branch lengths under normal distribution model.

SYNOPSIS
	./lsd [-i inputFile] [-d inputDateFile] [-o outputFile] [-s sequenceLength] [-g outgroupFile] [-f nbSamplings] 
OPTIONS
	-a rootDate
	   To specify the root date if there's any. If the root date is not a number, but a string (ex: 2020-01-10, or b(2019,2020)) then it should
	   be put between the quotes.
	-b varianceParameter
	   The parameter (between 0 and 1) to compute the variances in option -v. It is the pseudo positive constant to add to the branch lengths
	   when calculating variances, to adjust the dependency of variances to branch lengths. By default b is the maximum between median branch length
	   and 10/seqlength; but it should be adjusted  based on how/whether the input tree is relaxed or strict. The smaller it is the more variances
	   would be linear to branch lengths, which is relevant for strict clock. The bigger it is the less effect of branch lengths on variances, 
	   which might be better for relaxed clock.
	-d inputDateFile
	   This options is used to read the name of the input date file which contains temporal constraints of internal nodes
	   or tips. An internal node can be defined either by its label (given in the input tree) or by a subset of tips that have it as 
	   the most recent common ancestor (mrca). A date could be a real or a string or format year-month-day.
	   The first line of this file is the number of temporal constraints. A temporal constraint can be fixed date, or a 
	   lower bound l(value), or an upper bound u(value), or an interval b(v1,v2)
	   For example, if the input tree has 4 taxa a,b,c,d, and an internal node named n, then following is a possible date file:
	    6
	    a l(2003.12)
	    b u(2007.07)
	    c 2005
	    d b(2001.2,2007.11)
	    mrca(a,b,c,d) b(2000,2001)
	    n l(2004.3)
	   If this option is omitted, and option -a, -z are also omitted, the program will estimate relative dates by giving T[root]=0 and T[tips]=1.
	-D outDateFormat
	    Specify output date format: 1 for real, 2 for year-month-day. By default the program will guess the format of input dates and uses it for
	    output dates.
	-e ZscoreOutlier
	   This option is used to estimate and exclude outlier nodes before dating process.
	   LSD2 normalize the branch residus and decide a node is outlier if its related residus is great than the ZscoreOutlier.
	   A normal value of ZscoreOutliercould be 3, but you can adjust it bigger/smaller depending if you want to have
	   less/more outliers. Note that for now, some functionalities could not be combined with outliers estimation, for example 
	   estimating multiple rates, imprecise date constraints.
	-f samplingNumberCI
	   This option calculates the confidence intervals of the estimated rate and dates. The branch lengths of the esimated
	   tree are sampled samplingNumberCI times to generate a set of simulated trees. To generate simulated lengths
	   for each branch, we use a Poisson distribution whose mean equals to the estimated one multiplied by the sequence length, which is 
	   1000 by default if nothing was specified via option -s. Long sequence length tends to give small confidence intervals. To avoid 
	   over-estimate the confidence intervals in the case of very long sequence length but not necessarily strict molecular clock, you 
	   could use a smaller sequence length than the actual ones. Confidence intervals are written in the nexus tree with label CI_height,
	   and can be visualzed with Figtree under Node bar feature.
	-g outgroupFile
	   If your data contain outgroups, then specify the name of the outgroup file here. The program will use the outgroups to root the trees.
	   If you use this combined with options -G, then the outgroups will be removed. The format of this file should be:
	        n
	        OUTGROUP1
	        OUTGROUP2
	        ...
	        OUTGROUPn
	-F 
	   By default without this option, we impose the constraints that the date of every node is equal or smaller then the
	   dates of its descendants, so the running time is quasi-linear. Using this option we ignore this temporal constraints, and
	   the the running time becomes linear, much faster.
	-h help
	   Print this message.
	-i inputTreesFile
	   The name of the input trees file. It contains tree(s) in newick format, each tree on one line. Note that the taxa sets of all
	   trees must be the same.
	-j
	   Verbose mode for output messages.
	-G
	   Use this option to remove the outgroups (given in option -g) in the estimated tree. If this option is not used, the outgroups 
	   will be kept and the root position in estimated on the branch defined by the outgroups.
	-l nullBlen
	   A branch in the input tree is considered informative if its length is greater this value. By default it is 0.5/seq_length. Only 
	   informative branches are forced to be bigger than a minimum branch length (see option -u for more information about this).
	-m samplingNumberOutlier
	   The number of dated nodes to be sampled when detecting outlier nodes. This should be smaller than the number of dated nodes,
	   and is 10 by default.
	-n datasetNumber
	   The number of trees that you want to read and analyse.
	-o outputFile
	   The base name of the output files to write the results and the time-scale trees.
	-p partitionFile
	   The file that defines the partition of branches into multiple subsets in the case that you know each subset has a different rate.
	   In the partition file, each line contains the name of the group, the prior proportion of the group rate compared to the main rate
	   (selecting an appropriate value for this helps to converge faster), and a list of subtrees whose branches are supposed to have the 
	   same substitution rate. All branches that are not assigned to any subtree form a group having another rate.
	   A subtree is defined between {}: its first node corresponds to the root of the subtree, and the following nodes (if there any) 
	   correspond to the tips of the subtree. If the first node is a tip label then it takes the mrca of all tips as the root of the subtree.
	   If the tips of the subtree are not defined (so there's only the defined root), then by 
	   default this subtree is extended down to the tips of the full tree. For example the input tree is 
	   ((A:0.12,D:0.12)n1:0.3,((B:0.3,C:0.5)n2:0.4,(E:0.5,(F:0.2,G:0.3)n3:0.33)n4:0.22)n5:0.2)root;
	   and you have the following partition file:
	         group1 1 {n1} {n5 n4}
	         group2 1 {n3}
	   then there are 3 rates: the first one includes the branches (n1,A), (n1,D), (n5,n4), (n5,n2), (n2,B), (n2,C); the second one 
	   includes the branches (n3,F), (n3,G), and the last one includes all the remaining branches. If the internal nodes don't have labels,
	   then they can be defined by mrca of at least two tips, for example n1 is mrca(A,D)
	-q standardDeviationRelaxedClock
	   This value is involved in calculating confidence intervals to simulate a lognormal relaxed clock. We multiply the simulated branch lengths
	   with a lognormal distribution with mean 1, and standard deviation q. By default q is 0.2. The bigger q is, the more your tree is relaxed
	   and give you bigger confidence intervals.
	-r rootingMethod
	   This option is used to specify the rooting method to estimate the position of the root for unrooted trees, or
	   re-estimate the root for rooted trees. The principle is to search for the position of the root that minimizes
	   the objective function.
	   Use -r l if your tree is rooted, and you want to re-estimate the root locally around the given root.
	   Use -r a if you want to estimate the root on all branches (ignoring the given root if the tree is rooted).
	       In this case, if the constrained mode is chosen (option -c), method ""a"" first estimates the root without using the constraints.
	       After that, it uses the constrained mode to improve locally the position of the root around this pre-estimated root.
	   Use -r as if you want to estimate to root using constrained mode on all branches.
	   Use -r k if you want to re-estimate the root position on the same branche of the given root.
	       If combined with option -g, the root will be estimated on the branche defined by the outgroups.
	-R round_time
	   This value is used to round the minimum branch length of the time scaled tree. The purpose of this is to make the minimum branch length
	   a meaningful time unit, such as day, week, year ... By default this value is 365, so if the input dates are year, the minimum branch
	   length is rounded to day. The rounding formula is round(R*minblen)/R.
	-s sequenceLength
	   This option is used to specify the sequence length when estimating confidence intervals (option -f). It is used to generate 
	   integer branch lengths (number of substitutions) by multiplying this with the estimated branch lengths. By default it is 1000.
	-S minSupport
	   Together with collapsing internal short branches (see option -l), users can also collapse internal branches having weak support values (if
	   provided in the input tree) by using this option. The program will collapse all internal branches having support <= the specifed value.
	-t rateLowerBound
	   This option corresponds to the lower bound for the estimating rate. It is 1e-10 by default.
	-u minBlen
	   By default without this option, lsd2 forces every branch of the time scaled tree to be greater than 1/(seq_length*rate) where rate is
	   an pre-estimated median rate. This value is rounded to the number of days or weeks or years, depending on the rounding parameter -R.
	   By using option -u, the program will not estimate the minimum branch length but use the specified value instead.
	-U minExBlen
	   Similar to option -u but applies for external branches if specified. If it's not specified then the minimum branch length of external
	   branches is set the same as the one of internal branch.
	-v variance
	   Use this option to specify the way you want to apply variances for the branch lengths. Variances are used to recompense big errors on
	   long estimated branch lengths. The variance of the branch Bi is Vi = (Bi+b) where b is specified by option -b.
	   If variance=0, then we don't use variance. If variance=1, then LSD uses the input branch lengths to calculate variances.
	   If variance=2, then LSD runs twice where the second time it calculates the variances based on the estimated branch
	   lengths of the first run. By default variance=1.
	-V 
	   Get the actual version.
	-w givenRte
	   This option is used to specify the name of the file containing the substitution rates.
	   In this case, the program will use the given rates to estimate the dates of the nodes.
	   This file should have the following format
	        RATE1
	        RATE2
	        ...
	  where RATEi is the rate of the tree i in the inputTreesFile.
	-z tipsDate
	   To specify the tips date if they are all equal. If the tips date is not a number, but a string (ex: 2020-01-10, or b(2019,2020))
	   then it should be put between the quotes.
",626.0
Counts files,Polymorphism-aware models,11.0,77.0,Counts files,627.0
Counts files,Polymorphism-aware models,11.0,77.0,"The input of PoMo is allele frequency data. Especially, when populations have many individuals it is preferable to count the number of bases at each position compared to providing data for each chromosome in a FASTA file. Thereby file size is decreased and parsed faster.",628.0
Counts files,Polymorphism-aware models,11.0,77.0,Counts files contain:,629.0
Counts files,Polymorphism-aware models,11.0,77.0,"One headerline that specifies the file as counts file and states the number of populations (leaves on the tree) as well as the number of sites (separated by white space).A second headerline with white space separated headings: CRHOM (chromosome), POS (position) and sequence names.Many lines with counts of A, C, G and T bases and their respective positions.",630.0
Counts files,Polymorphism-aware models,11.0,77.0,Comments:,631.0
Counts files,Polymorphism-aware models,11.0,77.0,Lines before the first headerline starting with # are treated as comments.,632.0
Counts files,Polymorphism-aware models,11.0,77.0,Example:,633.0
Counts files,Polymorphism-aware models,11.0,77.0,"COUNTSFILE  NPOP 5   NSITES N
CHROM  POS  Sheep    BlackSheep  RedSheep  Wolf     RedWolf
1      1    0,0,1,0  0,0,1,0     0,0,1,0   0,0,5,0  0,0,0,1
1      2    0,0,0,1  0,0,0,1     0,0,0,1   0,0,0,5  0,0,0,1
.
.
.
9      8373 0,0,0,1  1,0,0,0     0,1,0,0   0,1,4,0  0,0,1,0
.
.
.
Y      9999 0,0,0,1  0,1,0,0     0,1,0,0   0,5,0,0  0,0,1,0
",634.0
Counts files,Polymorphism-aware models,11.0,77.0,The download also includes an example counts file called example.cf. This file is a subset of the great ape data that has been analyzed in one of our publications. It includes twelve great ape population with one to 23 inividuals each (two to 56 chromosomes).,635.0
Counts files,Polymorphism-aware models,11.0,77.0,Conversion scripts,636.0
Counts files,Polymorphism-aware models,11.0,77.0,"If you do not want to create counts files with your own scripts, you can use the python script that we provide. For detailed instructions, please refer to the GitHub repository of the counts file library cflib.",637.0
First running example,Polymorphism-aware models,11.0,78.0,First running example,638.0
First running example,Polymorphism-aware models,11.0,78.0,You can now start to reconstruct a maximum-likelihood tree from this alignment by entering (assuming that example.cf is in the same folder):,639.0
First running example,Polymorphism-aware models,11.0,78.0,"iqtree -s example.cf -m HKY+P
",640.0
First running example,Polymorphism-aware models,11.0,78.0,"or, e.g.,",641.0
First running example,Polymorphism-aware models,11.0,78.0,"iqtree -nt 4 -s example.cf -m HKY+P
",642.0
First running example,Polymorphism-aware models,11.0,78.0,"if you use the multicore (OMP) version. -s specifies of the alignment file and -m the model (HKY substitution model with polymorphisms; PoMo), similar to the standard IQ-TREE usage. At the end of the run IQ-TREE writes the same output files as in the standard version (see tutorial).",643.0
First running example,Polymorphism-aware models,11.0,78.0,"example.cf.iqtree: the main report file that is self-readable. You should look at this file to see the computational results. It also contains a textual representation of the final tree.example.cf.treefile: the ML tree in NEWICK format, which can be visualized by any supported tree viewer programs like FigTree or iTOL.example.cf.log: log file of the entire run (also printed on the screen). To report bugs, please send this log file and the original alignment file to the authors.",644.0
First running example,Polymorphism-aware models,11.0,78.0,"The default prefix of all output files is the alignment file name. However, you can always change the prefix using the -pre option, e.g.:",645.0
First running example,Polymorphism-aware models,11.0,78.0,"iqtree -s example.cf -pre myprefix
",646.0
First running example,Polymorphism-aware models,11.0,78.0,This prevents output files to be overwritten when you perform multiple analyses on the same alignment within the same folder.,647.0
Substitution models,Polymorphism-aware models,11.0,79.0,Substitution models,648.0
Substitution models,Polymorphism-aware models,11.0,79.0,"Different DNA substitution models can be selected with the -m option. E.g., to select the GTR model, run IQ-TREE with:",649.0
Substitution models,Polymorphism-aware models,11.0,79.0,"iqtree -s example.cf -m GTR+P
",650.0
Substitution models,Polymorphism-aware models,11.0,79.0,"TIP: For a quick overview of all available models in IQ-TREE, run the command iqtree -h and scroll to the heading POLYMORPHISM AWARE MODELS (PoMo).",651.0
Virtual population size,Polymorphism-aware models,11.0,80.0,Virtual population size,652.0
Virtual population size,Polymorphism-aware models,11.0,80.0,"PoMo describes the evolution of populations along a phylogeny by means of a virtual population of constant size N, which defaults to nine (for details, see Schrempf et al., 2016). This is a good and stable default value. If only very few chromosomes have been sequenced per population (e.g., two to four), N should be lowered to the average number of chromosomes per population. If enough data is available and calculations are not too time consuming, we advise to increase N up to a maximum of 19. You can choose odd values from three to 19 as well as 2 and 10. E.g., to set N to 19:",653.0
Virtual population size,Polymorphism-aware models,11.0,80.0,"iqtree -s example.cf -m HKY+P+N19
",654.0
Level of polymorphism,Polymorphism-aware models,11.0,81.0,Level of polymorphism,655.0
Level of polymorphism,Polymorphism-aware models,11.0,81.0,"As of version 1.6, IQ-TREE with PoMo also allows fixation of the level of heterozygosity, which is also called Watterson’s theta or 4Nu. When analyzing population data, the amount of polymorphism is inferred during maximization of the likelihood. However, in some situations it may be useful to set the level of polymorphism to the observed value in the data (empirical value):",656.0
Level of polymorphism,Polymorphism-aware models,11.0,81.0,"iqtree -s example.cf -m HKY+P{EMP}
",657.0
Level of polymorphism,Polymorphism-aware models,11.0,81.0,"or to set the level of polymorphism by hand, e.g.,:",658.0
Level of polymorphism,Polymorphism-aware models,11.0,81.0,"iqtree -s example.cf -m HKY+P{0.0025}
",659.0
Level of polymorphism,Polymorphism-aware models,11.0,81.0,"Together with the ability to set model parameters, the model can be fully specified, e.g.:",660.0
Level of polymorphism,Polymorphism-aware models,11.0,81.0,"iqtree -s example.cf -m HKY{6.0}+P{0.0025}
",661.0
Level of polymorphism,Polymorphism-aware models,11.0,81.0,"This sets the transition to transversion ratio to a value of 6.0 and the level of polymorphism to a value of 0.0025. In this case, IQ-TREE only performs a tree search because the model is fully specified.",662.0
Sampling method,Polymorphism-aware models,11.0,82.0,Sampling method,663.0
Sampling method,Polymorphism-aware models,11.0,82.0,"For advanced users. PoMo offers different methods to read in the data (Schrempf et al., 2016). Briefly, each population and site are treated as follows",664.0
Sampling method,Polymorphism-aware models,11.0,82.0,"Weighted binomial (default, +WB): assign the likelihood of each PoMo state to its probability of leading to the observed data, assuming it is binomially sampled. Example: iqtree -s example.cf -m HKY+P+WB
Weighted hypergeometric (+WH): assign the likelihood of each PoMo state to its probability of leading to the observed data, assuming it is hypergeometrically sampled. Example: iqtree -s example.cf -m HKY+P+WH
Sampled: randomly draw N samples with replacement from the given data. The N picked samples constitute a PoMo state which will be assigned a likelihood of 1. All other PoMo states have likelihood 0. Example: iqtree -s example.cf -m HKY+P+S
",665.0
Sampling method,Polymorphism-aware models,11.0,82.0,"We expect a slight overestimation of the heterozygosity for weighted binomial sampling. This is because monomorphic (fixed) states can be reached from polymorphic states during the sampling step, while polymorphic states cannot be reached from monomorphic states (sampling does not involve mutation). I.e., only when the level of heterozygosity at the leaves is overestimated, the sampling step leads to the correct amount of heterozygosity observed in the data.",666.0
Sampling method,Polymorphism-aware models,11.0,82.0,"If you wish to avoid this effect, use weighted hypergeometric sampling. However, we have observed that weighted binomial sampling is more stable.",667.0
State frequency type,Polymorphism-aware models,11.0,83.0,State frequency type,668.0
State frequency type,Polymorphism-aware models,11.0,83.0,"Similar to standard models, the state frequency type can be selected with +F model string modifiers. The default is to set the state frequencies (i.e., the frequencies of the nucleotides A, C, G and T) to the observed values in the data (empirical value). To estimate the allele frequencies together with the rate parameters during maximization of the likelihood, use:",669.0
State frequency type,Polymorphism-aware models,11.0,83.0,"iqtree -s example.cf -m GTR+P+FO
",670.0
Rate heterogeneity,Polymorphism-aware models,11.0,84.0,Rate heterogeneity,671.0
Rate heterogeneity,Polymorphism-aware models,11.0,84.0,"Recently, PoMo allows inference with different rate categories. As of version 1.6, only discrete Gamma rate heterogeneity is supported. Please be aware, that for biological and mathematical reasons (we cannot simply scale the full transition matrix but have to separate the mutational component from genetic drift), the run time scales linearly with the number of rate categories. In the future, we plan to work on decreasing run time as well as implement more rate heterogeneity types. To use a discrete Gamma model with 4 rate categories, use:",672.0
Rate heterogeneity,Polymorphism-aware models,11.0,84.0,"iqtree -s example.cf -m HKY+P+G4
",673.0
Bootstrap branch support,Polymorphism-aware models,11.0,85.0,Bootstrap branch support,674.0
Bootstrap branch support,Polymorphism-aware models,11.0,85.0,"Bootstrapping works as expected with PoMo. The standard non-parametric bootstrap is invoked by the -b option, e.g., for 100 replicates:",675.0
Bootstrap branch support,Polymorphism-aware models,11.0,85.0,"iqtree -s example.cf -m HKY+P -b 100
",676.0
Bootstrap branch support,Polymorphism-aware models,11.0,85.0,"To overcome the computational burden required by the non-parametric bootstrap, IQ-TREE introduces an ultra fast bootstrap approximation (UFBoot) that is orders of magnitude faster than the standard procedure and provides relatively unbiased branch support values. To run UFBoot, use the option -bb, e.g., for 1000 replicates:",677.0
Bootstrap branch support,Polymorphism-aware models,11.0,85.0,"iqtree -s example.cf -m HKY+P -bb 1000
",678.0
Bootstrap branch support,Polymorphism-aware models,11.0,85.0,"For a detailed description, please refer to the bootstrap tutorial.",679.0
Interpretation of branch lengths,Polymorphism-aware models,11.0,86.0,Interpretation of branch lengths,680.0
Interpretation of branch lengths,Polymorphism-aware models,11.0,86.0,"PoMo estimates the branch length in number of mutations and frequency shifts (drift) per site. The number of drift events compared to the number of mutations becomes higher if the virtual population size is increased. To get the branch length measured in number of substitutions per site which enables a comparison to the branch length estimated by standard DNA substitution models, it has to be divided by N^2. PoMo also outputs the total tree length measured in number of substitutions per site in example.cf.iqtree. An example of the relevant section:",681.0
Interpretation of branch lengths,Polymorphism-aware models,11.0,86.0,"NOTE: The branch lengths of PoMo measure mutations and frequency shifts.
To compare PoMo branch lengths to DNA substitution models use the tree length
measured in substitutions per site.

Total tree length (sum of branch lengths)
 - measured in number of mutations and frequency shifts per site: 0.71200751
 - measured in number of substitutions per site (divided by N^2): 0.00879022
Sum of internal branch lengths
- measured in mutations and frequency shifts per site: 0.01767814 (2.48285810% of tree length)
- measured in substitutions per site: 0.01767814 (2.48285810% of tree length)
",682.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,Inferring unrooted tree with outgroup,683.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,"We first demonstrate the outgroup approach to root the Bovidae family of five sampled species (Yak, Cow, Goat, Sheep and Tibetan antelope) using two outgroup species (Pig and Whale). Please download:",684.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,"An input DNA alignment file for these 7 species.An input partition file that defines 52 genes in this alignment. This is a subset of the mammal dataset (Wu et al., 2018).",685.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,"Choosing a “good” outgroup is an entire topic on its own. In generally, the outgroup must contain taxa that do not belong to the ingroup but are evolutionarily close enough to the ingroup taxa.",686.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,"To infer an unrooted tree, run:",687.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,"iqtree2 -s bovidae_outgroup.phy -p bovidae.nex -B 1000 -T AUTO --prefix rev_dna_outg
",688.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,"that will invoke the ultrafast bootstrap with 1000 replicates (-B 1000), detect the optimal number of threads (-T AUTO) and write all output files with the prefix rev_dna_outg.",689.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,The input alignment contains protein-coding genes. We can ask IQ-TREE to translate the alignment into protein sequences using the standard genetic code (-st NT2AA) and perform an amino-acid analysis on the translated alignment with:,690.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,"iqtree2 -s bovidae_outgroup.phy -p bovidae.nex -B 1000 -T AUTO -st NT2AA --prefix rev_aa_outg
",691.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,where setting the prefix to rev_aa_outg avoids file overwriting with the previous run. The resulting tree may now look like (extracted from rev_aa_outg.iqtree):,692.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,"NOTE: Tree is UNROOTED although outgroup taxon 'Yak' is drawn at root
Numbers in parentheses are  ultrafast bootstrap support (%)

+--Yak
|
+--Cow
|
|          +--Goat
|       +--| (100)
|       |  +--Sheep
|   +---| (100)
|   |   +---Tibetan_antelope
+---| (100)
    |                      +-------------------------------Wild_pig
    +----------------------| (100)
                           +-------------------Minke_whale
",693.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,You can open rev_aa_outg.treefile in a tree viewer software (e.g. FigTree) and re-root the tree on the branch separating the outgroup (Wild_pig and Minke_whale) from the remaining ingroup to obtain an outgroup-rooted tree.,694.0
Inferring unrooted tree with outgroup,Rooting phylogenetic trees,12.0,87.0,"Finally, if you want you can also perform a non-partition analysis by removing the option -p.",695.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,Inferring rooted trees without outgroup,696.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,We will now infer a rooted tree using non-reversible models. Please download:,697.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"An input DNA alignment file for 5 ingroup species (Yak, Cow, Goat, Sheep and Tibetan antelope). This is a sub-alignment of the alignment above. We can re-use the same partition file.",698.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"To speed up the analysis, we will perform two steps. The first step is the same as the run above to infer an unrooted tree using reversible models:",699.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"iqtree2 -s bovidae.phy -p bovidae.nex -B 1000 -T AUTO --prefix rev_dna
",700.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"This run will also write the best partitioning scheme to rev_dna.best_scheme.nex file. In the second step, we will re-use this best scheme but replace the substitution model with the most general non-reversible DNA model, 12.12 or UNREST (see this doc) to obtain a rooted tree:",701.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"iqtree2 -s bovidae.phy -p rev_dna.best_scheme.nex --model-joint 12.12 -B 1000 -T AUTO --prefix nonrev_dna
",702.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,The option --model-joint 12.12 tells IQ-TREE use a linked substitution model 12.12 across all partitions. This is to avoid potential over-parameterization as this is very parameter-rich model with 12 parameters.,703.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,The resulting tree extracted from .iqtree file might look like this:,704.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"NOTE: Tree is ROOTED at virtual root '__root__'
Numbers in parentheses are  ultrafast bootstrap support (%)

       +---Yak
+------| (72)
|      |                                       +----------Goat
|      |                                   +---| (100)
|      |                                   |   +----------Sheep
|      +-----------------------------------| (95)
|                                          +-------------Tibetan_antelope
|
+**Cow
|
+**__root__
",705.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,(You can better visualize the .treefile in a tree viewer software).,706.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,This run will write an additional tree file nonrev_dna.rootstrap.nex with rootstrap support values (see box below for definition) annotated on every branch of the tree. If you open this file in FigTree it may look like this (click on “Branch Labels” and choose rootstrap for “Display” as shown in the figure):,707.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"It shows that the tree might be rooted in the branch leading to Cow with a rootstrap support of 72%, which is rather low. The 2nd best branch separating Cow and Yak from the rest has a rootstrap support of 17.9%. So with this dataset the DNA model cannot reliably tell where the root position is, but at least provides some candidates.",708.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"Rootstrap: To compute rootstrap supports, we conduct a bootstrap analysis to obtain a number of rooted bootstrap trees using non-reversible models. We define the rootstrap support for each branch in the maximum likelihood (ML) tree, as the proportion of rooted bootstrap trees that have the root on that branch. The rootstrap support values are computed for all the branches including external branches. The sum of the rootstrap support values along the tree are always smaller than or equal to one. A sum that is smaller than one can occur when one or more bootstrap replicates are rooted on a branch that does not occur in the ML tree.",709.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,We will now try the amino-acid model to see if that helps. We again use -st NT2AA option to conveniently perform this analysis:,710.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"# step 1: infer unrooted tree with reversible models
iqtree2 -s bovidae.phy -p bovidae.nex -B 1000 -T AUTO -st NT2AA --prefix rev_aa

# step 2: infer rooted tree with linked non-reversible models
iqtree2 -s bovidae.phy -p rev_aa.best_scheme.nex --model-joint NONREV -B 1000 -T AUTO -st NT2AA --prefix nonrev_aa
",711.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,The option --model-joint NONREV tells IQ-TREE to use the most general amino-acid model NONREV and to link the NONREV model parameters across all partitions: NONREV has 379 parameters and linking them across partitions will avoid over-parameterization. The tree extracted from nonrev_aa.iqtree file now may look like:,712.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"NOTE: Tree is ROOTED at virtual root '__root__'
Numbers in parentheses are  ultrafast bootstrap support (%)

                                 +------------Yak
+--------------------------------| (100)
|                                +----------------Cow
|
|                                   +-------------------Goat
|                          +--------| (100)
|                          |        +---------------------Sheep
+--------------------------| (100)
|                          +-----------------------------Tibetan_antelope
|
+**__root__
",713.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"Interestingly, the amino-acid model suggests a different root position compared with the DNA model. But this position agrees with the outgroup rooting approach. And the tree nonrev_aa.rootstrap.nex with rootstrap supports look like:",714.0
Inferring rooted trees without outgroup,Rooting phylogenetic trees,12.0,88.0,"That means, the branch separating Yak and Cow from the rest receives a very high rootstrap support of 99.9%. Therefore, the amino-acid model seems to have a much higher power to detect the root, compared with the DNA model.",715.0
Testing root positions,Rooting phylogenetic trees,12.0,89.0,Testing root positions,716.0
Testing root positions,Rooting phylogenetic trees,12.0,89.0,"The rootstrap introduced above is one way to measure our confidence in the root placement, but it is not a statistical test. Alternatively, we can apply the tree topology tests to compare the log-likelihoods of the trees being rooted on every branch of the ML tree. IQ-TREE v2.1.3 provides a convenient option --root-test that will re-root the tree on every branch and perform the test for you. So you can run:",717.0
Testing root positions,Rooting phylogenetic trees,12.0,89.0,"iqtree2 -s bovidae.phy -p rev_aa.best_scheme.nex --model-joint NONREV -st NT2AA --root-test -zb 1000 -au -te nonrev_aa.treefile --prefix nonrev_aa_test
",718.0
Testing root positions,Rooting phylogenetic trees,12.0,89.0,-zb 1000 -au is to perform several tree topology tests including the approximately-unbiased (AU) test for the tree found above (-te nonrev_aa.treefile). This run will write a file nonrev_aa_test.roottest.csv which might look like:,719.0
Testing root positions,Rooting phylogenetic trees,12.0,89.0,"# Test results for rooting positions on every branch
# This file can be read in MS Excel or in R with command:
#    dat=read.csv('nonrev_aa_test.roottest.csv',comment.char='#')
# Columns are comma-separated with following meanings:
#    ID:      Branch ID
#    logL:    Log-likelihood of the tree rooted at this branch
#    deltaL:  logL difference from the maximal logl
#    bp-RELL: bootstrap proportion using RELL method (Kishino et al. 1990)
#    p-KH:    p-value of one sided Kishino-Hasegawa test (1989)
#    p-SH:    p-value of Shimodaira-Hasegawa test (2000)
#    c-ELW:   Expected Likelihood Weight (Strimmer & Rambaut 2002)
#    p-AU:    p-value of approximately unbiased (AU) test (Shimodaira, 2002)
ID,logL,deltaL,bp-RELL,p-KH,p-SH,c-ELW,p-AU
1,-90388.66044,0,0.983,0.96,1,0.9695602131,0.9975595105
8,-90401.6833,13.02286164,0.005,0.04,0.19,0.01262108065,0.00558089101
5,-90401.68371,13.0232665,0.01,0.04,0.19,0.01262245766,0.006374455939
3,-90410.10499,21.44455589,0.002,0.016,0.104,0.002397842346,0.001014359781
2,-90410.1084,21.44796542,0,0.016,0.104,0.002389013519,0.0008999725939
6,-90413.04441,24.38397245,0,0.005,0.059,0.0002047272296,0.0004975092439
7,-90413.04797,24.38753181,0,0.005,0.059,0.0002046654974,0.0005061888325
",720.0
Testing root positions,Rooting phylogenetic trees,12.0,89.0,"The branches are sorted by log-likelihoods in descending order. The last column (p-AU) shows the p-values of the AU test. The branch ID 1 has an AU p-value of 0.9975595105, whereas all other branches has p-values < 0.01. To associate branch ID you can return to the FigTree window for nonrev_aa.rootstrap.nex file and select “Display” to “id” in the “Branch Labels” tab.",721.0
Testing root positions,Rooting phylogenetic trees,12.0,89.0,"The conclusion from this analysis: we can reject all rooting positions on branches other than branch ID 1, which agrees with the rootstrap measure.",722.0
Testing root positions,Rooting phylogenetic trees,12.0,89.0,TIP: These options --root-test -zb 1000 -au can be combined with the rootstrap run in the previous section to calculate the rootstrap support values and the rooting test p-values in one single analysis.,723.0
DNA models,Substitution models,13.0,90.0,DNA models,724.0
DNA models,Substitution models,13.0,90.0,Base substitution rates,725.0
DNA models,Substitution models,13.0,90.0,IQ-TREE includes all common DNA models (ordered by complexity):,726.0
DNA models,Substitution models,13.0,90.0,"ModeldfExplanationCodeJC or JC690Equal substitution rates and equal base frequencies (Jukes and Cantor, 1969).000000F813Equal rates but unequal base freq. (Felsenstein, 1981).000000K80 or K2P1Unequal transition/transversion rates and equal base freq. (Kimura, 1980).010010HKY or HKY854Unequal transition/transversion rates and unequal base freq. (Hasegawa, Kishino and Yano, 1985).010010TN or TN935Like HKY but unequal purine/pyrimidine rates (Tamura and Nei, 1993).010020TNe2Like TN but equal base freq.010020K81 or K3P2Three substitution types model and equal base freq. (Kimura, 1981).012210K81u5Like K81 but unequal base freq.012210TPM22AC=AT, AG=CT, CG=GT and equal base freq.010212TPM2u5Like TPM2 but unequal base freq.010212TPM32AC=CG, AG=CT, AT=GT and equal base freq.012012TPM3u5Like TPM3 but unequal base freq.012012TIM6Transition model, AC=GT, AT=CG and unequal base freq.012230TIMe3Like TIM but equal base freq.012230TIM26AC=AT, CG=GT and unequal base freq.010232TIM2e3Like TIM2 but equal base freq.010232TIM36AC=CG, AT=GT and unequal base freq.012032TIM3e3Like TIM3 but equal base freq.012032TVM7Transversion model, AG=CT and unequal base freq.012314TVMe4Like TVM but equal base freq.012314SYM5Symmetric model with unequal rates but equal base freq. (Zharkikh, 1994).012345GTR8General time reversible model with unequal rates and unequal base freq. (Tavare, 1986).012345",727.0
DNA models,Substitution models,13.0,90.0,"The last column Code is a 6-digit code defining the equality constraints for 6 relative substitution rates: A-C, A-G, A-T, C-G, C-T and G-T. 010010 means that A-G rate is equal to C-T rate (corresponding to 1 in the code) and the remaining four substitution rates are equal (corresponding to 0 in the code). Thus, 010010 is equivalent to K80 or HKY model (depending on whether base frequencies are equal or not). 012345 is equivalent to GTR or SYM model as there is no restriction defined by such 6-digit code.",728.0
DNA models,Substitution models,13.0,90.0,"Moreover, IQ-TREE supports arbitrarily restricted DNA model via a 6-digit code, e.g. with option -m 012012+G.",729.0
DNA models,Substitution models,13.0,90.0,"NOTE: The digits in the codes do not necessarily have to have the same order as above. That means ‘101101’ describes the same matrix as ‘010010’. The last rate, which corresponds to G-T, (and all rates with the same digit) is always set equal to 1.0 for convenience because the rates are relative.",730.0
DNA models,Substitution models,13.0,90.0,"If users want to fix model parameters, append the model name with a curly bracket {, followed by the comma-separated rate parameters, and a closing curly bracket }. For example, GTR{1.0,2.0,1.5,3.7,2.8} specifies 6 substitution rates A-C=1.0, A-G=2.0, A-T=1.5, C-G=3.7, C-T=2.8 and G-T=1.0.",731.0
DNA models,Substitution models,13.0,90.0,"Another example is for model TIM2 that has the 6-digit code 010232. Thus, TIM2{4.39,5.30,12.1} means that A-C=A-T=4.39 (coded 0), A-G=5.30 (coded 1), C-T=12.1 (coded 3) and C-G=G-T=1.0 (coded 2). This is, in turn, equivalent to specifying GTR{4.39,5.30,4.39,1.0,12.1}.",732.0
DNA models,Substitution models,13.0,90.0,Base frequencies,733.0
DNA models,Substitution models,13.0,90.0,Users can specify three different kinds of base frequencies:,734.0
DNA models,Substitution models,13.0,90.0,FreqTypeExplanation+FEmpirical base frequencies. This is the default if the model has unequal base freq.+FQEqual base frequencies.+FOOptimized base frequencies by maximum-likelihood.,735.0
DNA models,Substitution models,13.0,90.0,"For example, GTR+FO optimizes base frequencies by ML whereas GTR+F (default) counts base frequencies directly from the alignment.",736.0
DNA models,Substitution models,13.0,90.0,"Finally, users can fix base frequencies with e.g. GTR+F{0.1,0.2,0.3,0.4} to fix the corresponding frequencies of A, C, G and T (must sum up to 1.0).",737.0
DNA models,Substitution models,13.0,90.0,Lie Markov models,738.0
DNA models,Substitution models,13.0,90.0,"Starting with version 1.6, IQ-TREE supports a series of Lie Markov models (Woodhams et al., 2015), many of which are non-reversible models. Lie Markov models have a consistent property, which is lacking in other common models such as GTR. The following table shows the list of all Lie Markov models (the number before . in the name shows the number of parameters of the model):",739.0
DNA models,Substitution models,13.0,90.0,ModelRev?FreqNote1.1Yes0equiv. to JC2.2bYes0equiv. to K2P3.3aYes0equiv. to K3P3.3bNo0 3.3cYes0equiv. to TNe3.4Yes1 4.4aYes3equiv. to F814.4bYes1 4.5aNo1 4.5bNo1 5.6aNo0 5.6bNo3 5.7aNo2 5.7bNo0 5.7cNo0 5.11aNo2 5.11bNo0 5.11cNo0 5.16No1 6.6No1equiv. to STRSYM (strand symmetric model)6.7aNo3F81+K3P6.7bNo3 6.8aNo3 6.8bNo1 6.17aNo1 6.17bNo1 8.8No3 8.10aNo3 8.10bNo1 8.16No3 8.17No3 8.18No3 9.20aNo2 9.20bNo0Doubly stochastic10.12No3 10.34No3 12.12No3equiv. to UNREST (unrestricted model),740.0
DNA models,Substitution models,13.0,90.0,Column Rev? shows whether the model is reversible or not. Column Freq shows the number of free base frequencies. 0 means equal base frequency; 1 means f(A)=f(G) and f(C)=f(T); 2 means f(A)+f(G)=0.5=f(C)+f(T); 3 means unconstrained frequencies.,741.0
DNA models,Substitution models,13.0,90.0,All Lie Markov models can have one of the following prefices:,742.0
DNA models,Substitution models,13.0,90.0,PrefixMeaningRYpurine-pyrimidine pairing (default)WSweak-strong pairingMKaMino-Keto pairing,743.0
Protein models,Substitution models,13.0,91.0,Protein models,744.0
Protein models,Substitution models,13.0,91.0,Amino-acid exchange rate matrices,745.0
Protein models,Substitution models,13.0,91.0,IQ-TREE supports all common empirical amino-acid exchange rate matrices (alphabetical order):,746.0
Protein models,Substitution models,13.0,91.0,"ModelRegionExplanationBlosum62nuclearBLOcks SUbstitution Matrix (Henikoff and Henikoff, 1992). Note that BLOSUM62 is not recommended for phylogenetic analysis as it was designed mainly for sequence alignments.cpREVchloroplastchloroplast matrix (Adachi et al., 2000).DayhoffnuclearGeneral matrix (Dayhoff et al., 1978).DCMutnuclearRevised Dayhoff matrix (Kosiol and Goldman, 2005).FLUviralInfluenza virus (Dang et al., 2010).HIVbviralHIV between-patient matrix HIV-Bm (Nickle et al., 2007).HIVwviralHIV within-patient matrix HIV-Wm (Nickle et al., 2007).JTTnuclearGeneral matrix (Jones et al., 1992).JTTDCMutnuclearRevised JTT matrix (Kosiol and Goldman, 2005).LGnuclearGeneral matrix (Le and Gascuel, 2008).mtARTmitochondrialMitochondrial Arthropoda (Abascal et al., 2007).mtMAMmitochondrialMitochondrial Mammalia (Yang et al., 1998).mtREVmitochondrialMitochondrial Vertebrate (Adachi and Hasegawa, 1996).mtZOAmitochondrialMitochondrial Metazoa (Animals) (Rota-Stabelli et al., 2009).mtMetmitochondrialMitochondrial Metazoa (Vinh et al., 2017).mtVermitochondrialMitochondrial Vertebrate (Vinh et al., 2017).mtInvmitochondrialMitochondrial Inverterbrate (Vinh et al., 2017).PoissonnoneEqual amino-acid exchange rates and frequencies.PMBnuclearProbability Matrix from Blocks, revised BLOSUM matrix (Veerassamy et al., 2004).rtREVviralRetrovirus (Dimmic et al., 2002).VTnuclearGeneral ‘Variable Time’ matrix (Mueller and Vingron, 2000).WAGnuclearGeneral matrix (Whelan and Goldman, 2001).GTR20generalGeneral time reversible models with 190 rate parameters. WARNING: Be careful when using this parameter-rich model as parameter estimates might not be stable, especially when not having enough phylogenetic information (e.g. not long enough alignments).",747.0
Protein models,Substitution models,13.0,91.0,Protein mixture models,748.0
Protein models,Substitution models,13.0,91.0,IQ-TREE also supports a series of protein mixture models:,749.0
Protein models,Substitution models,13.0,91.0,"ModelExplanationC10 to C6010, 20, 30, 40, 50, 60-profile mixture models (Le et al., 2008a) as variants of the CAT model (Lartillot and Philippe, 2004) for ML. Note that these models assume Poisson AA replacement and implicitly include a Gamma rate heterogeneity among sites.EX2Two-matrix model for exposed/buried AA sites (Le et al., 2008b).EX3Three-matrix model for highly exposed/intermediate/buried AA sites (Le et al., 2008b).EHOThree-matrix model for extended/helix/other sites (Le et al., 2008b).UL2, UL3Unsupervised-learning variants of EX2 and EX3, respectively.EX_EHOSix-matrix model combining EX2 and EHO (Le and Gascuel, 2010).LG4MFour-matrix model fused with Gamma rate heterogeneity (Le et al., 2012).LG4XFour-matrix model fused with FreeRate heterogeneity (Le et al., 2012).CF4Five-profile mixture model (Wang et al., 2008).",750.0
Protein models,Substitution models,13.0,91.0,One can even combine a protein matrix with a profile mixture model like:,751.0
Protein models,Substitution models,13.0,91.0,LG+C20: Applying LG matrix instead of Poisson for all 20 classes of AA profiles and a Gamma rate heterogeneity.LG+C20+F: Applying LG matrix for 20 classes plus the 21th class of empirical AA profile (counted from the current data) and Gamma rate heterogeneity.JTT+CF4+G: Applying JTT matrix for all 5 classes of AA profiles and Gamma rate heteorogeneity.,752.0
Protein models,Substitution models,13.0,91.0,"Moreover, one can override the Gamma rate by FreeRate heterogeneity:",753.0
Protein models,Substitution models,13.0,91.0,LG+C20+R4: Like LG+C20 but replace Gamma by FreeRate heterogeneity.,754.0
Protein models,Substitution models,13.0,91.0,User-defined empirical protein models,755.0
Protein models,Substitution models,13.0,91.0,"If the matrix name does not match any of the above listed models, IQ-TREE assumes that it is a file containing AA exchange rates and frequencies in PAML format. It contains the lower diagonal part of the matrix and 20 AA frequencies, e.g.:",756.0
Protein models,Substitution models,13.0,91.0,"0.425093 
0.276818 0.751878 
0.395144 0.123954 5.076149 
2.489084 0.534551 0.528768 0.062556 
0.969894 2.807908 1.695752 0.523386 0.084808 
1.038545 0.363970 0.541712 5.243870 0.003499 4.128591 
2.066040 0.390192 1.437645 0.844926 0.569265 0.267959 0.348847 
0.358858 2.426601 4.509238 0.927114 0.640543 4.813505 0.423881 0.311484 
0.149830 0.126991 0.191503 0.010690 0.320627 0.072854 0.044265 0.008705 0.108882 
0.395337 0.301848 0.068427 0.015076 0.594007 0.582457 0.069673 0.044261 0.366317 4.145067 
0.536518 6.326067 2.145078 0.282959 0.013266 3.234294 1.807177 0.296636 0.697264 0.159069 0.137500 
1.124035 0.484133 0.371004 0.025548 0.893680 1.672569 0.173735 0.139538 0.442472 4.273607 6.312358 0.656604 
0.253701 0.052722 0.089525 0.017416 1.105251 0.035855 0.018811 0.089586 0.682139 1.112727 2.592692 0.023918 1.798853 
1.177651 0.332533 0.161787 0.394456 0.075382 0.624294 0.419409 0.196961 0.508851 0.078281 0.249060 0.390322 0.099849 0.094464 
4.727182 0.858151 4.008358 1.240275 2.784478 1.223828 0.611973 1.739990 0.990012 0.064105 0.182287 0.748683 0.346960 0.361819 1.338132 
2.139501 0.578987 2.000679 0.425860 1.143480 1.080136 0.604545 0.129836 0.584262 1.033739 0.302936 1.136863 2.020366 0.165001 0.571468 6.472279 
0.180717 0.593607 0.045376 0.029890 0.670128 0.236199 0.077852 0.268491 0.597054 0.111660 0.619632 0.049906 0.696175 2.457121 0.095131 0.248862 0.140825 
0.218959 0.314440 0.612025 0.135107 1.165532 0.257336 0.120037 0.054679 5.306834 0.232523 0.299648 0.131932 0.481306 7.803902 0.089613 0.400547 0.245841 3.151815 
2.547870 0.170887 0.083688 0.037967 1.959291 0.210332 0.245034 0.076701 0.119013 10.649107 1.702745 0.185202 1.898718 0.654683 0.296501 0.098369 2.188158 0.189510 0.249313 

0.079066 0.055941 0.041977 0.053052 0.012937 0.040767 0.071586 0.057337 0.022355 0.062157 0.099081 0.064600 0.022951 0.042302 0.044040 0.061197 0.053287 0.012066 0.034155 0.069147 
",757.0
Protein models,Substitution models,13.0,91.0,(This is an example of an LG matrix taken from PAML package). Note that the amino-acid order in this file is:,758.0
Protein models,Substitution models,13.0,91.0," A   R   N   D   C   Q   E   G   H   I   L   K   M   F   P   S   T   W   Y   V
Ala Arg Asn Asp Cys Gln Glu Gly His Ile Leu Lys Met Phe Pro Ser Thr Trp Tyr Val
",759.0
Protein models,Substitution models,13.0,91.0,Amino-acid frequencies,760.0
Protein models,Substitution models,13.0,91.0,"By default, AA frequencies are given by the model. Users can change this with:",761.0
Protein models,Substitution models,13.0,91.0,FreqTypeExplanation+Fempirical AA frequencies from the data.+FOML optimized AA frequencies from the data.+FQEqual AA frequencies.,762.0
Protein models,Substitution models,13.0,91.0,"Users can also specify AA frequencies with, e.g.:",763.0
Protein models,Substitution models,13.0,91.0,"+F{0.079066,0.055941,0.041977,0.053052,0.012937,0.040767,0.071586,0.057337,0.022355,0.062157,0.099081,0.064600,0.022951,0.042302,0.044040,0.061197,0.053287,0.012066,0.034155,0.069147}
",764.0
Protein models,Substitution models,13.0,91.0,(Example corresponds to the AA frequencies of the LG matrix).,765.0
Codon models,Substitution models,13.0,92.0,Codon models,766.0
Codon models,Substitution models,13.0,92.0,"To apply a codon model one should use the option -st CODON to tell IQ-TREE that the alignment contains protein coding sequences (otherwise, IQ-TREE thinks that it contains DNA sequences and will apply DNA models). This implicitly applies the standard genetic code. You can change to an other genetic code by appending the appropriate ID to the CODON keyword:",767.0
Codon models,Substitution models,13.0,92.0,"CodeGenetic code meaningCODON1The Standard Code (same as -st CODON)CODON2The Vertebrate Mitochondrial CodeCODON3The Yeast Mitochondrial CodeCODON4The Mold, Protozoan, and Coelenterate Mitochondrial Code and the Mycoplasma/Spiroplasma CodeCODON5The Invertebrate Mitochondrial CodeCODON6The Ciliate, Dasycladacean and Hexamita Nuclear CodeCODON9The Echinoderm and Flatworm Mitochondrial CodeCODON10The Euplotid Nuclear CodeCODON11The Bacterial, Archaeal and Plant Plastid CodeCODON12The Alternative Yeast Nuclear CodeCODON13The Ascidian Mitochondrial CodeCODON14The Alternative Flatworm Mitochondrial CodeCODON16Chlorophycean Mitochondrial CodeCODON21Trematode Mitochondrial CodeCODON22Scenedesmus obliquus Mitochondrial CodeCODON23Thraustochytrium Mitochondrial CodeCODON24Pterobranchia Mitochondrial CodeCODON25Candidate Division SR1 and Gracilibacteria Code",768.0
Codon models,Substitution models,13.0,92.0,(The IDs follow the specification at http://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi).,769.0
Codon models,Substitution models,13.0,92.0,Codon substitution rates,770.0
Codon models,Substitution models,13.0,92.0,IQ-TREE supports several codon models:,771.0
Codon models,Substitution models,13.0,92.0,"ModelExplanationMGNonsynonymous/synonymous (dn/ds) rate ratio (Muse and Gaut, 1994).MGKLike MG with additional transition/transversion (ts/tv) rate ratio.MG1KTS or MGKAP2Like MG with a transition rate (Kosiol et al., 2007).MG1KTV or MGKAP3Like MG with a transversion rate (Kosiol et al., 2007).MG2K or MGKAP4Like MG with a transition rate and a transversion rate (Kosiol et al., 2007).GYNonsynonymous/synonymous and transition/transversion rate ratios (Goldman and Yang, 1994).GY1KTS or GYKAP2Like GY with a transition rate (Kosiol et al., 2007).GY1KTV or GYKAP3Like GY with a transversion rate (Kosiol et al., 2007).GY2K or GYKAP4Like GY with a transition rate and a transversion rate (Kosiol et al., 2007).ECMK07 or KOSI07Empirical codon model (Kosiol et al., 2007).ECMrestRestricted version of ECMK07 that allows only one nucleotide exchange.ECMS05 or SCHN05Empirical codon model (Schneider et al., 2005).",772.0
Codon models,Substitution models,13.0,92.0,"The last three models (ECMK07, ECMrest or ECMS05) are called empirical codon models, whereas the others are called mechanistic codon models.",773.0
Codon models,Substitution models,13.0,92.0,"Moreover, IQ-TREE supports combined empirical-mechanistic codon models using an underscore separator (_). For example:",774.0
Codon models,Substitution models,13.0,92.0,"ECMK07_GY2K: The combined ECMK07 and GY2K model, with the rate entries being multiplication of the two corresponding rate matrices.",775.0
Codon models,Substitution models,13.0,92.0,"Thus, there can be many such combinations.",776.0
Codon models,Substitution models,13.0,92.0,"Starting with version 1.5.6: If the model name does not match any of the above listed models, IQ-TREE assumes that it is a file containing lower diagonal part of non-stop codon exchange rate matrix, non-stop codon frequencies and a list of non-stop codons. The rest of the file will be ignored. Example files (ECMrest.dat and ECMunrest.dat) can be downloaded from the supplementary material (Kosiol et al., 2007).",777.0
Codon models,Substitution models,13.0,92.0,"NOTE: Branch lengths under codon models are interpreted as number of nucleotide substitutions per codon site. Thus, they are typically 3 times longer than under DNA models.",778.0
Codon models,Substitution models,13.0,92.0,Codon frequencies,779.0
Codon models,Substitution models,13.0,92.0,IQ-TREE supports the following codon frequencies:,780.0
Codon models,Substitution models,13.0,92.0,FreqTypeExplanation+FEmpirical codon frequencies counted from the data.+FQEqual codon frequencies.+F1X4Unequal nucleotide frequencies but equal nt frequencies over three codon positions.+F3X4Unequal nucleotide frequencies and unequal nt frequencies over three codon positions.,781.0
Codon models,Substitution models,13.0,92.0,"If not specified, the default codon frequency will be +F3X4 for MG-type models, +F for GY-type models and given by the model for empirical codon models.",782.0
Binary and morphological models,Substitution models,13.0,93.0,Binary and morphological models,783.0
Binary and morphological models,Substitution models,13.0,93.0,"The binary alignments should contain state 0 and 1, whereas for morphological data, the valid states are 0 to 9 and A to Z.",784.0
Binary and morphological models,Substitution models,13.0,93.0,ModelExplanationJC2Jukes-Cantor type model for binary data.GTR2General time reversible model for binary data.MKJukes-Cantor type model for morphological data.ORDEREDAllowing exchange of neighboring states only.,785.0
Binary and morphological models,Substitution models,13.0,93.0,"Except for GTR2 that has unequal state frequencies, all other models have equal state frequencies.",786.0
Binary and morphological models,Substitution models,13.0,93.0,"TIP: If morphological alignments do not contain constant sites (typically the case), then an ascertainment bias correction model (+ASC) should be applied to correct the branch lengths for the absence of constant sites.",787.0
Ascertainment bias correction,Substitution models,13.0,94.0,Ascertainment bias correction,788.0
Ascertainment bias correction,Substitution models,13.0,94.0,"An ascertainment bias correction (+ASC) model (Lewis, 2001) should be applied if the alignment does not contain constant sites (such as morphological or SNPs data). For example:",789.0
Ascertainment bias correction,Substitution models,13.0,94.0,MK+ASC: For morphological data.GTR+ASC: For SNPs data.,790.0
Ascertainment bias correction,Substitution models,13.0,94.0,"+ASC will correct the likelihood conditioned on variable sites. Without +ASC, the branch lengths might be overestimated.",791.0
Rate heterogeneity across sites,Substitution models,13.0,95.0,Rate heterogeneity across sites,792.0
Rate heterogeneity across sites,Substitution models,13.0,95.0,IQ-TREE supports all common rate heterogeneity across sites models:,793.0
Rate heterogeneity across sites,Substitution models,13.0,95.0,"RateTypeExplanation+Iallowing for a proportion of invariable sites.+Gdiscrete Gamma model (Yang, 1994) with default 4 rate categories. The number of categories can be changed with e.g. +G8.+I+Ginvariable site plus discrete Gamma model (Gu et al., 1995).+RFreeRate model (Yang, 1995; Soubrier et al., 2012) that generalizes the +G model by relaxing the assumption of Gamma-distributed rates. The number of categories can be specified with e.g. +R6 (default 4 categories if not specified). The FreeRate model typically fits data better than the +G model and is recommended for analysis of large data sets.+I+Rinvariable site plus FreeRate model.",794.0
Rate heterogeneity across sites,Substitution models,13.0,95.0,"TIP: The new ModelFinder (-m MFP option) tests the FreeRate model, whereas the standard procedure (-m TEST) does not.",795.0
Rate heterogeneity across sites,Substitution models,13.0,95.0,"Users can fix the parameters of the model. For example, +I{0.2} will fix the proportion of invariable sites (pinvar) to 0.2; +G{0.9} will fix the Gamma shape parameter (alpha) to 0.9; +I{0.2}+G{0.9} will fix both pinvar and alpha. To fix the FreeRate model parameters, use the syntax +Rk{w1,r1,...,wk,rk} (replacing k with the number of categories). Here, w1, ..., wk are the weights and r1, ..., rk the rates for each category.",796.0
Rate heterogeneity across sites,Substitution models,13.0,95.0,"NOTE: For the +G model IQ-TREE implements the mean approximation approach (Yang, 1994). The same is done in RAxML and PhyML. However, some programs like TREE-PUZZLE implement the median approximation approach, which makes the resulting log-likelihood not comparable. IQ-TREE can change to this approach via the -gmedian option.",797.0
Tree Inference,Web server tutorial,14.0,96.0,Tree Inference,798.0
Tree Inference,Web server tutorial,14.0,96.0,"Tree Inference provides the most frequently used features of IQ-TREE and allows users to carry out phylogenetic analysis on a multiple sequence alignment (MSA). In the most basic case, no more than an MSA file is required to submit the job. Without further input, IQ-TREE will run with the default parameters and auto-detect the sequence type as well as the best-fitting substitution model. Additionally, Ultrafast Bootstrap (Hoang et al., 2018) and the SH-aLRT branch test (Guindon et al., 2010) will be performed.",799.0
Tree Inference,Web server tutorial,14.0,96.0,"You can either try out the web server with an example alignment by ticking the corresponding box or upload your own alignment file. By clicking on ‘Browse’ a dialog will open where you can select your MSA; the file formats Phylip, Fasta, Nexus, Clustal and MSF are supported.",800.0
Tree Inference,Web server tutorial,14.0,96.0,"After that you can submit the job. If you provide an email address, a notification will be sent to you once the job is finished. In case you don’t specify an email address, you will receive a link in the next step; you can bookmark this link to retrieve your results after the job is finished.",801.0
Model Selection,Web server tutorial,14.0,97.0,Model Selection,802.0
Model Selection,Web server tutorial,14.0,97.0,"IQ-TREE supports a wide range of substitution models for DNA, protein, codon, binary and morphological alignments. In case you do not know which model is appropriate for your data, IQ-TREE can automatically determine the best-fit model for your alignment. Use the Model Selection tab if you only want to find the best-fit model without doing tree reconstruction.",803.0
Model Selection,Web server tutorial,14.0,97.0,"Like with Tree Inference, the only obligatory input is a multiple sequence alignment. You can either upload your own alignment file or use the example alignment to try out the web server and then submit the job.",804.0
Analysis Results,Web server tutorial,14.0,98.0,Analysis Results,805.0
Analysis Results,Web server tutorial,14.0,98.0,"In the tab Analysis Results you can monitor your jobs. With our example file, a run will only take a few seconds, depending on the server load. For your own alignments the CPU time limit is 24 hours. If you provided an email address when submitting the job, you will get an email once it is finished.",806.0
Analysis Results,Web server tutorial,14.0,98.0,"Once a job is finished, you can select it by checking the corresponding box and then download the selected jobs as a zip file. This zip file will contain the results of your run, including the Run Log and the Full Result which are also accessible in the webserver.",807.0
Analysis Results,Web server tutorial,14.0,98.0,"SuffixExplanation.iqtreeFull result of the run, this is the main report file.logRun log.treefileMaximum likelihood tree in NEWICK format, can be visualized with treeviewer programs.svgGraphical tree representation in SVG format, done with ete view.pdfGraphical tree representation in PDF format, done with ete view.contreeConsensus tree with assigned branch supports where branch lengths are optimized on the original alignment; printed if Ultrafast Bootstrap is selected.ckp.gzCheckpoint file; included if a job was stopped because of RAM/CPU limits",808.0
Analysis Results,Web server tutorial,14.0,98.0,"NOTE: Jobs which require more than 24 hours or 1GB RAM will be stopped. In such a case, you can download the stopped job and resume the run from the last checkpoint on your local PC as described here.",809.0
