sentence_index,intent,sentence,intent_index,intent_group,intent_group_index,sub_i
1.0,Partitioned analysis for multi-gene alignments,Partitioned analysis for multi-gene alignments,1.0,Advanced tutorial,1.0,1.0
2.0,Partitioned analysis for multi-gene alignments,If you used partition model in a publication please cite,1.0,Advanced tutorial,1.0,2.0
3.0,Partitioned analysis for multi-gene alignments,"O. Chernomor, A. von Haeseler, and B.Q. Minh (2016) Terrace aware data structure for phylogenomic inference from supermatrices. Syst. Biol., 65997-1008. https//doi.org/10.1093/sysbio/syw037",1.0,Advanced tutorial,1.0,3.0
4.0,Partitioned analysis for multi-gene alignments,"In the partition model, you can specify a substitution model for each gene/character set.   will then estimate the model parameters separately for every partition. Moreover,   provides edge-linked or edge-unlinked branch lengths between partitions",1.0,Advanced tutorial,1.0,4.0
5.0,Partitioned analysis for multi-gene alignments,"-q partition_file all partitions share the same set of branch lengths (like -q option of RAxML).-p partition_file (-spp in version 1.x) like above but allowing each partition to have its own evolution rate.-Q partition_file (-sp in version 1.x) each partition has its own set of branch lengths (like combination of -q and -M options in RAxML) to account for, e.g. heterotachy (Lopez et al., 2002).",1.0,Advanced tutorial,1.0,5.0
6.0,Partitioned analysis for multi-gene alignments,NOTE -p is recommended for typical analysis. -q is unrealistic and -Q is very parameter-rich. One can also perform all three analyses and compare e.g. the BIC scores to determine the best-fit partition model.,1.0,Advanced tutorial,1.0,6.0
7.0,Partitioned analysis for multi-gene alignments,  supports RAxML-style and NEXUS partition input file. The RAxML-style partition file may look like,1.0,Advanced tutorial,1.0,7.0
8.0,Partitioned analysis for multi-gene alignments,"DNA, part1 = 1-100DNA, part2 = 101-384",1.0,Advanced tutorial,1.0,8.0
9.0,Partitioned analysis for multi-gene alignments,"If your partition file is called example.partitions, the partition analysis can be run with",1.0,Advanced tutorial,1.0,9.0
10.0,Partitioned analysis for multi-gene alignments,iqtree -s example.phy -p example.partitions -m GTR I G for version 1.x change -p to -spp,1.0,Advanced tutorial,1.0,10.0
11.0,Partitioned analysis for multi-gene alignments,"Note that using RAxML-style partition file, all partitions will use the same rate heterogeneity model given in -m option ( I G in this example). If you want to specify, say,  G for the first partition and  I G for the second partition, then you need to create the more flexible NEXUS partition file. This file contains a SETS block with CharSet and CharPartition commands to specify individual genes and the partition, respectively. For example",1.0,Advanced tutorial,1.0,11.0
12.0,Partitioned analysis for multi-gene alignments,"nexusbegin sets;    charset part1 = 1-100;    charset part2 = 101-384;    charpartition mine = HKY Gpart1, GTR I Gpart2;end;",1.0,Advanced tutorial,1.0,12.0
13.0,Partitioned analysis for multi-gene alignments,"If your NEXUS file is called example.nex, then you can use the option -p to input the file as following",1.0,Advanced tutorial,1.0,13.0
14.0,Partitioned analysis for multi-gene alignments,iqtree -s example.phy -p example.nex for version 1.x change -p to -spp,1.0,Advanced tutorial,1.0,14.0
15.0,Partitioned analysis for multi-gene alignments,"Here,   partitions the alignment example.phy into 2 sub-alignments named part1 and part2 containing sites (columns) 1-100 and 101-384, respectively. Moreover,   applies the subtitution models HKY G and GTR I G to part1 and part2, respectively. Substitution model parameters and trees with branch lengths can be found in the result file example.nex.iqtree.",1.0,Advanced tutorial,1.0,15.0
16.0,Partitioned analysis for multi-gene alignments,"Moreover, the CharSet command allows to specify non-consecutive sites with e.g.",1.0,Advanced tutorial,1.0,16.0
17.0,Partitioned analysis for multi-gene alignments,charset part1 = 1-100 200-384;,1.0,Advanced tutorial,1.0,17.0
18.0,Partitioned analysis for multi-gene alignments,"That means, part1 contains sites 1-100 and 200-384 of the alignment. Another example is",1.0,Advanced tutorial,1.0,18.0
19.0,Partitioned analysis for multi-gene alignments,charset part1 = 1-100\3;,1.0,Advanced tutorial,1.0,19.0
20.0,Partitioned analysis for multi-gene alignments,"for extracting sites 1,4,7,…,100 from the alignment. This is useful for getting codon positions from the protein-coding alignment.",1.0,Advanced tutorial,1.0,20.0
21.0,Partitioned analysis with mixed data,Partitioned analysis with mixed data,2.0,Advanced tutorial,1.0,1.0
22.0,Partitioned analysis with mixed data,"  also allows combining sub-alignments from different alignment files, which is helpful if you want to combine mixed data (e.g. DNA and protein) in a single analysis. Here is an example for mixing DNA, protein and codon models",2.0,Advanced tutorial,1.0,2.0
23.0,Partitioned analysis with mixed data,"nexusbegin sets;    charset part1 = dna.phy 1-100 201-300;    charset part2 = dna.phy 101-200;    charset part3 = prot.phy 1-400;    charset part4 = prot.phy 401-600;    charset part5 = codon.phyCODON, *;    charpartition mine = HKYpart1, GTR Gpart2, LG Gpart3, WAG I Gpart4, GYpart5;end;",2.0,Advanced tutorial,1.0,3.0
24.0,Partitioned analysis with mixed data,"Here, part1 and part2 contain sub-alignments from alignment file dna.phy, whereas part3 and part4 are loaded from alignment file prot.phy and part5 from codon.phy. The  is needed to separate the alignment file name and site specification. Note that, for convenience * in part5 specification means that part5 corresponds to the entire alignment codon.phy.",2.0,Advanced tutorial,1.0,4.0
25.0,Partitioned analysis with mixed data,"TIP For part5 the CODON keyword is specified so that   will apply a codon model. Moreover, this implicitly assumes the standard genetic code. If you want to use another genetic code, append CODON with the code ID described here",2.0,Advanced tutorial,1.0,5.0
26.0,Partitioned analysis with mixed data,"Because the alignment file names are now specified in this NEXUS file, you can omit the -s option",2.0,Advanced tutorial,1.0,6.0
27.0,Partitioned analysis with mixed data,iqtree -p example.nex for version 1.x change -p to -spp,2.0,Advanced tutorial,1.0,7.0
28.0,Partitioned analysis with mixed data,"Note that aln.phy and prot.phy does not need to contain the same set of sequences. For instance, if some sequence occurs in aln.phy but not in prot.phy,   will treat the corresponding parts of sequence in prot.phy as missing data. For your convenience   writes the concatenated alignment into the file example.nex.conaln.",2.0,Advanced tutorial,1.0,8.0
29.0,Choosing the right partitioning scheme,Choosing the right partitioning scheme,3.0,Advanced tutorial,1.0,1.0
30.0,Choosing the right partitioning scheme,"ModelFinder implements a greedy strategy (Lanfear et al., 2012) that starts with the full partition model and subsequentially merges two genes until the model fit does not increase any further",3.0,Advanced tutorial,1.0,2.0
31.0,Choosing the right partitioning scheme,iqtree -s example.phy -p example.nex -m MFP MERGE for version 1.x change -p to -spp,3.0,Advanced tutorial,1.0,3.0
32.0,Choosing the right partitioning scheme,"Note that this command considers the FreeRate heterogeneity model (see model selection tutorial). If you want to resemble PartitionFinder by just considering the invariable site and Gamma rate heterogeneity (thus saving computation times), then run",3.0,Advanced tutorial,1.0,4.0
33.0,Choosing the right partitioning scheme,iqtree -s example.phy -p example.nex -m TESTMERGE for version 1.x change -p to -spp,3.0,Advanced tutorial,1.0,5.0
34.0,Choosing the right partitioning scheme,"After ModelFinder found the best partition,   will immediately start the tree reconstruction under the best-fit partition model. Sometimes you only want to find the best-fit partition model without doing tree reconstruction, then run",3.0,Advanced tutorial,1.0,6.0
35.0,Choosing the right partitioning scheme,iqtree -s example.phy -p example.nex -m MF MERGE for version 1.x change -p to -spp,3.0,Advanced tutorial,1.0,7.0
36.0,Choosing the right partitioning scheme,To resemble PartitionFinder and save time,3.0,Advanced tutorial,1.0,8.0
37.0,Choosing the right partitioning scheme,iqtree -s example.phy -p example.nex -m TESTMERGEONLY for version 1.x change -p to -spp,3.0,Advanced tutorial,1.0,9.0
38.0,Choosing the right partitioning scheme,"To reduce the computational burden   implements the relaxed hierarchical clustering algorithm (Lanfear et al., 2014), which is invoked via -rcluster option",3.0,Advanced tutorial,1.0,10.0
39.0,Choosing the right partitioning scheme,iqtree -s example.phy -p example.nex -m MF MERGE -rcluster 10 for version 1.x change -p to -spp,3.0,Advanced tutorial,1.0,11.0
40.0,Choosing the right partitioning scheme,to only examine the top 10% partition merging schemes (similar to the --rcluster-percent 10 option in PartitionFinder).,3.0,Advanced tutorial,1.0,12.0
41.0,Ultrafast bootstrapping with partition model,Ultrafast bootstrapping with partition model,4.0,Advanced tutorial,1.0,1.0
42.0,Ultrafast bootstrapping with partition model,"  can perform the ultrafast bootstrap with partition models by e.g.,",4.0,Advanced tutorial,1.0,2.0
43.0,Ultrafast bootstrapping with partition model,iqtree -s example.phy -p example.nex -B 1000 for version 1.x change -p to -spp and -B to -bb,4.0,Advanced tutorial,1.0,3.0
44.0,Ultrafast bootstrapping with partition model,"Here,   will resample the sites within partitions (i.e., the bootstrap replicates are generated per partition separately and then concatenated together). The same holds true if you do the standard nonparametric bootstrap.",4.0,Advanced tutorial,1.0,4.0
45.0,Ultrafast bootstrapping with partition model,"  supports the partition-resampling strategy as suggested by (Nei et al., 2001)",4.0,Advanced tutorial,1.0,5.0
46.0,Ultrafast bootstrapping with partition model,iqtree -s example.phy -p example.nex -B 1000 --sampling GENE for version 1.x change -p to -spp and -B to -bb and --sampling to -bsam,4.0,Advanced tutorial,1.0,6.0
47.0,Ultrafast bootstrapping with partition model,"to resample partitions instead of sites. Moreover,   allows an even more complicated strategy resampling partitions and then sites within resampled partitions (Gadagkar et al., 2005; Seo et al., 2005). This may help to reduce false positives (i.e. wrong branch receiving 100% support)",4.0,Advanced tutorial,1.0,7.0
48.0,Ultrafast bootstrapping with partition model,iqtree -s example.phy -p example.nex -B 1000 --sampling GENESITE for version 1.x change -p to -spp and -B to -bb and --sampling to -bsam,4.0,Advanced tutorial,1.0,8.0
49.0,Constrained tree search,Constrained tree search,5.0,Advanced tutorial,1.0,1.0
50.0,Constrained tree search,"  supports constrained tree search via -g option, so that the resulting tree must obey a constraint tree topology. The constraint tree can be multifurcating and need not to contain all species. To illustrate, let’s return to the first running example, where we want to force Human grouping with Seal whereas Cow with Whale. If you use the following constraint tree (NEWICK format)",5.0,Advanced tutorial,1.0,2.0
51.0,Constrained tree search,"((Human,Seal),(Cow,Whale));",5.0,Advanced tutorial,1.0,3.0
52.0,Constrained tree search,Save this to a file example.constr0 and run,5.0,Advanced tutorial,1.0,4.0
53.0,Constrained tree search,iqtree -s example.phy -m TIM2 I G -g example.constr0 --prefix example.constr0 for version 1.x change --prefix to -pre,5.0,Advanced tutorial,1.0,5.0
54.0,Constrained tree search,(We use a prefix in order not to overwrite output files of the previous run). The resulting part of the tree extracted from example.constr0.iqtree looks exactly like a normal unconstrained tree search,5.0,Advanced tutorial,1.0,6.0
56.0,Constrained tree search,"This is the correct behavior although Human and Seal are not monophyletic, this tree indeed satisfies the constraint, because the induced subtree separates (Human,Seal) from (Cow,Whale). This comes from the fact that the tree is unrooted. If you want them to be sister groups, then you need to include outgroup taxa into the constraint tree. For example",5.0,Advanced tutorial,1.0,8.0
57.0,Constrained tree search,"((Human,Seal),(Cow,Whale),Mouse);",5.0,Advanced tutorial,1.0,9.0
58.0,Constrained tree search,Save this to example.constr1 and run,5.0,Advanced tutorial,1.0,10.0
59.0,Constrained tree search,iqtree -s example.phy -m TIM2 I G -g example.constr1 --prefix example.constr1 for version 1.x change --prefix to -pre,5.0,Advanced tutorial,1.0,11.0
60.0,Constrained tree search,The resulting part of the tree is then,5.0,Advanced tutorial,1.0,12.0
62.0,Constrained tree search,which shows the desired effect.,5.0,Advanced tutorial,1.0,14.0
63.0,Constrained tree search,"NOTE While this option helps to enforce the tree based on prior knowledge, it is advised to always perform tree topology tests to make sure that the resulting constrained tree is NOT significantly worse than an unconstrained tree See tree topology tests and testing constrained tree below for a guide how to check this.",5.0,Advanced tutorial,1.0,15.0
64.0,Tree topology tests,Tree topology tests,6.0,Advanced tutorial,1.0,1.0
65.0,Tree topology tests,  can compute log-likelihoods of a set of trees passed via the -z option,6.0,Advanced tutorial,1.0,2.0
66.0,Tree topology tests,iqtree -s example.phy -z example.treels -m GTR G,6.0,Advanced tutorial,1.0,3.0
67.0,Tree topology tests,"assuming that example.treels is an existing file containing a set of trees in NEWICK format.   first reconstructs an ML tree. Then, it will compute the log-likelihood of the trees in example.treels based on the estimated parameters done for the ML tree. example.phy.iqtree will have a section called USER TREES that lists the tree IDs and the corresponding log-likelihoods. The trees with optimized branch lengths can be found in example.phy.treels.trees If you only want to evaluate the trees without reconstructing the ML tree, you can run",6.0,Advanced tutorial,1.0,4.0
68.0,Tree topology tests,iqtree -s example.phy -z example.treels -n 0,6.0,Advanced tutorial,1.0,5.0
69.0,Tree topology tests,"Here, the number of search iterations is set to 0 (-n 0), such that model parameters are quickly estimated from an initial parsimony tree, which is normally accurate enough for our purpose. If you, however, prefer to estimate model parameters based on a tree (e.g. reconstructed previously), use -te <treefile> option.",6.0,Advanced tutorial,1.0,6.0
70.0,Tree topology tests,"  also supports several tree topology tests using the RELL approximation (Kishino et al., 1990). This includes bootstrap proportion (BP), Kishino-Hasegawa test (Kishino and Hasegawa, 1989), Shimodaira-Hasegawa test (Shimodaira and Hasegawa, 1999), expected likelihood weights (Strimmer and Rambaut, 2002)",6.0,Advanced tutorial,1.0,7.0
71.0,Tree topology tests,iqtree -s example.phy -z example.treels -n 0 -zb 1000,6.0,Advanced tutorial,1.0,8.0
72.0,Tree topology tests,"Here, -zb specifies the number of RELL replicates, where 1000 is the recommended minimum number. The USER TREES section of example.phy.iqtree will list the results of BP, KH, SH, and ELW methods.",6.0,Advanced tutorial,1.0,9.0
73.0,Tree topology tests,"If you also want to perform the weighted KH and weighted SH tests, simply add -zw option",6.0,Advanced tutorial,1.0,10.0
74.0,Tree topology tests,iqtree -s example.phy -z example.treels -n 0 -zb 1000 -zw,6.0,Advanced tutorial,1.0,11.0
75.0,Tree topology tests,"Starting with version 1.4.0   supports approximately unbiased (AU) test (Shimodaira, 2002) via -au option",6.0,Advanced tutorial,1.0,12.0
76.0,Tree topology tests,iqtree -s example.phy -z example.treels -n 0 -zb 1000 -zw -au,6.0,Advanced tutorial,1.0,13.0
77.0,Tree topology tests,This will perform all above tests plus the AU test.,6.0,Advanced tutorial,1.0,14.0
78.0,Tree topology tests,"Finally, note that   will automatically detect duplicated tree topologies and omit them during the evaluation.",6.0,Advanced tutorial,1.0,15.0
79.0,Tree topology tests,"HINTSThe KH, SH and AU tests return p-values, thus a tree is rejected if its p-value < 0.05 (marked with a - sign).bp-RELL and c-ELW return posterior weights which are not p-value. The weights sum up to 1 across the trees tested.The KH test (Kishino and Hasegawa, 1989) was designed to test 2 trees and thus has no correction for multiple testing. The SH test (Shimodaira and Hasegawa, 1999) fixes this problem.However, the SH test becomes too conservative (i.e., rejecting fewer trees than expected) when testing many trees. The AU test (Shimodaira, 2002) fixes this problem and is thus recommended as replacement for both KH and SH tests.",6.0,Advanced tutorial,1.0,16.0
80.0,Testing constrained tree,Testing constrained tree,7.0,Advanced tutorial,1.0,1.0
81.0,Testing constrained tree,"We now illustrate an example to use the AU test (see above) to test trees from unconstrained versus constrained search, which is helpful to know if a constrained search is sensible or not. Thus",7.0,Advanced tutorial,1.0,2.0
82.0,Testing constrained tree,"Perform an unconstrained search iqtree -s example.phy -m TIM2 I G --prefix example.unconstr  for version 1.x change --prefix to -prePerform a constrained search, where example.constr1 file contains ((Human,Seal),(Cow,Whale),Mouse); iqtree -s example.phy -m TIM2 I G -g example.constr1 --prefix example.constr1  for version 1.x change --prefix to -prePerform another constrained search, where example.constr2 file contains ((Human,Cow,Whale),Seal,Mouse); iqtree -s example.phy -m TIM2 I G -g example.constr2 --prefix example.constr2  for version 1.x change --prefix to -prePerform the last constrained search, where example.constr3 file contains ((Human,Mouse),(Cow,Rat),Opossum); iqtree -s example.phy -m TIM2 I G -g example.constr3 --prefix example.constr3  for version 1.x change --prefix to -preConcatenate all trees into a file  for Linux or macOS cat example.unconstr.treefile example.constr1.treefile example.constr2.treefile example.constr3.treefile > example.treels      for Windows type example.unconstr.treefile example.constr1.treefile example.constr2.treefile example.constr3.treefile > example.treelsTest the set of trees iqtree -s example.phy -m TIM2 I G -z example.treels -n 0 -zb 1000 -au",7.0,Advanced tutorial,1.0,3.0
83.0,Testing constrained tree,Now look at the resulting .iqtree file,7.0,Advanced tutorial,1.0,4.0
85.0,Testing constrained tree,"One sees that the AU test does not reject the first 3 trees (denoted by   sign below the p-AU column), whereas the last tree is significantly excluded (- sign). All other tests also agree with this. Therefore, groupings of (Human,Mouse) and (Cow,Rat) do not make sense. Whereas the phylogenetic position of Seal based on 3 first trees is still undecidable. This is in agreement with the SH-aLRT and ultrafast bootstrap supports done in the Tutorial.",7.0,Advanced tutorial,1.0,6.0
86.0,Consensus construction and bootstrap value assignment,Consensus construction and bootstrap value assignment,8.0,Advanced tutorial,1.0,1.0
87.0,Consensus construction and bootstrap value assignment,"  can construct an extended majority-rule consensus tree from a set of trees written in NEWICK or NEXUS format (e.g., produced by MrBayes)",8.0,Advanced tutorial,1.0,2.0
88.0,Consensus construction and bootstrap value assignment,iqtree -con mytrees,8.0,Advanced tutorial,1.0,3.0
89.0,Consensus construction and bootstrap value assignment,"To build a majority-rule consensus tree, simply set the minimum support threshold to 0.5",8.0,Advanced tutorial,1.0,4.0
90.0,Consensus construction and bootstrap value assignment,iqtree -con mytrees -minsup 0.5,8.0,Advanced tutorial,1.0,5.0
91.0,Consensus construction and bootstrap value assignment,"If you want to specify a burn-in (the number of beginning trees to ignore from the trees file), use -bi option",8.0,Advanced tutorial,1.0,6.0
92.0,Consensus construction and bootstrap value assignment,iqtree -con mytrees -minsup 0.5 -bi 100,8.0,Advanced tutorial,1.0,7.0
93.0,Consensus construction and bootstrap value assignment,to skip the first 100 trees in the file.,8.0,Advanced tutorial,1.0,8.0
94.0,Consensus construction and bootstrap value assignment,  can also compute a consensus network and print it into a NEXUS file by,8.0,Advanced tutorial,1.0,9.0
95.0,Consensus construction and bootstrap value assignment,iqtree -net mytrees,8.0,Advanced tutorial,1.0,10.0
96.0,Consensus construction and bootstrap value assignment,"Finally, a useful feature is to read in an input tree and a set of trees, then   can assign the support value onto the input tree (number of times each branch in the input tree occurs in the set of trees). This option is useful if you want to compute the support values for an ML tree based on alternative topologies.",8.0,Advanced tutorial,1.0,11.0
97.0,Consensus construction and bootstrap value assignment,iqtree -sup input_tree set_of_trees,8.0,Advanced tutorial,1.0,12.0
98.0,User-defined substitution models,User-defined substitution models,9.0,Advanced tutorial,1.0,1.0
99.0,User-defined substitution models,"Users can specify any DNA model using a 6-letter code that defines which rates should be equal. For example, 010010 corresponds to the HKY model and 012345 to the GTR model. In fact,   uses this specification internally to simplify the coding. The 6-letter code is specified via the -m option, e.g.",9.0,Advanced tutorial,1.0,2.0
100.0,User-defined substitution models,iqtree -s example.phy -m 010010 G,9.0,Advanced tutorial,1.0,3.0
101.0,User-defined substitution models,"Moreover, with the -m option one can input a file which contains the 6 rates (A-C, A-G, A-T, C-G, C-T, G-T) and 4 base frequencies (A, C, G, T). For example",9.0,Advanced tutorial,1.0,4.0
102.0,User-defined substitution models,iqtree -s example.phy -m mymodel G,9.0,Advanced tutorial,1.0,5.0
103.0,User-defined substitution models,"where mymodel is a file containing the 10 entries described above, in the correct order. The entries can be seperated by either empty space(s) or newline character. One can even specify the rates within -m option by e.g.",9.0,Advanced tutorial,1.0,6.0
104.0,User-defined substitution models,"iqtree -s example.phy -m 'TN{2.0,3.0} G8{0.5} I{0.15}'",9.0,Advanced tutorial,1.0,7.0
105.0,User-defined substitution models,"That means, we use Tamura-Nei model with fixed transition-transversion rate ratio of 2.0 and purine/pyrimidine rate ratio of 3.0. Moreover, we use 8-category Gamma-distributed site rates with the shape parameter (alpha) equal to 0.5 and a proportion of invariable sites p-inv=0.15.",9.0,Advanced tutorial,1.0,8.0
106.0,User-defined substitution models,"By default   computes empirical state frequencies from the alignment by counting, but one can also estimate the frequencies by maximum-likelihood with  Fo in the model name",9.0,Advanced tutorial,1.0,9.0
107.0,User-defined substitution models,iqtree -s example.phy -m GTR G Fo,9.0,Advanced tutorial,1.0,10.0
108.0,User-defined substitution models,"For amino-acid alignments,   use the empirical frequencies specified in the model. If you want frequencies as counted from the alignment, use  F, for example",9.0,Advanced tutorial,1.0,11.0
109.0,User-defined substitution models,iqtree -s myprotein_alignment -m WAG G F,9.0,Advanced tutorial,1.0,12.0
110.0,User-defined substitution models,Note that all model specifications above can be used in the partition model NEXUS file.,9.0,Advanced tutorial,1.0,13.0
111.0,Inferring site-specific rates,Inferring site-specific rates,10.0,Advanced tutorial,1.0,1.0
112.0,Inferring site-specific rates,"  allows to infer site-specific evolutionary rates if a site-rate heterogeneity model such as Gamma or FreeRate is the best model. Here,   will estimate model parameters and then apply an empirical Bayesian approach to assign site-rates as the mean over rate categories, weighted by the posterior probability of the site falling into each category. This approach is provided in   because such empirical Bayesian approach was shown to be most accurate (Mayrose et al., 2004). An example run",10.0,Advanced tutorial,1.0,2.0
113.0,Inferring site-specific rates,iqtree -s example.phy --rate for version 1.x change --rate to -wsr,10.0,Advanced tutorial,1.0,3.0
114.0,Inferring site-specific rates,  will write an output file example.phy.rate that looks like,10.0,Advanced tutorial,1.0,4.0
115.0,Inferring site-specific rates,Site    Rate    Category        Categorized_rate1       0.26625 2       0.243932       0.99345 3       0.811243       2.69275 4       2.913674       0.25822 2       0.243935       0.25822 2       0.243936       0.42589 2       0.243937       0.30194 2       0.243938       0.72790 3       0.811249       0.25822 2       0.2439310      0.09177 1       0.03116,10.0,Advanced tutorial,1.0,5.0
116.0,Inferring site-specific rates,"The 1st column is site index of the alignment (starting from 1), the 2nd column Rate shows the mean site-specific rate as explained above, and the 3rd and 4th columns show the category index and rate of the Gamma rate category with the highest probability for this site (1 for slow and 4 for fast rate).",10.0,Advanced tutorial,1.0,6.0
117.0,Inferring site-specific rates,"The above run will perform a full tree search. To speed up you can use -n 0 to only use a parsimony tree for site rate estimates. Or if you have already infered an ML tree, you can specify it to improve the rate estimate",10.0,Advanced tutorial,1.0,7.0
118.0,Inferring site-specific rates,iqtree -s example.phy -t ml.treefile -n 0 --rate  for version 1.x change --rate to -wsr,10.0,Advanced tutorial,1.0,8.0
119.0,Inferring site-specific rates,where -t is the option to input a fixed tree topology and ml.treefile is the ML tree reconstructed previously.,10.0,Advanced tutorial,1.0,9.0
120.0,Inferring site-specific rates,"If you already know the best-fit model for the alignment, you can use specify it via -m option to omit model selection and hence speed it up",10.0,Advanced tutorial,1.0,10.0
121.0,Inferring site-specific rates,iqtree -s example.phy -m GTR R10 -n 0 --rate  for version 1.x change --rate to -wsr,10.0,Advanced tutorial,1.0,11.0
122.0,Inferring site-specific rates,"Finally,   2 allows to estimate rates by maximum likelihood via --mlrate option",10.0,Advanced tutorial,1.0,12.0
123.0,Inferring site-specific rates,iqtree -s example.phy -n 0 --mlrate ,10.0,Advanced tutorial,1.0,13.0
124.0,Inferring site-specific rates,This will print an output file example.phy.mlrate that looks like,10.0,Advanced tutorial,1.0,14.0
125.0,Inferring site-specific rates," Site-specific subtitution rates determined by maximum likelihood This file can be read in MS Excel or in R with command   tab=read.table('example.phy.mlrate',header=TRUE) Columns are tab-separated with following meaning   Site   Alignment site ID   Rate   Site rate estimated by maximum likelihoodSite    Rate1       2.515502       12.891293       34.313504       2.443135       2.443136       4.418897       2.695778       9.275039       2.4431310      0.00001",10.0,Advanced tutorial,1.0,15.0
126.0,Where to go from here?,Where to go from here?,11.0,Advanced tutorial,1.0,1.0
127.0,Where to go from here?,See Command Reference for a complete list of all options available in  .,11.0,Advanced tutorial,1.0,2.0
128.0,Tests of symmetry,Tests of symmetry,12.0,Assessing phylogenetic assumptions,2.0,1.0
129.0,Tests of symmetry,"  provides three matched-pairs tests of symmetry (Naser-Khdour et al., 2019) to test the two assumptions of stationarity and homogeneity. A simple analysis",12.0,Assessing phylogenetic assumptions,2.0,2.0
130.0,Tests of symmetry,iqtree2 -s example.phy -p example.nex --symtest-only,12.0,Assessing phylogenetic assumptions,2.0,3.0
131.0,Tests of symmetry,will perform the three tests of symmetry on every partition of the alignment and print the result into a .symtest.csv file. --symtest-only option tells   to only perform the tests of symmetry and then exit. In this example the content of example.nex.symtest.csv looks like this,12.0,Assessing phylogenetic assumptions,2.0,4.0
132.0,Tests of symmetry," Matched-pair tests of symmetry This file can be read in MS Excel or in R with command    dat=read.csv('example.nex.symtest.csv',comment.char='') Columns are comma-separated with following meanings    Name    Partition name    SymSig  Number of significant sequence pairs by test of symmetry    SymNon  Number of non-significant sequence pairs by test of symmetry    SymPval P-value for maximum test of symmetry    MarSig  Number of significant sequence pairs by test of marginal symmetry    MarNon  Number of non-significant sequence pairs by test of marginal symmetry    MarPval P-value for maximum test of marginal symmetry    IntSig  Number of significant sequence pairs by test of internal symmetry    IntNon  Number of non-significant sequence pairs by test of internal symmetry    IntPval P-value for maximum test of internal symmetryName,SymSig,SymNon,SymPval,MarSig,MarNon,MarPval,IntSig,IntNon,IntPvalpart1,44,92,0.475639,50,86,0.722371,4,132,0.23869part2,43,93,0.142052,49,87,0.205232,5,131,0.169618part3,53,83,0.00499855,58,78,0.00164132,6,130,0.343127",12.0,Assessing phylogenetic assumptions,2.0,5.0
133.0,Tests of symmetry,The three important columns are,12.0,Assessing phylogenetic assumptions,2.0,6.0
134.0,Tests of symmetry,"SymPval a small p-value (say < 0.05) indicates that the assumptions of stationarity or homogeneity or both is rejected. In this case, partition part3 does not comply with these two assumptions (p-value = 0.00499855), whereas the other two partitions are “good”.MarPval a small p-value means that the assumption of stationarity is rejected. In this case, only partition part3 does not comply with the stationary condition (p-value = 0.00164132).IntPval a small p-value means that the homogeneity assumption is reject. In this case, no partitions are “bad” according to this test, i.e., they all comply with the homogeneity assumption.",12.0,Assessing phylogenetic assumptions,2.0,7.0
135.0,Tests of symmetry,This little example shows that only part3 is problematic by not complying with the stationary assumption.,12.0,Assessing phylogenetic assumptions,2.0,8.0
136.0,Tests of symmetry,Now you may want to perform the phylogenetic analysis excluding all “bad” partitions by,12.0,Assessing phylogenetic assumptions,2.0,9.0
137.0,Tests of symmetry,iqtree2 -s example.phy -p example.nex --symtest-remove-bad,12.0,Assessing phylogenetic assumptions,2.0,10.0
138.0,Tests of symmetry,that will remove all “bad” partitions where SymPval < 0.05 and continue the analysis with the remaining “good” partitions. You may then compare the trees from “all” partitions and from “good” only partitions to see if there is significant difference between them with tree topology tests.,12.0,Assessing phylogenetic assumptions,2.0,11.0
139.0,Tests of symmetry,Other options can be seen when running iqtree2 -h,12.0,Assessing phylogenetic assumptions,2.0,12.0
140.0,Tests of symmetry,TEST OF SYMMETRY  --symtest               Perform three tests of symmetry  --symtest-only          Do --symtest then exist  --symtest-remove-bad    Do --symtest and remove bad partitions  --symtest-remove-good   Do --symtest and remove good partitions  --symtest-type MAR|INT  Use MARginal/INTernal test when removing partitions  --symtest-pval NUMER    P-value cutoff (default 0.05)  --symtest-keep-zero     Keep NAs in the tests,12.0,Assessing phylogenetic assumptions,2.0,13.0
141.0,Likelihood mapping,Likelihood mapping,13.0,Assessing phylogenetic assumptions,2.0,1.0
142.0,Likelihood mapping,"Likelihood mapping (Strimmer and von Haeseler, 1997) is a visualisation method to display the phylogenetic information of an alignment. It visualises the treelikeness of all quartets in a single triangular graph and therefore renders a quick interpretation of the phylogenetic content.",13.0,Assessing phylogenetic assumptions,2.0,2.0
143.0,Likelihood mapping,A simple likelihood mapping analysis can be conducted with,13.0,Assessing phylogenetic assumptions,2.0,3.0
144.0,Likelihood mapping,iqtree -s example.phy -lmap 2000 -n 0,13.0,Assessing phylogenetic assumptions,2.0,4.0
145.0,Likelihood mapping,where -lmap option specify the number of quartets of taxa that will be drawn randomly from the alignment. -n 0 tells   to stop the analysis right after running the likelihood mapping.   will print the result in the .iqtree report file as well as the likelihood mapping plot .lmap.svg (in SVG format) and .lmap.eps file (in EPS figure format).,13.0,Assessing phylogenetic assumptions,2.0,5.0
146.0,Likelihood mapping,"You can now view the likelihood mapping plot file example.phy.lmap.svg, which looks like this",13.0,Assessing phylogenetic assumptions,2.0,6.0
147.0,Likelihood mapping,It shows phylogenetic information of the alignment example.phy.,13.0,Assessing phylogenetic assumptions,2.0,7.0
148.0,Likelihood mapping,"Top sub-figure distribution of quartets depicted by dots on the likelihood mapping plot.Left sub-figure percentages of quartets falling in each of the three areas. The three areas show support for one of the different groupings like (a,b)-(c,d).Right sub-figure percentages of quartets falling in each of the seven areas. Quartets falling into the three corners are informative and called fully-resolved quartets. Those in three rectangles are partly informative (partly resolved quartets) and those in the center are uninformative (unresolved quartets). A good data set should have high number of fully resolved quartets and low number of unresolved quartets.",13.0,Assessing phylogenetic assumptions,2.0,8.0
149.0,Likelihood mapping,The meanings can also be found in the LIKELIHOOD MAPPING STATISTICS section of the report file example.phy.iqtree,13.0,Assessing phylogenetic assumptions,2.0,9.0
151.0,Likelihood mapping,"The command reference will provide more options and how to perform 2-, 3-, or 4-cluster likelihood mapping analysis.",13.0,Assessing phylogenetic assumptions,2.0,11.0
